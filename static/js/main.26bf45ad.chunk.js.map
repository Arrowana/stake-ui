{"version":3,"sources":["../../src/layout.js","skin/index.ts","../../src/token-instructions.js","../../src/tokens_and_markets.ts","store/actions.ts","../../src/instructions.js","../../src/queue.ts","../../src/fees.ts","../../../src/simulate-transaction.ts","utils/tokens.ts","components/Stake.tsx","idl/lockup.ts","idl/registry.ts","components/common/WalletProvider.tsx","../../../src/index.ts","../../src/index.js","../../src/market.ts","../../src/slab.ts","../../../src/provider.ts","../../../src/token.ts","../../../src/connection.ts","store/reducer.ts","store/index.ts","components/common/BootstrapProvider.tsx","components/common/Header.tsx","components/common/Footer.tsx","components/common/Layout.tsx","components/common/OwnedTokenAccountsSelect.tsx","../../src/index.ts","components/common/RegistrarSelect.tsx","components/Me.tsx","utils/lockup.ts","components/rewards/RewardsList.tsx","components/rewards/DropRewardButton.tsx","components/common/MyNode.tsx","components/rewards/ClaimRewardButton.tsx","components/rewards/Rewards.tsx","components/common/VestingAccountsSelect.tsx","pages/MyNode.tsx","components/lockups/NewVesting.tsx","components/lockups/VestingAccountCard.tsx","components/lockups/Vestings.tsx","pages/Lockup.tsx","App.tsx","reportWebVitals.ts","index.tsx","utils/registry.ts","components/common/Notification.tsx","store/config.ts"],"names":["BNLayout","buffer_layout_1","Blob","b","_skin","active","ready","notReady","inactive","deactivating","instance","BufferLayout","u8","layout_1","publicKeyLayout","LAYOUT","addVariant","struct","programId","exports","address","name","ActionType","INSTRUCTION_LAYOUT","sideLayout","u64","feeTier","fromDisplay","amount","decimals","BN","toDisplay","toNumber","toString","toDisplayLabel","mint","whitelistedMint","Object","keys","networks","mainnet","mints","filter","label","equals","pop","toUpperCase","Stake","registryClient","useWallet","dispatch","useDispatch","useSelector","state","registrarAccount","accounts","registry","registrar","member","memberAccount","undefined","useSnackbar","enqueueSnackbar","closeSnackbar","createPoolTokens","isLocked","a","poolMint","variant","rpc","rewardEventQ","provider","wallet","publicKey","balances","balancesLocked","memberSigner","registrarSigner","SYSVAR_CLOCK_PUBKEY","TokenInstructions","TOKEN_PROGRAM_ID","beneficiary","clock","tokenProgram","stake","tx","action","signature","redeemPoolTokens","pendingWithdrawal","Account","SYSVAR_RENT_PUBKEY","rent","account","createInstruction","signers","instructions","startUnstake","pwAccount","type","RegistryCreatePendingWithdrawal","item","createPool","shares","catch","err","console","error","redeemPool","style","display","width","flex","marginTop","marginBottom","PoolCard","title","create","redeem","RedemptionList","props","useState","poolAmount","setPoolAmount","setIsLocked","poolTokenMint","pricePerShare","stakeRate","cost","mul","justifyContent","subheader","paddingRight","flexDirection","color","fontWeight","supply","onChange","e","parseInt","target","value","disabled","onClick","marginLeft","control","checked","labelPlacement","pendingWithdrawals","map","pw","useEffect","Buffer","concat","toBuffer","all","then","RegistrySetPendingWithdrawals","paddingLeft","paddingBottom","paddingTop","marginRight","borderBottom","fontSize","length","idx","PendingStakeListItem","isLast","sptLabel","l","locked","overflow","whiteSpace","maxWidth","PendingWithdrawalButton","Date","startTs","toLocaleString","endTs","pool","endPendingWithdrawal","vault","vaultPw","endUnstake","updatedPendingWithdrawal","burned","RegistryUpdatePendingWithdrawal","skin","now","height","idl","version","isMut","isSigner","args","option","defined","kind","fields","vec","methods","types","errors","code","msg","variants","w","useContext","WalletContext","Error","React","createContext","WalletProvider","walletProvider","common","network","useMemo","opts","preflightCommitment","commitment","connection","Connection","url","Wallet","Provider","lockupClient","Program","LockupIdl","lockupProgramId","RegistryIdl","registryProgramId","children","u32","zeros","BootstrapState","initialState","bootstrapTrigger","shutdownTrigger","isWalletConnected","bootstrapState","NeedsBootstrap","ownedTokenAccounts","lockup","vestings","registrars","srm","store","createStore","newState","CommonAppWillBootstrap","IsBootstrapping","CommonAppDidBootstrap","Bootstrapped","CommonWalletSetProvider","CommonWalletDidConnect","CommonWalletDidDisconnect","CommonSetNetwork","networkKey","values","CommonTriggerBootstrap","CommonTriggerShutdown","CommonDidShutdown","s","CommonOwnedTokenAccountsSet","CommonOwnedTokenAccountsUpdate","programAccount","LockupSetVestings","vestingAccounts","LockupUpdateVesting","vesting","LockupCreateVesting","unshift","RegistrySetMember","RegistrySetRegistrar","forEach","AccountAdd","AccountUpdate","BootstrapProvider","bootstrap","useCallback","autoHideDuration","refreshAccounts","members","accountStore","fromEntries","Map","r","m","registrarSwitch","shutdown","disconnect","fetchRegistrars","registrarAddresses","anchor","getMultipleAccounts","raw","coder","decode","data","parseMintAccount","rewardQs","fetchMembers","Promise","memberSeed","seed","PublicKey","createWithSeed","memberPublicKey","memberAddresses","memberAccounts","fetchAndDispatchMemberAccounts","fetchMints","mintAddresses","fetchOwnedTokenAccounts","token","getOwnedTokenAccounts","fetchVestingAccounts","v","newRegistrar","oldRegistrar","oldMember","oldMemberAccount","newMember","newMemberAccount","subscribeRegistrar","subscribeMember","oldRegistrarAccount","rewardQueue","unsubscribe","newRegistrarAccount","subscribe","on","onAccountChange","acc","createVaultSubscription","tokenAccount","parseTokenAccount","vaultStake","spt","Header","isAppReady","isRefreshing","setIsRefreshing","AppBar","position","background","boxShadow","Toolbar","SerumLogoButton","BarButton","hrefClient","href","srmFaucet","padding","CircularProgress","IconButton","NetworkSelector","WalletConnectButton","UserSelector","history","useHistory","push","Button","alt","src","Link","textDecoration","Typography","anchorEl","setAnchorEl","handleClose","currentTarget","Menu","open","Boolean","onClose","n","MenuItem","Select","displayEmpty","renderValue","showDisconnect","connect","Footer","envDisplay","setEnvDisplay","isDisconnected","zIndex","bottom","textAlign","backgroundColor","borderTop","left","borderRadius","FooterButton","isEnd","overflowY","right","borderTopLeftRadius","NetworkEnvironment","registrarAddress","msrmFaucet","field","Layout","minHeight","RiskBar","DisconnectedSplash","useStyles","makeStyles","theme","root","spacing","classes","className","LinearProgress","OwnedTokenAccountsSelect","p","ota","fromAccount","setFromAccount","fullWidth","pk","pubkey","ownedTokenAccount","float","TOKENS","devnet","testnet","activeRegistrar","RegistrarSelect","selectedRegistrar","getImage","registrarToDisplayLabel","entry","t","mintAddress","icon","Me","MemberBalancesCard","lockedVault","lockedVaultStake","lockedVaultPw","lockedSpt","tables","description","rows","balance","pending","Card","CardContent","BalanceTable","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","row","component","scope","vestingSigner","findProgramAddress","nonce","transaction","availableForWithdrawal","setSigners","simulateTransaction","resp","log","logs","slice","JSON","parse","result","RewardsList","rewards","List","RewardListItem","rli","ListItem","ListItemText","primary","setOpen","dateLabel","vendor","fromLabel","from","button","visibility","reward","needsClaim","total","secondary","Collapse","in","timeout","unmountOnExit","RewardListItemDetails","poolTokenSupply","expiryTs","toLocaleDateString","expiryReceiver","expired","rewardEventQCursor","RewardTypeViewModel","TabModel","RewardListItemViewModel","cursor","ctx","event","rewardEventQueue","tail","sptAccount","lockedSptAccount","ownsPoolShares","notYetClaimed","rewardsCursor","isEligible","lastStakeTs","DropRewardButton","showDialog","setShowDialog","DropRewardDialog","Unlocked","rewardTypeTab","setRewardTypeTab","Dialog","DialogTitle","DialogContent","Tabs","_e","Tab","Locked","DropUnlockedForm","DropLockedForm","snack","rewardDisplayAmount","setRewardDisplayAmount","setExpiryTs","depositor","setDepositor","setMint","isSendEnabled","sendUnlockedReward","notification","mintAccount","serumCmn","lockedRewardAmount","rewardKind","unlocked","vendorVault","vendorSigner","depositorAuthority","rewardVendor","dropReward","DropVendorForm","onCancel","setStartTs","setEndTs","periodCount","setPeriodCount","sendLockedRewards","rewardAmount","mintOptions","f","FormHelperText","FormControl","InputLabel","TextField","id","InputLabelProps","shrink","parseFloat","InputProps","inputProps","min","d","getTime","placeholder","DialogActions","ClaimRewardButton","setToken","clickHandler","_vendorSigner","vendoredVesting","vendoredVestingVault","vendoredVestingSigner","remainingAccounts","instruction","createVesting","meta","lockupProgram","cmn","createTokenAccountInstrs","claimRewardLocked","claimReward","to","unlockedAlloc","Rewards","events","rewardEvents","fromMessage","reverse","nextReward","sort","shift","Paper","VestingAccountsSelect","deposit","availableAmount","outstanding","sub","whitelistOwned","MyNode","tab","setTab","MyNodeBanner","Container","fixed","showDepositDialog","setShowDepositDialog","showWithdrawDialog","setShowWithdrawDialog","createStakeAccount","memberSignerPublicKey","createBalanceSandbox","mainTx","lockedTx","SystemProgram","getMinimumBalanceForRentExemption","size","fromPubkey","newAccountPubkey","basePubkey","lamports","space","createAccountWithSeed","createMember","allTxs","sendAll","txSigs","memberProgramAccount","HoverSpan","styled","span","DepositDialog","WithdrawDialog","TransferDialog","contextText","onTransfer","displayAmount","relayData","encode","_memberSigner","_vestingSigner","isWritable","relayAccounts","whitelistedProgram","whitelistedProgramVault","whitelistedProgramVaultAuthority","transfer","whitelistWithdraw","updatedVestingAccount","getTokenAccount","whitelistDeposit","withdraw","setDisplayAmount","setFrom","setVesting","maxDisplayAmount","setMaxDisplayAmount","submitBtnDisabled","TransitionComponent","Transition","keepMounted","FormControlLabel","Switch","max","_maxDisplayAmount","forwardRef","ref","Slide","direction","MyNodePage","NewVestingButton","NewVestingDialog","defaultStartDate","defaultStartTs","defaultEndDate","defaultEndTs","setBeneficiary","isValidBeneficiary","_","displayBeneficiaryError","startTimestamp","setStartTimestamp","timestamp","setTimestamp","isLoading","setIsLoading","submitBtnEnabled","createVestingClickHandler","beneficiaryPublicKey","getAccountInfo","beneficiaryAccount","owner","vestingVault","vestingAccount","helperText","defaultValue","VestingAccountCard","expanded","setExpanded","hover","setHover","displayFn","input","outstandingLabel","tsOverflow","mod","shiftedStartTs","period","div","vestingDates","Array","formatDate","rewardOverflow","startBalance","rewardPerPeriod","cumulativeVesting","k","startLabel","endLabel","urlSuffix","explorerClusterSuffix","setAvailableForWithdrawal","withdrawalAccount","setWithdrawalAccount","_availableForWithdrawal","withdrawEnabled","gtn","withTx","realizor","newVesting","program","metadata","grantor","onMouseOver","onMouseOut","ListItemIcon","toBase58","rel","labels","series","options","axisY","FixedScaleAxis","low","high","ticks","lineSmooth","Interpolation","step","split","getMonth","getDate","getFullYear","Vestings","disablePadding","LockupPage","App","createMuiTheme","palette","default","typography","fontFamily","join","overrides","CssBaseline","maxSnack","basename","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","sha256","registrySigner","createSptIx","createVaultIx","createVaultStakeIx","createVaultPwIx","tx0","Transaction","add","rewardQ","head","beforeLabel","afterLabel","execTx","ViewTransactionOnExplorerButton","msrm","fida","maps","token1","token2","localhost"],"mappings":"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M,QACN8E,KAAM,aAER,CACE9E,KAAM,UACN8E,KAAM,aAER,CACE9E,KAAM,cACN8E,KAAM,OAER,CACE9E,KAAM,eACN8E,KAAM,OAER,CACE9E,KAAM,YACN8E,KAAM,OAER,CACE9E,KAAM,UACN8E,KAAM,OAER,CACE9E,KAAM,QACN8E,KAAM,OAER,CACE9E,KAAM,cACN8E,KAAM,OAER,CACE9E,KAAM,iBACN8E,KAAM,OAER,CACE9E,KAAM,QACN8E,KAAM,MAER,CACE9E,KAAM,WACN8E,KAAM,CACJgG,OAAQ,CACNC,QAAS,kBAQvBK,MAAO,CACL,CACEpL,KAAM,WACN8E,KAAM,CACJkG,KAAM,SACNC,OAAQ,CACN,CACEjL,KAAM,UACN8E,KAAM,aAER,CACE9E,KAAM,WACN8E,KAAM,gBAKd,CACE9E,KAAM,iBACN8E,KAAM,CACJkG,KAAM,SACNC,OAAQ,CACN,CACEjL,KAAM,YACN8E,KAAM,iBAMhBuG,OAAQ,CACN,CACEC,KAAM,IACNtL,KAAM,mBACNuL,IAAK,gEAEP,CACED,KAAM,IACNtL,KAAM,gBACNuL,IAAK,4DAEP,CACED,KAAM,IACNtL,KAAM,uBACNuL,IAAK,yDAEP,CACED,KAAM,IACNtL,KAAM,wBACNuL,IAAK,uDAEP,CACED,KAAM,IACNtL,KAAM,wBACNuL,IAAK,+DAEP,CACED,KAAM,IACNtL,KAAM,oBACNuL,IAAK,wBAEP,CACED,KAAM,IACNtL,KAAM,qBACNuL,IAAK,8BAEP,CACED,KAAM,IACNtL,KAAM,gCACNuL,IAAK,oCAEP,CACED,KAAM,IACNtL,KAAM,gBACNuL,IAAK,qBAEP,CACED,KAAM,IACNtL,KAAM,8BACNuL,IAAK,kCAEP,CACED,KAAM,IACNtL,KAAM,qCACNuL,IAAK,0DAEP,CACED,KAAM,IACNtL,KAAM,2BACNuL,IAAK,sCAEP,CACED,KAAM,IACNtL,KAAM,yBACNuL,IAAK,8CAEP,CACED,KAAM,IACNtL,KAAM,yBACNuL,IAAK,8BAEP,CACED,KAAM,IACNtL,KAAM,eACNuL,IAAK,kEAEP,CACED,KAAM,IACNtL,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KAAM,aAER,CACE9E,KAAM,QACN8E,KAAM,MAER,CACE9E,KAAM,qBACN8E,KAAM,OAER,CACE9E,KAAM,eACN8E,KAAM,aAER,CACE9E,KAAM,OACN8E,KAAM,aAER,CACE9E,KAAM,WACN8E,KAAM,aAER,CACE9E,KAAM,YACN8E,KAAM,UAKd,CACE9E,KAAM,SACN8E,KAAM,CACJkG,KAAM,SACNC,OAAQ,CACN,CACEjL,KAAM,YACN8E,KAAM,aAER,CACE9E,KAAM,cACN8E,KAAM,aAER,CACE9E,KAAM,WACN8E,KAAM,aAER,CACE9E,KAAM,WACN8E,KAAM,CACJiG,QAAS,mBAGb,CACE/K,KAAM,iBACN8E,KAAM,CACJiG,QAAS,mBAGb,CACE/K,KAAM,gBACN8E,KAAM,OAER,CACE9E,KAAM,cACN8E,KAAM,OAER,CACE9E,KAAM,QACN8E,KAAM,SAKd,CACE9E,KAAM,oBACN8E,KAAM,CACJkG,KAAM,SACNC,OAAQ,CACN,CACEjL,KAAM,YACN8E,KAAM,aAER,CACE9E,KAAM,SACN8E,KAAM,aAER,CACE9E,KAAM,SACN8E,KAAM,QAER,CACE9E,KAAM,OACN8E,KAAM,aAER,CACE9E,KAAM,UACN8E,KAAM,OAER,CACE9E,KAAM,QACN8E,KAAM,OAER,CACE9E,KAAM,SACN8E,KAAM,OAER,CACE9E,KAAM,SACN8E,KAAM,WAKd,CACE9E,KAAM,cACN8E,KAAM,CACJkG,KAAM,SACNC,OAAQ,CACN,CACEjL,KAAM,OACN8E,KAAM,OAER,CACE9E,KAAM,OACN8E,KAAM,OAER,CACE9E,KAAM,SACN8E,KAAM,CACJoG,IAAK,CACHH,QAAS,oBAOrB,CACE/K,KAAM,eACN8E,KAAM,CACJkG,KAAM,SACNC,OAAQ,CACN,CACEjL,KAAM,YACN8E,KAAM,aAER,CACE9E,KAAM,QACN8E,KAAM,aAER,CACE9E,KAAM,OACN8E,KAAM,aAER,CACE9E,KAAM,QACN8E,KAAM,MAER,CACE9E,KAAM,kBACN8E,KAAM,OAER,CACE9E,KAAM,qBACN8E,KAAM,OAER,CACE9E,KAAM,UACN8E,KAAM,OAER,CACE9E,KAAM,WACN8E,KAAM,OAER,CACE9E,KAAM,iBACN8E,KAAM,aAER,CACE9E,KAAM,OACN8E,KAAM,aAER,CACE9E,KAAM,QACN8E,KAAM,OAER,CACE9E,KAAM,UACN8E,KAAM,QAER,CACE9E,KAAM,OACN8E,KAAM,CACJiG,QAAS,yBAOrBK,MAAO,CACL,CACEpL,KAAM,iBACN8E,KAAM,CACJkG,KAAM,SACNC,OAAQ,CACN,CACEjL,KAAM,MACN8E,KAAM,aAER,CACE9E,KAAM,QACN8E,KAAM,aAER,CACE9E,KAAM,aACN8E,KAAM,aAER,CACE9E,KAAM,UACN8E,KAAM,gBAKd,CACE9E,KAAM,cACN8E,KAAM,CACJkG,KAAM,SACNC,OAAQ,CACN,CACEjL,KAAM,SACN8E,KAAM,aAER,CACE9E,KAAM,KACN8E,KAAM,OAER,CACE9E,KAAM,SACN8E,KAAM,WAKd,CACE9E,KAAM,mBACN8E,KAAM,CACJkG,KAAM,OACNQ,SAAU,CACR,CACExL,KAAM,YAER,CACEA,KAAM,SACNiL,OAAQ,CACN,CACEjL,KAAM,WACN8E,KAAM,OAER,CACE9E,KAAM,SACN8E,KAAM,OAER,CACE9E,KAAM,eACN8E,KAAM,aAQpBuG,OAAQ,CACN,CACEC,KAAM,IACNtL,KAAM,4BACNuL,IAAK,wDAEP,CACED,KAAM,IACNtL,KAAM,eACNuL,IAAK,2DAEP,CACED,KAAM,IACNtL,KAAM,2BACNuL,IAAK,+BAEP,CACED,KAAM,IACNtL,KAAM,sBACNuL,IAAK,oDAEP,CACED,KAAM,IACNtL,KAAM,sBACNuL,IAAK,2DAEP,CACED,KAAM,IACNtL,KAAM,mBACNuL,IAAK,sEAEP,CACED,KAAM,IACNtL,KAAM,eACNuL,IAAK,sDAEP,CACED,KAAM,IACNtL,KAAM,oBACNuL,IAAK,wBAEP,CACED,KAAM,IACNtL,KAAM,UACNuL,IAAK,iCAEP,CACED,KAAM,IACNtL,KAAM,kBACNuL,IAAK,6CAEP,CACED,KAAM,IACNtL,KAAM,qBACNuL,IAAK,mEAEP,CACED,KAAM,IACNtL,KAAM,gBACNuL,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","file":"static/js/main.26bf45ad.chunk.js","sourcesContent":["\"use strict\";\n// @ts-nocheck\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setLayoutEncoder = exports.setLayoutDecoder = exports.accountFlagsLayout = exports.selfTradeBehaviorLayout = exports.orderTypeLayout = exports.sideLayout = exports.VersionedLayout = exports.WideBits = exports.u128 = exports.u64 = exports.publicKeyLayout = exports.zeros = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nclass Zeros extends buffer_layout_1.Blob {\n    decode(b, offset) {\n        const slice = super.decode(b, offset);\n        if (!slice.every((v) => v === 0)) {\n            throw new Error('nonzero padding bytes');\n        }\n        return slice;\n    }\n}\nfunction zeros(length) {\n    return new Zeros(length);\n}\nexports.zeros = zeros;\nclass PublicKeyLayout extends buffer_layout_1.Blob {\n    constructor(property) {\n        super(32, property);\n    }\n    decode(b, offset) {\n        return new web3_js_1.PublicKey(super.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return super.encode(src.toBuffer(), b, offset);\n    }\n}\nfunction publicKeyLayout(property) {\n    return new PublicKeyLayout(property);\n}\nexports.publicKeyLayout = publicKeyLayout;\nclass BNLayout extends buffer_layout_1.Blob {\n    decode(b, offset) {\n        return new bn_js_1.default(super.decode(b, offset), 10, 'le');\n    }\n    encode(src, b, offset) {\n        return super.encode(src.toArrayLike(Buffer, 'le', this.span), b, offset);\n    }\n}\nfunction u64(property) {\n    return new BNLayout(8, property);\n}\nexports.u64 = u64;\nfunction u128(property) {\n    return new BNLayout(16, property);\n}\nexports.u128 = u128;\nclass WideBits extends buffer_layout_1.Layout {\n    constructor(property) {\n        super(8, property);\n        this._lower = buffer_layout_1.bits(buffer_layout_1.u32(), false);\n        this._upper = buffer_layout_1.bits(buffer_layout_1.u32(), false);\n    }\n    addBoolean(property) {\n        if (this._lower.fields.length < 32) {\n            this._lower.addBoolean(property);\n        }\n        else {\n            this._upper.addBoolean(property);\n        }\n    }\n    decode(b, offset = 0) {\n        const lowerDecoded = this._lower.decode(b, offset);\n        const upperDecoded = this._upper.decode(b, offset + this._lower.span);\n        return { ...lowerDecoded, ...upperDecoded };\n    }\n    encode(src, b, offset = 0) {\n        return (this._lower.encode(src, b, offset) +\n            this._upper.encode(src, b, offset + this._lower.span));\n    }\n}\nexports.WideBits = WideBits;\nclass VersionedLayout extends buffer_layout_1.Layout {\n    constructor(version, inner, property) {\n        super(inner.span > 0 ? inner.span + 1 : inner.span, property);\n        this.version = version;\n        this.inner = inner;\n    }\n    decode(b, offset = 0) {\n        // if (b.readUInt8(offset) !== this._version) {\n        //   throw new Error('invalid version');\n        // }\n        return this.inner.decode(b, offset + 1);\n    }\n    encode(src, b, offset = 0) {\n        b.writeUInt8(this.version, offset);\n        return 1 + this.inner.encode(src, b, offset + 1);\n    }\n    getSpan(b, offset = 0) {\n        return 1 + this.inner.getSpan(b, offset + 1);\n    }\n}\nexports.VersionedLayout = VersionedLayout;\nclass EnumLayout extends buffer_layout_1.UInt {\n    constructor(values, span, property) {\n        super(span, property);\n        this.values = values;\n    }\n    encode(src, b, offset) {\n        if (this.values[src] !== undefined) {\n            return super.encode(this.values[src], b, offset);\n        }\n        throw new Error('Invalid ' + this.property);\n    }\n    decode(b, offset) {\n        const decodedValue = super.decode(b, offset);\n        const entry = Object.entries(this.values).find(([, value]) => value === decodedValue);\n        if (entry) {\n            return entry[0];\n        }\n        throw new Error('Invalid ' + this.property);\n    }\n}\nfunction sideLayout(property) {\n    return new EnumLayout({ buy: 0, sell: 1 }, 4, property);\n}\nexports.sideLayout = sideLayout;\nfunction orderTypeLayout(property) {\n    return new EnumLayout({ limit: 0, ioc: 1, postOnly: 2 }, 4, property);\n}\nexports.orderTypeLayout = orderTypeLayout;\nfunction selfTradeBehaviorLayout(property) {\n    return new EnumLayout({ decrementTake: 0, cancelProvide: 1, abortTransaction: 2 }, 4, property);\n}\nexports.selfTradeBehaviorLayout = selfTradeBehaviorLayout;\nconst ACCOUNT_FLAGS_LAYOUT = new WideBits();\nACCOUNT_FLAGS_LAYOUT.addBoolean('initialized');\nACCOUNT_FLAGS_LAYOUT.addBoolean('market');\nACCOUNT_FLAGS_LAYOUT.addBoolean('openOrders');\nACCOUNT_FLAGS_LAYOUT.addBoolean('requestQueue');\nACCOUNT_FLAGS_LAYOUT.addBoolean('eventQueue');\nACCOUNT_FLAGS_LAYOUT.addBoolean('bids');\nACCOUNT_FLAGS_LAYOUT.addBoolean('asks');\nfunction accountFlagsLayout(property = 'accountFlags') {\n    return ACCOUNT_FLAGS_LAYOUT.replicate(property);\n}\nexports.accountFlagsLayout = accountFlagsLayout;\nfunction setLayoutDecoder(layout, decoder) {\n    const originalDecode = layout.decode;\n    layout.decode = function decode(b, offset = 0) {\n        return decoder(originalDecode.call(this, b, offset));\n    };\n}\nexports.setLayoutDecoder = setLayoutDecoder;\nfunction setLayoutEncoder(layout, encoder) {\n    const originalEncode = layout.encode;\n    layout.encode = function encode(src, b, offset) {\n        return originalEncode.call(this, encoder(src), b, offset);\n    };\n    return layout;\n}\nexports.setLayoutEncoder = setLayoutEncoder;\n//# sourceMappingURL=layout.js.map","type Skin = {\n  active: string;\n  ready: string;\n  inactive: string;\n  notReady: string;\n  deactivating: string;\n};\n\nconst _skin: Skin = {\n  active: '#43a047',\n  ready: '#3f51b5',\n  notReady: '#ccc',\n  inactive: 'red',\n  deactivating: 'rgb(255, 121, 42)',\n};\n\nexport function instance(): Skin {\n  return _skin;\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.closeAccount = exports.mintTo = exports.setAuthority = exports.revoke = exports.approve = exports.transfer = exports.initializeAccount = exports.initializeMint = exports.decodeTokenInstructionData = exports.SRM_DECIMALS = exports.SRM_MINT = exports.MSRM_DECIMALS = exports.MSRM_MINT = exports.WRAPPED_SOL_MINT = exports.TOKEN_PROGRAM_ID = exports.CLOSE_ACCOUNT_OWNER_INDEX = exports.CLOSE_ACCOUNT_DESTINATION_INDEX = exports.CLOSE_ACCOUNT_SOURCE_INDEX = exports.TRANSFER_OWNER_INDEX = exports.TRANSFER_DESTINATION_INDEX = exports.TRANSFER_SOURCE_INDEX = exports.INITIALIZE_ACCOUNT_OWNER_INDEX = exports.INITIALIZE_ACCOUNT_MINT_INDEX = exports.INITIALIZE_ACCOUNT_ACCOUNT_INDEX = void 0;\nconst BufferLayout = __importStar(require(\"buffer-layout\"));\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst layout_1 = require(\"./layout\");\n// NOTE: Update these if the position of arguments for the initializeAccount instruction changes\nexports.INITIALIZE_ACCOUNT_ACCOUNT_INDEX = 0;\nexports.INITIALIZE_ACCOUNT_MINT_INDEX = 1;\nexports.INITIALIZE_ACCOUNT_OWNER_INDEX = 2;\n// NOTE: Update these if the position of arguments for the transfer instruction changes\nexports.TRANSFER_SOURCE_INDEX = 0;\nexports.TRANSFER_DESTINATION_INDEX = 1;\nexports.TRANSFER_OWNER_INDEX = 2;\n// NOTE: Update these if the position of arguments for the closeAccount instruction changes\nexports.CLOSE_ACCOUNT_SOURCE_INDEX = 0;\nexports.CLOSE_ACCOUNT_DESTINATION_INDEX = 1;\nexports.CLOSE_ACCOUNT_OWNER_INDEX = 2;\nexports.TOKEN_PROGRAM_ID = new web3_js_1.PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\nexports.WRAPPED_SOL_MINT = new web3_js_1.PublicKey('So11111111111111111111111111111111111111112');\nexports.MSRM_MINT = new web3_js_1.PublicKey('MSRMcoVyrFxnSgo5uXwone5SKcGhT1KEJMFEkMEWf9L');\nexports.MSRM_DECIMALS = 0;\nexports.SRM_MINT = new web3_js_1.PublicKey('SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt');\nexports.SRM_DECIMALS = 6;\nconst LAYOUT = BufferLayout.union(BufferLayout.u8('instruction'));\nLAYOUT.addVariant(0, BufferLayout.struct([\n    BufferLayout.u8('decimals'),\n    layout_1.publicKeyLayout('mintAuthority'),\n    BufferLayout.u8('freezeAuthorityOption'),\n    layout_1.publicKeyLayout('freezeAuthority'),\n]), 'initializeMint');\nLAYOUT.addVariant(1, BufferLayout.struct([]), 'initializeAccount');\nLAYOUT.addVariant(3, BufferLayout.struct([BufferLayout.nu64('amount')]), 'transfer');\nLAYOUT.addVariant(4, BufferLayout.struct([BufferLayout.nu64('amount')]), 'approve');\nLAYOUT.addVariant(5, BufferLayout.struct([]), 'revoke');\nLAYOUT.addVariant(6, BufferLayout.struct([\n    BufferLayout.u8('authorityType'),\n    BufferLayout.u8('newAuthorityOption'),\n    layout_1.publicKeyLayout('newAuthority'),\n]), 'setAuthority');\nLAYOUT.addVariant(7, BufferLayout.struct([BufferLayout.nu64('amount')]), 'mintTo');\nLAYOUT.addVariant(8, BufferLayout.struct([BufferLayout.nu64('amount')]), 'burn');\nLAYOUT.addVariant(9, BufferLayout.struct([]), 'closeAccount');\nconst instructionMaxSpan = Math.max(...Object.values(LAYOUT.registry).map((r) => r.span));\nfunction encodeTokenInstructionData(instruction) {\n    const b = Buffer.alloc(instructionMaxSpan);\n    const span = LAYOUT.encode(instruction, b);\n    return b.slice(0, span);\n}\nfunction decodeTokenInstructionData(instruction) {\n    return LAYOUT.decode(instruction);\n}\nexports.decodeTokenInstructionData = decodeTokenInstructionData;\nfunction initializeMint({ mint, decimals, mintAuthority, freezeAuthority = null, }) {\n    const keys = [\n        { pubkey: mint, isSigner: false, isWritable: true },\n        { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            initializeMint: {\n                decimals,\n                mintAuthority,\n                freezeAuthorityOption: !!freezeAuthority,\n                freezeAuthority: freezeAuthority || new web3_js_1.PublicKey(0),\n            },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.initializeMint = initializeMint;\nfunction initializeAccount({ account, mint, owner }) {\n    const keys = [\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: owner, isSigner: false, isWritable: false },\n        { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            initializeAccount: {},\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.initializeAccount = initializeAccount;\nfunction transfer({ source, destination, amount, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            transfer: { amount },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.transfer = transfer;\nfunction approve({ source, delegate, amount, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: delegate, isSigner: false, isWritable: false },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            approve: { amount },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.approve = approve;\nfunction revoke({ source, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            revoke: {},\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.revoke = revoke;\nfunction setAuthority({ target, currentAuthority, newAuthority, authorityType, }) {\n    const keys = [\n        { pubkey: target, isSigner: false, isWritable: true },\n        { pubkey: currentAuthority, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            setAuthority: {\n                authorityType,\n                newAuthorityOption: !!newAuthority,\n                newAuthority,\n            },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.setAuthority = setAuthority;\nfunction mintTo({ mint, destination, amount, mintAuthority }) {\n    const keys = [\n        { pubkey: mint, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n        { pubkey: mintAuthority, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            mintTo: { amount },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.mintTo = mintTo;\nfunction closeAccount({ source, destination, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            closeAccount: {},\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.closeAccount = closeAccount;\n//# sourceMappingURL=token-instructions.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MARKETS = exports.TOKEN_MINTS = exports.getLayoutVersion = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst markets_json_1 = __importDefault(require(\"./markets.json\"));\nconst token_mints_json_1 = __importDefault(require(\"./token-mints.json\"));\nfunction getLayoutVersion(programId) {\n    if (programId.equals(new web3_js_1.PublicKey('4ckmDgGdxQoPDLUkDT3vHgSAkzA3QRdNq5ywwY4sUSJn')) ||\n        programId.equals(new web3_js_1.PublicKey('BJ3jrUzddfuSrZHXSCxMUUQsjKEyLmuuyZebkcaFp2fg'))) {\n        return 1;\n    }\n    else if (programId.equals(new web3_js_1.PublicKey('EUqojwWA2rd19FZrzeBncJsm38Jm1hEhE3zsmX3bRc2o'))) {\n        return 2;\n    }\n    else {\n        return 3;\n    }\n}\nexports.getLayoutVersion = getLayoutVersion;\nexports.TOKEN_MINTS = token_mints_json_1.default.map((mint) => {\n    return {\n        address: new web3_js_1.PublicKey(mint.address),\n        name: mint.name,\n    };\n});\nexports.MARKETS = markets_json_1.default.map((market) => {\n    return {\n        address: new web3_js_1.PublicKey(market.address),\n        name: market.name,\n        programId: new web3_js_1.PublicKey(market.programId),\n        deprecated: market.deprecated,\n    };\n});\n//# sourceMappingURL=tokens_and_markets.js.map","export type Action = {\n  type: ActionType;\n  item: any;\n};\n\nexport enum ActionType {\n  // Common.\n  CommonTriggerBootstrap,\n  CommonAppWillBootstrap,\n  CommonAppDidBootstrap,\n  CommonTriggerShutdown,\n  CommonDidShutdown,\n  CommonWalletDidConnect,\n  CommonWalletDidDisconnect,\n  CommonWalletSetProvider,\n  CommonSetNetwork,\n  CommonOwnedTokenAccountsSet,\n  CommonOwnedTokenAccountsUpdate,\n  CommonWalletReset,\n\n  // Lockup.\n  LockupSetVestings,\n  LockupUpdateVesting,\n  LockupCreateVesting,\n\n  // Registry.\n  RegistrySetMember,\n  RegistrySetRegistrar,\n  RegistrySetPendingWithdrawals,\n  RegistryCreatePendingWithdrawal,\n  RegistryUpdatePendingWithdrawal,\n\n  // Accounts.\n  AccountAdd,\n  AccountUpdate,\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DexInstructions = exports.decodeInstruction = exports.encodeInstruction = exports.INSTRUCTION_LAYOUT = exports.NEW_ORDER_OWNER_INDEX = exports.NEW_ORDER_OPEN_ORDERS_INDEX = exports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = exports.SETTLE_FUNDS_BASE_WALLET_INDEX = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst token_instructions_1 = require(\"./token-instructions\");\n// NOTE: Update these if the position of arguments for the settleFunds instruction changes\nexports.SETTLE_FUNDS_BASE_WALLET_INDEX = 5;\nexports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = 6;\n// NOTE: Update these if the position of arguments for the newOrder instruction changes\nexports.NEW_ORDER_OPEN_ORDERS_INDEX = 1;\nexports.NEW_ORDER_OWNER_INDEX = 4;\nexports.INSTRUCTION_LAYOUT = new layout_1.VersionedLayout(0, buffer_layout_1.union(buffer_layout_1.u32('instruction')));\nexports.INSTRUCTION_LAYOUT.inner.addVariant(0, buffer_layout_1.struct([\n    layout_1.u64('baseLotSize'),\n    layout_1.u64('quoteLotSize'),\n    buffer_layout_1.u16('feeRateBps'),\n    layout_1.u64('vaultSignerNonce'),\n    layout_1.u64('quoteDustThreshold'),\n]), 'initializeMarket');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(1, buffer_layout_1.struct([\n    layout_1.sideLayout('side'),\n    layout_1.u64('limitPrice'),\n    layout_1.u64('maxQuantity'),\n    layout_1.orderTypeLayout('orderType'),\n    layout_1.u64('clientId'),\n]), 'newOrder');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(2, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'matchOrders');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(3, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'consumeEvents');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(4, buffer_layout_1.struct([\n    layout_1.sideLayout('side'),\n    layout_1.u128('orderId'),\n    layout_1.publicKeyLayout('openOrders'),\n    buffer_layout_1.u8('openOrdersSlot'),\n]), 'cancelOrder');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(5, buffer_layout_1.struct([]), 'settleFunds');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(6, buffer_layout_1.struct([layout_1.u64('clientId')]), 'cancelOrderByClientId');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(10, buffer_layout_1.struct([\n    layout_1.sideLayout('side'),\n    layout_1.u64('limitPrice'),\n    layout_1.u64('maxBaseQuantity'),\n    layout_1.u64('maxQuoteQuantity'),\n    layout_1.selfTradeBehaviorLayout('selfTradeBehavior'),\n    layout_1.orderTypeLayout('ordertype'),\n    layout_1.u64('clientId'),\n    buffer_layout_1.u16('limit'),\n]), 'newOrderV3');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(11, buffer_layout_1.struct([layout_1.sideLayout('side'), layout_1.u128('orderId')]), 'cancelOrderV2');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(12, buffer_layout_1.struct([layout_1.u64('clientId')]), 'cancelOrderByClientIdV2');\nfunction encodeInstruction(instruction) {\n    const b = Buffer.alloc(100);\n    return b.slice(0, exports.INSTRUCTION_LAYOUT.encode(instruction, b));\n}\nexports.encodeInstruction = encodeInstruction;\nfunction decodeInstruction(message) {\n    return exports.INSTRUCTION_LAYOUT.decode(message);\n}\nexports.decodeInstruction = decodeInstruction;\nclass DexInstructions {\n    static initializeMarket({ market, requestQueue, eventQueue, bids, asks, baseVault, quoteVault, baseMint, quoteMint, baseLotSize, quoteLotSize, feeRateBps, vaultSignerNonce, quoteDustThreshold, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: baseVault, isSigner: false, isWritable: true },\n                { pubkey: quoteVault, isSigner: false, isWritable: true },\n                { pubkey: baseMint, isSigner: false, isWritable: false },\n                { pubkey: quoteMint, isSigner: false, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({\n                initializeMarket: {\n                    baseLotSize,\n                    quoteLotSize,\n                    feeRateBps,\n                    vaultSignerNonce,\n                    quoteDustThreshold,\n                },\n            }),\n        });\n    }\n    static newOrder({ market, openOrders, payer, owner, requestQueue, baseVault, quoteVault, side, limitPrice, maxQuantity, orderType, clientId, programId, feeDiscountPubkey = null, }) {\n        const keys = [\n            { pubkey: market, isSigner: false, isWritable: true },\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: requestQueue, isSigner: false, isWritable: true },\n            { pubkey: payer, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: baseVault, isSigner: false, isWritable: true },\n            { pubkey: quoteVault, isSigner: false, isWritable: true },\n            { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n            { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n        ];\n        if (feeDiscountPubkey) {\n            keys.push({\n                pubkey: feeDiscountPubkey,\n                isSigner: false,\n                isWritable: false,\n            });\n        }\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                newOrder: clientId\n                    ? { side, limitPrice, maxQuantity, orderType, clientId }\n                    : { side, limitPrice, maxQuantity, orderType },\n            }),\n        });\n    }\n    static newOrderV3({ market, openOrders, payer, owner, requestQueue, eventQueue, bids, asks, baseVault, quoteVault, side, limitPrice, maxBaseQuantity, maxQuoteQuantity, orderType, clientId, programId, selfTradeBehavior, feeDiscountPubkey = null, }) {\n        const keys = [\n            { pubkey: market, isSigner: false, isWritable: true },\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: requestQueue, isSigner: false, isWritable: true },\n            { pubkey: eventQueue, isSigner: false, isWritable: true },\n            { pubkey: bids, isSigner: false, isWritable: true },\n            { pubkey: asks, isSigner: false, isWritable: true },\n            { pubkey: payer, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: baseVault, isSigner: false, isWritable: true },\n            { pubkey: quoteVault, isSigner: false, isWritable: true },\n            { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n            { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n        ];\n        if (feeDiscountPubkey) {\n            keys.push({\n                pubkey: feeDiscountPubkey,\n                isSigner: false,\n                isWritable: false,\n            });\n        }\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                newOrderV3: {\n                    side,\n                    limitPrice,\n                    maxBaseQuantity,\n                    maxQuoteQuantity,\n                    selfTradeBehavior,\n                    orderType,\n                    clientId,\n                    limit: 65535,\n                },\n            }),\n        });\n    }\n    static matchOrders({ market, requestQueue, eventQueue, bids, asks, baseVault, quoteVault, limit, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: baseVault, isSigner: false, isWritable: true },\n                { pubkey: quoteVault, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({ matchOrders: { limit } }),\n        });\n    }\n    static consumeEvents({ market, eventQueue, openOrdersAccounts, limit, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                ...openOrdersAccounts.map((account) => ({\n                    pubkey: account,\n                    isSigner: false,\n                    isWritable: true,\n                })),\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({ consumeEvents: { limit } }),\n        });\n    }\n    static cancelOrder({ market, openOrders, owner, requestQueue, side, orderId, openOrdersSlot, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrder: { side, orderId, openOrders, openOrdersSlot },\n            }),\n        });\n    }\n    static cancelOrderV2({ market, bids, asks, eventQueue, openOrders, owner, side, orderId, openOrdersSlot, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrderV2: { side, orderId },\n            }),\n        });\n    }\n    static cancelOrderByClientId({ market, openOrders, owner, requestQueue, clientId, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrderByClientId: { clientId },\n            }),\n        });\n    }\n    static cancelOrderByClientIdV2({ market, openOrders, owner, bids, asks, eventQueue, clientId, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrderByClientIdV2: { clientId },\n            }),\n        });\n    }\n    static settleFunds({ market, openOrders, owner, baseVault, quoteVault, baseWallet, quoteWallet, vaultSigner, programId, referrerQuoteWallet = null, }) {\n        const keys = [\n            { pubkey: market, isSigner: false, isWritable: true },\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: baseVault, isSigner: false, isWritable: true },\n            { pubkey: quoteVault, isSigner: false, isWritable: true },\n            { pubkey: baseWallet, isSigner: false, isWritable: true },\n            { pubkey: quoteWallet, isSigner: false, isWritable: true },\n            { pubkey: vaultSigner, isSigner: false, isWritable: false },\n            { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n        ];\n        if (referrerQuoteWallet) {\n            keys.push({\n                pubkey: referrerQuoteWallet,\n                isSigner: false,\n                isWritable: true,\n            });\n        }\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                settleFunds: {},\n            }),\n        });\n    }\n}\nexports.DexInstructions = DexInstructions;\n//# sourceMappingURL=instructions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EVENT_QUEUE_LAYOUT = exports.REQUEST_QUEUE_LAYOUT = exports.decodeEventQueue = exports.decodeRequestQueue = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst REQUEST_QUEUE_HEADER = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    buffer_layout_1.u32('head'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('count'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('nextSeqNum'),\n    layout_1.zeros(4),\n]);\nconst REQUEST_FLAGS = buffer_layout_1.bits(buffer_layout_1.u8(), false, 'requestFlags');\nREQUEST_FLAGS.addBoolean('newOrder');\nREQUEST_FLAGS.addBoolean('cancelOrder');\nREQUEST_FLAGS.addBoolean('bid');\nREQUEST_FLAGS.addBoolean('postOnly');\nREQUEST_FLAGS.addBoolean('ioc');\nconst REQUEST = buffer_layout_1.struct([\n    REQUEST_FLAGS,\n    buffer_layout_1.u8('openOrdersSlot'),\n    buffer_layout_1.u8('feeTier'),\n    buffer_layout_1.blob(5),\n    layout_1.u64('maxBaseSizeOrCancelId'),\n    layout_1.u64('nativeQuoteQuantityLocked'),\n    layout_1.u128('orderId'),\n    layout_1.publicKeyLayout('openOrders'),\n    layout_1.u64('clientOrderId'),\n]);\nconst EVENT_QUEUE_HEADER = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    buffer_layout_1.u32('head'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('count'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('seqNum'),\n    layout_1.zeros(4),\n]);\nconst EVENT_FLAGS = buffer_layout_1.bits(buffer_layout_1.u8(), false, 'eventFlags');\nEVENT_FLAGS.addBoolean('fill');\nEVENT_FLAGS.addBoolean('out');\nEVENT_FLAGS.addBoolean('bid');\nEVENT_FLAGS.addBoolean('maker');\nconst EVENT = buffer_layout_1.struct([\n    EVENT_FLAGS,\n    buffer_layout_1.u8('openOrdersSlot'),\n    buffer_layout_1.u8('feeTier'),\n    buffer_layout_1.blob(5),\n    layout_1.u64('nativeQuantityReleased'),\n    layout_1.u64('nativeQuantityPaid'),\n    layout_1.u64('nativeFeeOrRebate'),\n    layout_1.u128('orderId'),\n    layout_1.publicKeyLayout('openOrders'),\n    layout_1.u64('clientOrderId'),\n]);\nfunction decodeQueue(headerLayout, nodeLayout, buffer, history) {\n    const header = headerLayout.decode(buffer);\n    const allocLen = Math.floor((buffer.length - headerLayout.span) / nodeLayout.span);\n    const nodes = [];\n    if (history) {\n        for (let i = 0; i < Math.min(history, allocLen); ++i) {\n            const nodeIndex = (header.head + header.count + allocLen - 1 - i) % allocLen;\n            nodes.push(nodeLayout.decode(buffer, headerLayout.span + nodeIndex * nodeLayout.span));\n        }\n    }\n    else {\n        for (let i = 0; i < header.count; ++i) {\n            const nodeIndex = (header.head + i) % allocLen;\n            nodes.push(nodeLayout.decode(buffer, headerLayout.span + nodeIndex * nodeLayout.span));\n        }\n    }\n    return { header, nodes };\n}\nfunction decodeRequestQueue(buffer, history) {\n    const { header, nodes } = decodeQueue(REQUEST_QUEUE_HEADER, REQUEST, buffer, history);\n    if (!header.accountFlags.initialized || !header.accountFlags.requestQueue) {\n        throw new Error('Invalid requests queue');\n    }\n    return nodes;\n}\nexports.decodeRequestQueue = decodeRequestQueue;\nfunction decodeEventQueue(buffer, history) {\n    const { header, nodes } = decodeQueue(EVENT_QUEUE_HEADER, EVENT, buffer, history);\n    if (!header.accountFlags.initialized || !header.accountFlags.eventQueue) {\n        throw new Error('Invalid events queue');\n    }\n    return nodes;\n}\nexports.decodeEventQueue = decodeEventQueue;\nexports.REQUEST_QUEUE_LAYOUT = {\n    HEADER: REQUEST_QUEUE_HEADER,\n    NODE: REQUEST,\n};\nexports.EVENT_QUEUE_LAYOUT = {\n    HEADER: EVENT_QUEUE_HEADER,\n    NODE: EVENT,\n};\n//# sourceMappingURL=queue.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFeeTier = exports.getFeeRates = exports.supportsSrmFeeDiscounts = void 0;\nconst tokens_and_markets_1 = require(\"./tokens_and_markets\");\nfunction supportsSrmFeeDiscounts(programId) {\n    return tokens_and_markets_1.getLayoutVersion(programId) > 1;\n}\nexports.supportsSrmFeeDiscounts = supportsSrmFeeDiscounts;\nfunction getFeeRates(feeTier) {\n    if (feeTier === 1) {\n        // SRM2\n        return { taker: 0.002, maker: -0.0003 };\n    }\n    else if (feeTier === 2) {\n        // SRM3\n        return { taker: 0.0018, maker: -0.0003 };\n    }\n    else if (feeTier === 3) {\n        // SRM4\n        return { taker: 0.0016, maker: -0.0003 };\n    }\n    else if (feeTier === 4) {\n        // SRM5\n        return { taker: 0.0014, maker: -0.0003 };\n    }\n    else if (feeTier === 5) {\n        // SRM6\n        return { taker: 0.0012, maker: -0.0003 };\n    }\n    else if (feeTier === 6) {\n        // MSRM\n        return { taker: 0.001, maker: -0.0005 };\n    }\n    // Base\n    return { taker: 0.0022, maker: -0.0003 };\n}\nexports.getFeeRates = getFeeRates;\nfunction getFeeTier(msrmBalance, srmBalance) {\n    if (msrmBalance >= 1) {\n        return 6;\n    }\n    else if (srmBalance >= 1000000) {\n        return 5;\n    }\n    else if (srmBalance >= 100000) {\n        return 4;\n    }\n    else if (srmBalance >= 10000) {\n        return 3;\n    }\n    else if (srmBalance >= 1000) {\n        return 2;\n    }\n    else if (srmBalance >= 100) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexports.getFeeTier = getFeeTier;\n//# sourceMappingURL=fees.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.simulateTransaction = void 0;\n/** Copy of Connection.simulateTransaction that takes a commitment parameter. */\nasync function simulateTransaction(connection, transaction, commitment) {\n    // @ts-ignore\n    transaction.recentBlockhash = await connection._recentBlockhash(\n    // @ts-ignore\n    connection._disableBlockhashCaching);\n    const signData = transaction.serializeMessage();\n    // @ts-ignore\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config = { encoding: 'base64', commitment };\n    const args = [encodedTransaction, config];\n    // @ts-ignore\n    const res = await connection._rpcRequest('simulateTransaction', args);\n    if (res.error) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n    }\n    return res.result;\n}\nexports.simulateTransaction = simulateTransaction;\n//# sourceMappingURL=simulate-transaction.js.map","import BN from 'bn.js';\nimport { PublicKey } from '@solana/web3.js';\nimport { networks } from '../store/config';\n\nexport function fromDisplay(amount: number, decimals: number): BN {\n  return new BN(amount * 10 ** decimals);\n}\n\nexport function toDisplay(amount: BN | number, decimals: number): string {\n  if (amount instanceof BN) {\n    amount = amount.toNumber();\n  }\n  return (amount / 10 ** decimals).toString();\n}\n\nexport function toDisplayLabel(mint: PublicKey): string {\n  let whitelistedMint = Object.keys(networks.mainnet.mints)\n    .filter(label => networks.mainnet.mints[label].equals(mint))\n    .pop();\n  if (whitelistedMint) {\n    return whitelistedMint.toUpperCase();\n  }\n  return mint.toString();\n}\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport BN from 'bn.js';\nimport { useSnackbar } from 'notistack';\nimport {\n  Account,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_CLOCK_PUBKEY,\n} from '@solana/web3.js';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport FormControl from '@material-ui/core/FormControl';\nimport Typography from '@material-ui/core/Typography';\nimport { u64 } from '@solana/spl-token';\nimport { TokenInstructions } from '@project-serum/serum';\nimport { useWallet } from '../components/common/WalletProvider';\nimport { ViewTransactionOnExplorerButton } from '../components/common/Notification';\nimport { State as StoreState, ProgramAccount } from '../store/reducer';\nimport { ActionType } from '../store/actions';\nimport * as skin from '../skin';\nimport { toDisplay, toDisplayLabel } from '../utils/tokens';\nimport { memberSigner, registrarSigner } from '../utils/registry';\n\nexport default function Stake() {\n  const { registryClient } = useWallet();\n  const dispatch = useDispatch();\n  const { member, memberAccount, registrarAccount, registrar } = useSelector(\n    (state: StoreState) => {\n      const registrarAccount =\n        state.accounts[state.registry.registrar.toString()];\n      return {\n        member: state.registry.member,\n        memberAccount: state.registry.member\n          ? state.accounts[state.registry.member.toString()]\n          : undefined,\n        registrarAccount: registrarAccount,\n        registrar: state.registry.registrar,\n      };\n    },\n  );\n\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const createPoolTokens = async (amount: number, isLocked: boolean) => {\n    enqueueSnackbar(\n      `Staking ${toDisplayLabel(registrarAccount.poolMint)} Pool tokens`,\n      {\n        variant: 'info',\n      },\n    );\n\n    const tx = await registryClient.rpc.stake(new u64(amount), isLocked, {\n      accounts: {\n        registrar,\n        rewardEventQ: registrarAccount.rewardEventQ,\n        poolMint: registrarAccount.poolMint,\n        member,\n        beneficiary: registryClient.provider.wallet.publicKey,\n        balances: memberAccount.balances,\n        balancesLocked: memberAccount.balancesLocked,\n        memberSigner: (\n          await memberSigner(registryClient.programId, registrar, member!)\n        ).publicKey,\n        registrarSigner: (\n          await registrarSigner(registryClient.programId, registrar)\n        ).publicKey,\n        clock: SYSVAR_CLOCK_PUBKEY,\n        tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n      },\n    });\n    closeSnackbar();\n    enqueueSnackbar(`Staking complete`, {\n      variant: 'success',\n      action: <ViewTransactionOnExplorerButton signature={tx} />,\n    });\n  };\n\n  const redeemPoolTokens = async (amount: number, isLocked: boolean) => {\n    enqueueSnackbar(\n      `Unstaking ${amount} ${toDisplayLabel(\n        registrarAccount.poolMint,\n      )} Pool tokens`,\n      {\n        variant: 'info',\n      },\n    );\n\n    const pendingWithdrawal = new Account();\n    const tx = await registryClient.rpc.startUnstake(\n      new u64(amount),\n      isLocked,\n      {\n        accounts: {\n          registrar,\n          rewardEventQ: registrarAccount.rewardEventQ,\n          poolMint: registrarAccount.poolMint,\n\n          pendingWithdrawal: pendingWithdrawal.publicKey,\n          member,\n          beneficiary: registryClient.provider.wallet.publicKey,\n          balances: memberAccount.balances,\n          balancesLocked: memberAccount.balancesLocked,\n\n          memberSigner: (\n            await memberSigner(registryClient.programId, registrar, member!)\n          ).publicKey,\n\n          tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n          clock: SYSVAR_CLOCK_PUBKEY,\n          rent: SYSVAR_RENT_PUBKEY,\n        },\n        signers: [pendingWithdrawal],\n        instructions: [\n          await registryClient.account.pendingWithdrawal.createInstruction(\n            pendingWithdrawal,\n          ),\n        ],\n      },\n    );\n    const pwAccount = await registryClient.account.pendingWithdrawal(\n      pendingWithdrawal.publicKey,\n    );\n    dispatch({\n      type: ActionType.RegistryCreatePendingWithdrawal,\n      item: {\n        pendingWithdrawal: {\n          publicKey: pendingWithdrawal.publicKey,\n          account: pwAccount,\n        },\n      },\n    });\n    closeSnackbar();\n    enqueueSnackbar(`Stake transfer initiated`, {\n      variant: 'success',\n      action: <ViewTransactionOnExplorerButton signature={tx} />,\n    });\n  };\n\n  const createPool = async (shares: number, isLocked: boolean) => {\n    if (shares > 0) {\n      createPoolTokens(shares, isLocked).catch(err => {\n        console.error(err);\n        enqueueSnackbar(`Error staking: ${err.toString()}`, {\n          variant: 'error',\n        });\n      });\n    }\n  };\n  const redeemPool = async (shares: number, isLocked: boolean) => {\n    if (shares > 0) {\n      redeemPoolTokens(shares, isLocked).catch(err => {\n        console.error(err);\n        enqueueSnackbar(`Error unstaking: ${err.toString()}`, {\n          variant: 'error',\n        });\n      });\n    }\n  };\n\n  return (\n    <div style={{ display: 'flex', width: '100%' }}>\n      <div style={{ flex: 1, marginTop: '24px', marginBottom: '24px' }}>\n        <PoolCard\n          title={'Stake Pool'}\n          create={createPool}\n          redeem={redeemPool}\n        />\n      </div>\n      <RedemptionList\n        style={{\n          marginBottom: '24px',\n        }}\n      />\n    </div>\n  );\n}\n\ntype PoolCardProps = {\n  title: string;\n  create: (shares: number, isLocked: boolean) => void;\n  redeem: (shares: number, isLocked: boolean) => void;\n};\n\nfunction PoolCard(props: PoolCardProps) {\n  const { title, create, redeem } = props;\n  const [poolAmount, setPoolAmount] = useState<null | number>(null);\n  const [isLocked, setIsLocked] = useState(false);\n  const { poolTokenMint, member, registrarAccount, mint } = useSelector(\n    (state: StoreState) => {\n      const registrarAccount =\n        state.accounts[state.registry.registrar.toString()];\n      const poolTokenMint = {\n        publicKey: registrarAccount.poolMint,\n        account: state.accounts[registrarAccount.poolMint.toString()],\n      };\n      return {\n        poolTokenMint,\n        member: state.registry.member,\n        registrarAccount,\n        mint: {\n          publicKey: registrarAccount.mint,\n          account: state.accounts[registrarAccount.mint.toString()],\n        },\n      };\n    },\n  );\n\n  const pricePerShare = toDisplay(\n    registrarAccount.stakeRate,\n    mint.account.decimals,\n  );\n\n  const cost = poolAmount\n    ? toDisplay(\n        registrarAccount.stakeRate.mul(new BN(poolAmount)),\n        mint.account.decimals,\n      )\n    : 0;\n\n  return (\n    <Card\n      style={{\n        marginBottom: '24px',\n      }}\n    >\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <CardHeader\n          title={title}\n          subheader={poolTokenMint.publicKey.toString()}\n        />\n        <div\n          style={{\n            paddingRight: '16px',\n            display: 'flex',\n            justifyContent: 'center',\n            flexDirection: 'column',\n          }}\n        >\n          <Typography color=\"textSecondary\"></Typography>\n        </div>\n      </div>\n      <CardContent>\n        <div\n          style={{\n            marginBottom: '16px',\n          }}\n        >\n          <Typography>\n            Please enter the amount of pool tokens you would like to purchase in\n            the form below. Upon pressing <b>stake</b> you will create new pool\n            tokens at a fixed price, adding to the amount of pool tokens\n            outstanding.\n          </Typography>\n          <br />\n          <Typography>\n            Unstaking works similarly, except one must incur an unbonding period\n            where funds will be not be able to be retrieved until the unbonding\n            period ends. For SRM, this is one week. Other staking pools may be\n            configured differently. At the end of the unbonding period, click\n            the blue checkbox next to your pending transfer. If the checkbox is\n            grey, your unbonding period has not yet completed.\n          </Typography>\n          <br />\n          <Typography style={{ fontWeight: 'bold' }}>\n            Total pool tokens outstanding\n          </Typography>\n          <Typography>{poolTokenMint.account.supply.toString()}</Typography>\n          <Typography style={{ fontWeight: 'bold' }}>\n            Price per pool token\n          </Typography>\n          <Typography>{pricePerShare.toString()}</Typography>\n          <Typography style={{ fontWeight: 'bold' }}>\n            Your total cost\n          </Typography>\n          <Typography>\n            {cost} {toDisplayLabel(mint.publicKey)}\n          </Typography>\n        </div>\n        <div>\n          <div style={{ marginBottom: '10px' }}>\n            <FormControl>\n              <TextField\n                style={{ width: '100%' }}\n                label=\"Pool tokens\"\n                type=\"number\"\n                variant=\"outlined\"\n                onChange={e => setPoolAmount(parseInt(e.target.value))}\n              />\n            </FormControl>\n          </div>\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <div>\n              <Button\n                disabled={member === undefined}\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => create(poolAmount as number, isLocked)}\n              >\n                Stake\n              </Button>\n              <Button\n                disabled={member === undefined}\n                color=\"secondary\"\n                variant=\"contained\"\n                style={{ marginLeft: '10px' }}\n                onClick={() => redeem(poolAmount as number, isLocked)}\n              >\n                Unstake\n              </Button>\n            </div>\n            <div>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={isLocked}\n                    onChange={() => setIsLocked(!isLocked)}\n                  />\n                }\n                labelPlacement={'start'}\n                label=\"Locked balances\"\n              />\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\ntype RedemptionListProps = {\n  style: any;\n};\n\nfunction RedemptionList(props: RedemptionListProps) {\n  const { registryClient } = useWallet();\n  const dispatch = useDispatch();\n  const { member, registrar, mint, pendingWithdrawals } = useSelector(\n    (state: StoreState) => {\n      const member = state.registry.member\n        ? {\n            publicKey: state.registry.member,\n            account: state.accounts[state.registry.member.toString()],\n          }\n        : undefined;\n      const registrar = {\n        publicKey: state.registry.registrar!,\n        account: state.accounts[state.registry.registrar.toString()],\n      };\n      const mint = {\n        publicKey: registrar.account.mint,\n        account: state.accounts[registrar.account.mint.toString()],\n      };\n      const pendingWithdrawals =\n        state.registry.pendingWithdrawals === null\n          ? null\n          : state.registry.pendingWithdrawals.map(pw => {\n              return {\n                publicKey: pw,\n                account: state.accounts[pw.toString()],\n              };\n            });\n      return {\n        member,\n        registrar,\n        mint,\n        pendingWithdrawals,\n      };\n    },\n  );\n\n  useEffect(() => {\n    if (!member) {\n      return;\n    }\n    if (pendingWithdrawals !== null) {\n      return;\n    }\n\n    // Only grab pending withdrawals for the current member account.\n    const filter = Buffer.concat([\n      registrar.publicKey.toBuffer(),\n      member.publicKey.toBuffer(),\n    ]);\n    registryClient.account.pendingWithdrawal\n      .all(filter)\n      .then(pendingWithdrawals => {\n        dispatch({\n          type: ActionType.RegistrySetPendingWithdrawals,\n          item: {\n            pendingWithdrawals,\n          },\n        });\n      });\n  }, [\n    dispatch,\n    registrar,\n    member,\n    pendingWithdrawals,\n    registryClient.account.pendingWithdrawal,\n  ]);\n\n  return (\n    <div style={props.style}>\n      <Card\n        style={{\n          marginLeft: '20px',\n          marginTop: '24px',\n          width: '294px',\n        }}\n      >\n        <CardContent\n          style={{\n            paddingLeft: 0,\n            paddingRight: 0,\n            paddingBottom: 0,\n            paddingTop: 0,\n          }}\n        >\n          <div\n            style={{\n              marginLeft: '24px',\n              marginTop: '24px',\n              marginRight: '24px',\n              borderBottom: 'solid 1pt #ccc',\n              paddingBottom: '12px',\n            }}\n          >\n            <Typography style={{}}>Pending Transfers</Typography>\n            <Typography style={{ fontSize: '12px' }} color=\"textSecondary\">\n              Click the checkmark to complete a transfer on or after the \"end\"\n              date.\n            </Typography>\n          </div>\n          <div style={{ paddingLeft: '24px', paddingRight: '24px' }}>\n            {member && pendingWithdrawals === null ? (\n              <div style={{ paddingTop: '24px', marginBottom: '24px' }}>\n                <CircularProgress\n                  style={{\n                    display: 'block',\n                    marginLeft: 'auto',\n                    marginRight: 'auto',\n                  }}\n                />\n              </div>\n            ) : pendingWithdrawals !== null && pendingWithdrawals.length > 0 ? (\n              pendingWithdrawals.map((pw, idx) => {\n                return (\n                  <PendingStakeListItem\n                    key={pw.publicKey.toString()}\n                    isLast={idx === pendingWithdrawals.length - 1}\n                    registrar={registrar}\n                    pw={pw}\n                    member={member!}\n                    mint={mint}\n                  />\n                );\n              })\n            ) : (\n              <div\n                style={{\n                  paddingBottom: '24px',\n                  paddingTop: '12px',\n                }}\n              >\n                <Typography color=\"textSecondary\" style={{ fontSize: '14px' }}>\n                  None found\n                </Typography>\n              </div>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\ntype PendingStakeListItemProps = {\n  isLast?: boolean;\n  registrar: ProgramAccount;\n  pw: ProgramAccount;\n  member: ProgramAccount;\n  mint: ProgramAccount;\n};\n\nfunction PendingStakeListItem(props: PendingStakeListItemProps) {\n  const { isLast, pw, member, registrar, mint } = props;\n  const sptLabel = (() => {\n    const isLocked = pw.account.locked;\n    const l = isLocked ? '(locked)' : '';\n    return `${toDisplay(\n      pw.account.amount,\n      mint.account.decimals,\n    )} ${toDisplayLabel(mint.publicKey)} ${l}`;\n  })();\n  return (\n    <div\n      style={{\n        paddingBottom: !isLast ? '12px' : '24px',\n        paddingTop: '12px',\n        borderBottom: 'solid 1pt #ccc',\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          overflow: 'hidden',\n        }}\n      >\n        <div>\n          <Typography\n            style={{\n              whiteSpace: 'pre',\n              maxWidth: '195px',\n              overflow: 'hidden',\n              fontWeight: 'bold',\n              fontSize: '14px',\n            }}\n          >\n            {`${sptLabel}`}\n          </Typography>\n        </div>\n        <div>\n          <PendingWithdrawalButton\n            registrar={registrar}\n            member={member}\n            pendingWithdrawal={pw}\n          />\n        </div>\n      </div>\n      <Typography style={{ fontSize: '14px' }}>\n        {`Start: ${new Date(\n          pw.account.startTs.toNumber() * 1000,\n        ).toLocaleString()}`}\n      </Typography>\n      <Typography style={{ fontSize: '14px' }}>\n        {`End:   ${new Date(\n          pw.account.endTs.toNumber() * 1000,\n        ).toLocaleString()}`}\n      </Typography>\n      <Typography\n        color=\"textSecondary\"\n        style={{\n          fontSize: '14px',\n          overflow: 'hidden',\n        }}\n      >\n        {pw.account.pool.toString()}\n      </Typography>\n    </div>\n  );\n}\n\ntype PendingWithdrawalButtonProps = {\n  registrar: ProgramAccount;\n  pendingWithdrawal: ProgramAccount;\n  member: ProgramAccount;\n};\n\nfunction PendingWithdrawalButton(props: PendingWithdrawalButtonProps) {\n  const { pendingWithdrawal, member, registrar } = props;\n  const { registryClient } = useWallet();\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const dispatch = useDispatch();\n\n  const endPendingWithdrawal = async () => {\n    enqueueSnackbar(`Completing redemption`, {\n      variant: 'info',\n    });\n    const balances = pendingWithdrawal.account.locked\n      ? member.account.balancesLocked\n      : member.account.balances;\n    const tx = await registryClient.rpc.endUnstake({\n      accounts: {\n        registrar: registrar.publicKey,\n        member: member.publicKey,\n        beneficiary: registryClient.provider.wallet.publicKey,\n        pendingWithdrawal: pendingWithdrawal.publicKey,\n        vault: balances.vault,\n        vaultPw: balances.vaultPw,\n        memberSigner: (\n          await memberSigner(\n            registryClient.programId,\n            registrar.publicKey,\n            member.publicKey,\n          )\n        ).publicKey,\n        clock: SYSVAR_CLOCK_PUBKEY,\n        tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n      },\n    });\n\n    const updatedPendingWithdrawal = {\n      publicKey: pendingWithdrawal.publicKey,\n      account: {\n        ...pendingWithdrawal.account,\n        burned: true,\n      },\n    };\n\n    dispatch({\n      type: ActionType.RegistryUpdatePendingWithdrawal,\n      item: {\n        pendingWithdrawal: updatedPendingWithdrawal,\n      },\n    });\n\n    closeSnackbar();\n    enqueueSnackbar(`Stake transfer completed`, {\n      variant: 'success',\n      action: <ViewTransactionOnExplorerButton signature={tx} />,\n    });\n  };\n\n  let disabled = false;\n  let color = skin.instance().ready;\n  let onClick = async () =>\n    endPendingWithdrawal().catch(err => {\n      console.error(`Error completing transfer: ${err.toString()}`);\n      enqueueSnackbar(\n        `Error completing transfer. Wait for the transfer's timelock to end and try again.`,\n        {\n          variant: 'error',\n        },\n      );\n    });\n  if (pendingWithdrawal.account.burned) {\n    disabled = true;\n    color = skin.instance().active;\n    onClick = async () => {};\n  }\n\n  if (pendingWithdrawal.account.endTs.toNumber() > Date.now() / 1000) {\n    disabled = true;\n    color = skin.instance().notReady;\n    onClick = async () => {};\n  }\n\n  return (\n    <div\n      onClick={onClick}\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n      }}\n    >\n      <IconButton disabled={disabled} style={{ width: '25px', height: '25px' }}>\n        <CheckCircleIcon style={{ color, fontSize: '20px' }} />\n      </IconButton>\n    </div>\n  );\n}\n","import { Idl } from '@project-serum/anchor';\n\nconst idl: Idl = {\n  version: '0.0.0',\n  name: 'lockup',\n  instructions: [\n    {\n      name: 'createVesting',\n      accounts: [\n        {\n          name: 'vesting',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'vault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'depositor',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'depositorAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'clock',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'beneficiary',\n          type: 'publicKey',\n        },\n        {\n          name: 'depositAmount',\n          type: 'u64',\n        },\n        {\n          name: 'nonce',\n          type: 'u8',\n        },\n        {\n          name: 'startTs',\n          type: 'i64',\n        },\n        {\n          name: 'endTs',\n          type: 'i64',\n        },\n        {\n          name: 'periodCount',\n          type: 'u64',\n        },\n        {\n          name: 'realizor',\n          type: {\n            option: {\n              defined: 'Realizor',\n            },\n          },\n        },\n      ],\n    },\n    {\n      name: 'withdraw',\n      accounts: [\n        {\n          name: 'vesting',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'beneficiary',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'vault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'vestingSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'token',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'clock',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'amount',\n          type: 'u64',\n        },\n      ],\n    },\n    {\n      name: 'whitelistWithdraw',\n      accounts: [\n        {\n          name: 'transfer',\n          accounts: [\n            {\n              name: 'lockup',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'beneficiary',\n              isMut: false,\n              isSigner: true,\n            },\n            {\n              name: 'whitelistedProgram',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'vesting',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vestingSigner',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'tokenProgram',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'whitelistedProgramVault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'whitelistedProgramVaultAuthority',\n              isMut: false,\n              isSigner: false,\n            },\n          ],\n        },\n      ],\n      args: [\n        {\n          name: 'instructionData',\n          type: 'bytes',\n        },\n        {\n          name: 'amount',\n          type: 'u64',\n        },\n      ],\n    },\n    {\n      name: 'whitelistDeposit',\n      accounts: [\n        {\n          name: 'transfer',\n          accounts: [\n            {\n              name: 'lockup',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'beneficiary',\n              isMut: false,\n              isSigner: true,\n            },\n            {\n              name: 'whitelistedProgram',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'vesting',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vestingSigner',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'tokenProgram',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'whitelistedProgramVault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'whitelistedProgramVaultAuthority',\n              isMut: false,\n              isSigner: false,\n            },\n          ],\n        },\n      ],\n      args: [\n        {\n          name: 'instructionData',\n          type: 'bytes',\n        },\n      ],\n    },\n    {\n      name: 'availableForWithdrawal',\n      accounts: [\n        {\n          name: 'vesting',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'clock',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n  ],\n  state: {\n    struct: {\n      name: 'Lockup',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'authority',\n            type: 'publicKey',\n          },\n          {\n            name: 'whitelist',\n            type: {\n              vec: {\n                defined: 'WhitelistEntry',\n              },\n            },\n          },\n        ],\n      },\n    },\n    methods: [\n      {\n        name: 'new',\n        accounts: [\n          {\n            name: 'authority',\n            isMut: false,\n            isSigner: true,\n          },\n        ],\n        args: [],\n      },\n      {\n        name: 'whitelistAdd',\n        accounts: [\n          {\n            name: 'authority',\n            isMut: false,\n            isSigner: true,\n          },\n        ],\n        args: [\n          {\n            name: 'entry',\n            type: {\n              defined: 'WhitelistEntry',\n            },\n          },\n        ],\n      },\n      {\n        name: 'whitelistDelete',\n        accounts: [\n          {\n            name: 'authority',\n            isMut: false,\n            isSigner: true,\n          },\n        ],\n        args: [\n          {\n            name: 'entry',\n            type: {\n              defined: 'WhitelistEntry',\n            },\n          },\n        ],\n      },\n      {\n        name: 'setAuthority',\n        accounts: [\n          {\n            name: 'authority',\n            isMut: false,\n            isSigner: true,\n          },\n        ],\n        args: [\n          {\n            name: 'newAuthority',\n            type: 'publicKey',\n          },\n        ],\n      },\n    ],\n  },\n  accounts: [\n    {\n      name: 'Vesting',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'beneficiary',\n            type: 'publicKey',\n          },\n          {\n            name: 'mint',\n            type: 'publicKey',\n          },\n          {\n            name: 'vault',\n            type: 'publicKey',\n          },\n          {\n            name: 'grantor',\n            type: 'publicKey',\n          },\n          {\n            name: 'outstanding',\n            type: 'u64',\n          },\n          {\n            name: 'startBalance',\n            type: 'u64',\n          },\n          {\n            name: 'createdTs',\n            type: 'i64',\n          },\n          {\n            name: 'startTs',\n            type: 'i64',\n          },\n          {\n            name: 'endTs',\n            type: 'i64',\n          },\n          {\n            name: 'periodCount',\n            type: 'u64',\n          },\n          {\n            name: 'whitelistOwned',\n            type: 'u64',\n          },\n          {\n            name: 'nonce',\n            type: 'u8',\n          },\n          {\n            name: 'realizor',\n            type: {\n              option: {\n                defined: 'Realizor',\n              },\n            },\n          },\n        ],\n      },\n    },\n  ],\n  types: [\n    {\n      name: 'Realizor',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'program',\n            type: 'publicKey',\n          },\n          {\n            name: 'metadata',\n            type: 'publicKey',\n          },\n        ],\n      },\n    },\n    {\n      name: 'WhitelistEntry',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'programId',\n            type: 'publicKey',\n          },\n        ],\n      },\n    },\n  ],\n  errors: [\n    {\n      code: 100,\n      name: 'InvalidTimestamp',\n      msg: 'Vesting end must be greater than the current unix timestamp.',\n    },\n    {\n      code: 101,\n      name: 'InvalidPeriod',\n      msg: 'The number of vesting periods must be greater than zero.',\n    },\n    {\n      code: 102,\n      name: 'InvalidDepositAmount',\n      msg: 'The vesting deposit amount must be greater than zero.',\n    },\n    {\n      code: 103,\n      name: 'InvalidWhitelistEntry',\n      msg: 'The Whitelist entry is not a valid program address.',\n    },\n    {\n      code: 104,\n      name: 'InvalidProgramAddress',\n      msg: 'Invalid program address. Did you provide the correct nonce?',\n    },\n    {\n      code: 105,\n      name: 'InvalidVaultOwner',\n      msg: 'Invalid vault owner.',\n    },\n    {\n      code: 106,\n      name: 'InvalidVaultAmount',\n      msg: 'Vault amount must be zero.',\n    },\n    {\n      code: 107,\n      name: 'InsufficientWithdrawalBalance',\n      msg: 'Insufficient withdrawal balance.',\n    },\n    {\n      code: 108,\n      name: 'WhitelistFull',\n      msg: 'Whitelist is full',\n    },\n    {\n      code: 109,\n      name: 'WhitelistEntryAlreadyExists',\n      msg: 'Whitelist entry already exists',\n    },\n    {\n      code: 110,\n      name: 'InsufficientWhitelistDepositAmount',\n      msg: 'Balance must go up when performing a whitelist deposit',\n    },\n    {\n      code: 111,\n      name: 'WhitelistDepositOverflow',\n      msg: 'Cannot deposit more than withdrawn',\n    },\n    {\n      code: 112,\n      name: 'WhitelistWithdrawLimit',\n      msg: 'Tried to withdraw over the specified limit',\n    },\n    {\n      code: 113,\n      name: 'WhitelistEntryNotFound',\n      msg: 'Whitelist entry not found.',\n    },\n    {\n      code: 114,\n      name: 'Unauthorized',\n      msg: 'You do not have sufficient permissions to perform this action.',\n    },\n    {\n      code: 115,\n      name: 'UnableToWithdrawWhileStaked',\n      msg: 'You are unable to realize projected rewards until unstaking.',\n    },\n    {\n      code: 116,\n      name: 'InvalidLockRealizor',\n      msg: \"The given lock realizor doesn't match the vesting account.\",\n    },\n    {\n      code: 117,\n      name: 'UnrealizedVesting',\n      msg: 'You have not realized this vesting account.',\n    },\n    {\n      code: 118,\n      name: 'InvalidSchedule',\n      msg: 'Invalid vesting schedule given.',\n    },\n  ],\n};\n\nexport default idl;\n","import { Idl } from '@project-serum/anchor';\n\nconst idl: Idl = {\n  version: '0.0.0',\n  name: 'registry',\n  instructions: [\n    {\n      name: 'initialize',\n      accounts: [\n        {\n          name: 'registrar',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'rewardEventQ',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolMint',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'mint',\n          type: 'publicKey',\n        },\n        {\n          name: 'authority',\n          type: 'publicKey',\n        },\n        {\n          name: 'nonce',\n          type: 'u8',\n        },\n        {\n          name: 'withdrawalTimelock',\n          type: 'i64',\n        },\n        {\n          name: 'stakeRate',\n          type: 'u64',\n        },\n        {\n          name: 'rewardQLen',\n          type: 'u32',\n        },\n      ],\n    },\n    {\n      name: 'updateRegistrar',\n      accounts: [\n        {\n          name: 'registrar',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'authority',\n          isMut: false,\n          isSigner: true,\n        },\n      ],\n      args: [\n        {\n          name: 'newAuthority',\n          type: {\n            option: 'publicKey',\n          },\n        },\n        {\n          name: 'withdrawalTimelock',\n          type: {\n            option: 'i64',\n          },\n        },\n      ],\n    },\n    {\n      name: 'createMember',\n      accounts: [\n        {\n          name: 'registrar',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'member',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'beneficiary',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'balances',\n          accounts: [\n            {\n              name: 'spt',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultStake',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultPw',\n              isMut: true,\n              isSigner: false,\n            },\n          ],\n        },\n        {\n          name: 'balancesLocked',\n          accounts: [\n            {\n              name: 'spt',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultStake',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultPw',\n              isMut: true,\n              isSigner: false,\n            },\n          ],\n        },\n        {\n          name: 'memberSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'nonce',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'updateMember',\n      accounts: [\n        {\n          name: 'member',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'beneficiary',\n          isMut: false,\n          isSigner: true,\n        },\n      ],\n      args: [\n        {\n          name: 'metadata',\n          type: {\n            option: 'publicKey',\n          },\n        },\n      ],\n    },\n    {\n      name: 'deposit',\n      accounts: [\n        {\n          name: 'member',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'beneficiary',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'vault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'depositor',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'depositorAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'amount',\n          type: 'u64',\n        },\n      ],\n    },\n    {\n      name: 'depositLocked',\n      accounts: [\n        {\n          name: 'vesting',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'vestingVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'depositorAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'memberVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'memberSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'registry',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'registrar',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'member',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'beneficiary',\n          isMut: false,\n          isSigner: true,\n        },\n      ],\n      args: [\n        {\n          name: 'amount',\n          type: 'u64',\n        },\n      ],\n    },\n    {\n      name: 'stake',\n      accounts: [\n        {\n          name: 'registrar',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rewardEventQ',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'poolMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'member',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'beneficiary',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'balances',\n          accounts: [\n            {\n              name: 'spt',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultStake',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultPw',\n              isMut: true,\n              isSigner: false,\n            },\n          ],\n        },\n        {\n          name: 'balancesLocked',\n          accounts: [\n            {\n              name: 'spt',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultStake',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultPw',\n              isMut: true,\n              isSigner: false,\n            },\n          ],\n        },\n        {\n          name: 'memberSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'registrarSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'clock',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'sptAmount',\n          type: 'u64',\n        },\n        {\n          name: 'locked',\n          type: 'bool',\n        },\n      ],\n    },\n    {\n      name: 'startUnstake',\n      accounts: [\n        {\n          name: 'registrar',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rewardEventQ',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'poolMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'pendingWithdrawal',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'member',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'beneficiary',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'balances',\n          accounts: [\n            {\n              name: 'spt',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultStake',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultPw',\n              isMut: true,\n              isSigner: false,\n            },\n          ],\n        },\n        {\n          name: 'balancesLocked',\n          accounts: [\n            {\n              name: 'spt',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultStake',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultPw',\n              isMut: true,\n              isSigner: false,\n            },\n          ],\n        },\n        {\n          name: 'memberSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'clock',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'sptAmount',\n          type: 'u64',\n        },\n        {\n          name: 'locked',\n          type: 'bool',\n        },\n      ],\n    },\n    {\n      name: 'endUnstake',\n      accounts: [\n        {\n          name: 'registrar',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'member',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'beneficiary',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'pendingWithdrawal',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'vault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'vaultPw',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'memberSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'clock',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'withdraw',\n      accounts: [\n        {\n          name: 'registrar',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'member',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'beneficiary',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'vault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'memberSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'depositor',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'amount',\n          type: 'u64',\n        },\n      ],\n    },\n    {\n      name: 'withdrawLocked',\n      accounts: [\n        {\n          name: 'vesting',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'vestingVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'vestingSigner',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'memberVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'memberSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'registry',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'registrar',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'member',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'beneficiary',\n          isMut: false,\n          isSigner: true,\n        },\n      ],\n      args: [\n        {\n          name: 'amount',\n          type: 'u64',\n        },\n      ],\n    },\n    {\n      name: 'dropReward',\n      accounts: [\n        {\n          name: 'registrar',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rewardEventQ',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolMint',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'vendor',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'vendorVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'depositor',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'depositorAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'clock',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'kind',\n          type: {\n            defined: 'RewardVendorKind',\n          },\n        },\n        {\n          name: 'total',\n          type: 'u64',\n        },\n        {\n          name: 'expiryTs',\n          type: 'i64',\n        },\n        {\n          name: 'expiryReceiver',\n          type: 'publicKey',\n        },\n        {\n          name: 'nonce',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'claimReward',\n      accounts: [\n        {\n          name: 'cmn',\n          accounts: [\n            {\n              name: 'registrar',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'member',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'beneficiary',\n              isMut: false,\n              isSigner: true,\n            },\n            {\n              name: 'balances',\n              accounts: [\n                {\n                  name: 'spt',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vault',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vaultStake',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vaultPw',\n                  isMut: true,\n                  isSigner: false,\n                },\n              ],\n            },\n            {\n              name: 'balancesLocked',\n              accounts: [\n                {\n                  name: 'spt',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vault',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vaultStake',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vaultPw',\n                  isMut: true,\n                  isSigner: false,\n                },\n              ],\n            },\n            {\n              name: 'vendor',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'vault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vendorSigner',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'tokenProgram',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'clock',\n              isMut: false,\n              isSigner: false,\n            },\n          ],\n        },\n        {\n          name: 'to',\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'claimRewardLocked',\n      accounts: [\n        {\n          name: 'cmn',\n          accounts: [\n            {\n              name: 'registrar',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'member',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'beneficiary',\n              isMut: false,\n              isSigner: true,\n            },\n            {\n              name: 'balances',\n              accounts: [\n                {\n                  name: 'spt',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vault',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vaultStake',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vaultPw',\n                  isMut: true,\n                  isSigner: false,\n                },\n              ],\n            },\n            {\n              name: 'balancesLocked',\n              accounts: [\n                {\n                  name: 'spt',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vault',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vaultStake',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vaultPw',\n                  isMut: true,\n                  isSigner: false,\n                },\n              ],\n            },\n            {\n              name: 'vendor',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'vault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vendorSigner',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'tokenProgram',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'clock',\n              isMut: false,\n              isSigner: false,\n            },\n          ],\n        },\n        {\n          name: 'registry',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'lockupProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'nonce',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'expireReward',\n      accounts: [\n        {\n          name: 'registrar',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'vendor',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'vault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'vendorSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'expiryReceiver',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'expiryReceiverToken',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'clock',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n  ],\n  state: {\n    struct: {\n      name: 'Registry',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'lockupProgram',\n            type: 'publicKey',\n          },\n        ],\n      },\n    },\n    methods: [\n      {\n        name: 'new',\n        accounts: [\n          {\n            name: 'lockupProgram',\n            isMut: false,\n            isSigner: false,\n          },\n        ],\n        args: [],\n      },\n      {\n        name: 'setLockupProgram',\n        accounts: [\n          {\n            name: 'authority',\n            isMut: false,\n            isSigner: true,\n          },\n        ],\n        args: [\n          {\n            name: 'lockupProgram',\n            type: 'publicKey',\n          },\n        ],\n      },\n    ],\n  },\n  accounts: [\n    {\n      name: 'Registrar',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'authority',\n            type: 'publicKey',\n          },\n          {\n            name: 'nonce',\n            type: 'u8',\n          },\n          {\n            name: 'withdrawalTimelock',\n            type: 'i64',\n          },\n          {\n            name: 'rewardEventQ',\n            type: 'publicKey',\n          },\n          {\n            name: 'mint',\n            type: 'publicKey',\n          },\n          {\n            name: 'poolMint',\n            type: 'publicKey',\n          },\n          {\n            name: 'stakeRate',\n            type: 'u64',\n          },\n        ],\n      },\n    },\n    {\n      name: 'Member',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'registrar',\n            type: 'publicKey',\n          },\n          {\n            name: 'beneficiary',\n            type: 'publicKey',\n          },\n          {\n            name: 'metadata',\n            type: 'publicKey',\n          },\n          {\n            name: 'balances',\n            type: {\n              defined: 'BalanceSandbox',\n            },\n          },\n          {\n            name: 'balancesLocked',\n            type: {\n              defined: 'BalanceSandbox',\n            },\n          },\n          {\n            name: 'rewardsCursor',\n            type: 'u32',\n          },\n          {\n            name: 'lastStakeTs',\n            type: 'i64',\n          },\n          {\n            name: 'nonce',\n            type: 'u8',\n          },\n        ],\n      },\n    },\n    {\n      name: 'PendingWithdrawal',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'registrar',\n            type: 'publicKey',\n          },\n          {\n            name: 'member',\n            type: 'publicKey',\n          },\n          {\n            name: 'burned',\n            type: 'bool',\n          },\n          {\n            name: 'pool',\n            type: 'publicKey',\n          },\n          {\n            name: 'startTs',\n            type: 'i64',\n          },\n          {\n            name: 'endTs',\n            type: 'i64',\n          },\n          {\n            name: 'amount',\n            type: 'u64',\n          },\n          {\n            name: 'locked',\n            type: 'bool',\n          },\n        ],\n      },\n    },\n    {\n      name: 'RewardQueue',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'head',\n            type: 'u32',\n          },\n          {\n            name: 'tail',\n            type: 'u32',\n          },\n          {\n            name: 'events',\n            type: {\n              vec: {\n                defined: 'RewardEvent',\n              },\n            },\n          },\n        ],\n      },\n    },\n    {\n      name: 'RewardVendor',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'registrar',\n            type: 'publicKey',\n          },\n          {\n            name: 'vault',\n            type: 'publicKey',\n          },\n          {\n            name: 'mint',\n            type: 'publicKey',\n          },\n          {\n            name: 'nonce',\n            type: 'u8',\n          },\n          {\n            name: 'poolTokenSupply',\n            type: 'u64',\n          },\n          {\n            name: 'rewardEventQCursor',\n            type: 'u32',\n          },\n          {\n            name: 'startTs',\n            type: 'i64',\n          },\n          {\n            name: 'expiryTs',\n            type: 'i64',\n          },\n          {\n            name: 'expiryReceiver',\n            type: 'publicKey',\n          },\n          {\n            name: 'from',\n            type: 'publicKey',\n          },\n          {\n            name: 'total',\n            type: 'u64',\n          },\n          {\n            name: 'expired',\n            type: 'bool',\n          },\n          {\n            name: 'kind',\n            type: {\n              defined: 'RewardVendorKind',\n            },\n          },\n        ],\n      },\n    },\n  ],\n  types: [\n    {\n      name: 'BalanceSandbox',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'spt',\n            type: 'publicKey',\n          },\n          {\n            name: 'vault',\n            type: 'publicKey',\n          },\n          {\n            name: 'vaultStake',\n            type: 'publicKey',\n          },\n          {\n            name: 'vaultPw',\n            type: 'publicKey',\n          },\n        ],\n      },\n    },\n    {\n      name: 'RewardEvent',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'vendor',\n            type: 'publicKey',\n          },\n          {\n            name: 'ts',\n            type: 'i64',\n          },\n          {\n            name: 'locked',\n            type: 'bool',\n          },\n        ],\n      },\n    },\n    {\n      name: 'RewardVendorKind',\n      type: {\n        kind: 'enum',\n        variants: [\n          {\n            name: 'Unlocked',\n          },\n          {\n            name: 'Locked',\n            fields: [\n              {\n                name: 'start_ts',\n                type: 'i64',\n              },\n              {\n                name: 'end_ts',\n                type: 'i64',\n              },\n              {\n                name: 'period_count',\n                type: 'u64',\n              },\n            ],\n          },\n        ],\n      },\n    },\n  ],\n  errors: [\n    {\n      code: 100,\n      name: 'RewardQAlreadyInitialized',\n      msg: 'The given reward queue has already been initialized.',\n    },\n    {\n      code: 101,\n      name: 'InvalidNonce',\n      msg: \"The nonce given doesn't derive a valid program address.\",\n    },\n    {\n      code: 102,\n      name: 'InvalidPoolMintAuthority',\n      msg: 'Invalid pool mint authority',\n    },\n    {\n      code: 103,\n      name: 'InvalidMemberSigner',\n      msg: \"Member signer doesn't match the derived address.\",\n    },\n    {\n      code: 104,\n      name: 'InvalidVaultDeposit',\n      msg: 'The given vault owner must match the signing depositor.',\n    },\n    {\n      code: 105,\n      name: 'InvalidDepositor',\n      msg: \"The signing depositor doesn't match either of the balance accounts\",\n    },\n    {\n      code: 106,\n      name: 'InvalidVault',\n      msg: 'The vault given does not match the vault expected.',\n    },\n    {\n      code: 107,\n      name: 'InvalidVaultOwner',\n      msg: 'Invalid vault owner.',\n    },\n    {\n      code: 108,\n      name: 'Unknown',\n      msg: 'An unknown error has occured.',\n    },\n    {\n      code: 109,\n      name: 'UnstakeTimelock',\n      msg: 'The unstake timelock has not yet expired.',\n    },\n    {\n      code: 110,\n      name: 'InsufficientReward',\n      msg: 'Reward vendors must have at least one token unit per pool token',\n    },\n    {\n      code: 111,\n      name: 'InvalidExpiry',\n      msg: 'Reward expiry must be after the current clock timestamp.',\n    },\n    {\n      code: 112,\n      name: 'VendorExpired',\n      msg: 'The reward vendor has been expired.',\n    },\n    {\n      code: 113,\n      name: 'CursorAlreadyProcessed',\n      msg: 'This reward has already been processed.',\n    },\n    {\n      code: 114,\n      name: 'NotStakedDuringDrop',\n      msg: 'The account was not staked at the time of this reward.',\n    },\n    {\n      code: 115,\n      name: 'VendorNotYetExpired',\n      msg: 'The vendor is not yet eligible for expiry.',\n    },\n    {\n      code: 116,\n      name: 'RewardsNeedsProcessing',\n      msg: 'Please collect your reward before otherwise using the program.',\n    },\n    {\n      code: 117,\n      name: 'ExpectedLockedVendor',\n      msg: 'Locked reward vendor expected but an unlocked vendor was given.',\n    },\n    {\n      code: 118,\n      name: 'ExpectedUnlockedVendor',\n      msg: 'Unlocked reward vendor expected but a locked vendor was given.',\n    },\n    {\n      code: 119,\n      name: 'InvalidVestingSigner',\n      msg: 'Locked deposit from an invalid deposit authority.',\n    },\n    {\n      code: 120,\n      name: 'UnrealizedReward',\n      msg: 'Locked rewards cannot be realized until one unstaked all tokens.',\n    },\n    {\n      code: 121,\n      name: 'InvalidBeneficiary',\n      msg: \"The beneficiary doesn't match.\",\n    },\n    {\n      code: 122,\n      name: 'InvalidRealizorMetadata',\n      msg: 'The given member account does not match the realizor metadata.',\n    },\n    {\n      code: 123,\n      name: 'InvalidVestingSchedule',\n      msg: 'Invalid vesting schedule for the locked reward.',\n    },\n    {\n      code: 124,\n      name: 'InvalidProgramAuthority',\n      msg: 'Please specify the correct authority for this program.',\n    },\n  ],\n};\n\nexport default idl;\n","import React, {\n  PropsWithChildren,\n  ReactElement,\n  ReactNode,\n  useMemo,\n  useContext,\n} from 'react';\nimport { useSelector } from 'react-redux';\nimport { Connection, ConfirmOptions } from '@solana/web3.js';\n// @ts-ignore\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { Provider } from '@project-serum/common';\nimport { Program } from '@project-serum/anchor';\nimport { State as StoreState } from '../../store/reducer';\nimport LockupIdl from '../../idl/lockup';\nimport RegistryIdl from '../../idl/registry';\n\nexport function useWallet(): WalletContextValues {\n  const w = useContext(WalletContext);\n  if (!w) {\n    throw new Error('Missing wallet context');\n  }\n  return w;\n}\n\nconst WalletContext = React.createContext<null | WalletContextValues>(null);\n\ntype WalletContextValues = {\n  wallet: Wallet;\n  lockupClient: Program;\n  registryClient: Program;\n};\n\nexport default function WalletProvider(\n  props: PropsWithChildren<ReactNode>,\n): ReactElement {\n  const { walletProvider, network } = useSelector((state: StoreState) => {\n    return {\n      walletProvider: state.common.walletProvider,\n      network: state.common.network,\n    };\n  });\n\n  const { wallet, lockupClient, registryClient } = useMemo(() => {\n    const opts: ConfirmOptions = {\n      preflightCommitment: 'recent',\n      commitment: 'recent',\n    };\n    const connection = new Connection(network.url, opts.preflightCommitment);\n    const wallet = new Wallet(walletProvider, network.url);\n    const provider = new Provider(connection, wallet, opts);\n\n    const lockupClient = new Program(\n      LockupIdl,\n      network.lockupProgramId,\n      provider,\n    );\n    const registryClient = new Program(\n      RegistryIdl,\n      network.registryProgramId,\n      provider,\n    );\n\n    return {\n      wallet,\n      lockupClient,\n      registryClient,\n    };\n  }, [walletProvider, network]);\n\n  return (\n    <WalletContext.Provider value={{ wallet, lockupClient, registryClient }}>\n      {props.children}\n    </WalletContext.Provider>\n  );\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rustEnum = exports.str = exports.vecU8 = exports.tagged = exports.vec = exports.bool = exports.option = exports.publicKey = exports.i128 = exports.u128 = exports.i64 = exports.u64 = exports.struct = exports.u32 = exports.u8 = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nvar buffer_layout_2 = require(\"buffer-layout\");\nObject.defineProperty(exports, \"u8\", { enumerable: true, get: function () { return buffer_layout_2.u8; } });\nObject.defineProperty(exports, \"u32\", { enumerable: true, get: function () { return buffer_layout_2.u32; } });\nObject.defineProperty(exports, \"struct\", { enumerable: true, get: function () { return buffer_layout_2.struct; } });\nclass BNLayout extends buffer_layout_1.Layout {\n    constructor(span, signed, property) {\n        super(span, property);\n        this.blob = buffer_layout_1.blob(span);\n        this.signed = signed;\n    }\n    decode(b, offset = 0) {\n        const num = new bn_js_1.default(this.blob.decode(b, offset), 10, 'le');\n        if (this.signed) {\n            return num.fromTwos(this.span * 8).clone();\n        }\n        return num;\n    }\n    encode(src, b, offset = 0) {\n        if (this.signed) {\n            src = src.toTwos(this.span * 8);\n        }\n        return this.blob.encode(src.toArrayLike(Buffer, 'le', this.span), b, offset);\n    }\n}\nfunction u64(property) {\n    return new BNLayout(8, false, property);\n}\nexports.u64 = u64;\nfunction i64(property) {\n    return new BNLayout(8, true, property);\n}\nexports.i64 = i64;\nfunction u128(property) {\n    return new BNLayout(16, false, property);\n}\nexports.u128 = u128;\nfunction i128(property) {\n    return new BNLayout(16, true, property);\n}\nexports.i128 = i128;\nclass WrappedLayout extends buffer_layout_1.Layout {\n    constructor(layout, decoder, encoder, property) {\n        super(layout.span, property);\n        this.layout = layout;\n        this.decoder = decoder;\n        this.encoder = encoder;\n    }\n    decode(b, offset) {\n        return this.decoder(this.layout.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return this.layout.encode(this.encoder(src), b, offset);\n    }\n    getSpan(b, offset) {\n        return this.layout.getSpan(b, offset);\n    }\n}\nfunction publicKey(property) {\n    return new WrappedLayout(buffer_layout_1.blob(32), (b) => new web3_js_1.PublicKey(b), (key) => key.toBuffer(), property);\n}\nexports.publicKey = publicKey;\nclass OptionLayout extends buffer_layout_1.Layout {\n    constructor(layout, property) {\n        super(-1, property);\n        this.layout = layout;\n        this.discriminator = buffer_layout_1.u8();\n    }\n    encode(src, b, offset = 0) {\n        if (src === null || src === undefined) {\n            return this.discriminator.encode(0, b, offset);\n        }\n        this.discriminator.encode(1, b, offset);\n        return this.layout.encode(src, b, offset + 1) + 1;\n    }\n    decode(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return null;\n        }\n        else if (discriminator === 1) {\n            return this.layout.decode(b, offset + 1);\n        }\n        throw new Error('Invalid option ' + this.property);\n    }\n    getSpan(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return 1;\n        }\n        else if (discriminator === 1) {\n            return this.layout.getSpan(b, offset + 1) + 1;\n        }\n        throw new Error('Invalid option ' + this.property);\n    }\n}\nfunction option(layout, property) {\n    return new OptionLayout(layout, property);\n}\nexports.option = option;\nfunction bool(property) {\n    return new WrappedLayout(buffer_layout_1.u8(), decodeBool, encodeBool, property);\n}\nexports.bool = bool;\nfunction decodeBool(value) {\n    if (value === 0) {\n        return false;\n    }\n    else if (value === 1) {\n        return true;\n    }\n    throw new Error('Invalid bool: ' + value);\n}\nfunction encodeBool(value) {\n    return value ? 1 : 0;\n}\nfunction vec(elementLayout, property) {\n    const length = buffer_layout_1.u32('length');\n    const layout = buffer_layout_1.struct([\n        length,\n        buffer_layout_1.seq(elementLayout, buffer_layout_1.offset(length, -length.span), 'values'),\n    ]);\n    return new WrappedLayout(layout, ({ values }) => values, values => ({ values }), property);\n}\nexports.vec = vec;\nfunction tagged(tag, layout, property) {\n    const wrappedLayout = buffer_layout_1.struct([\n        u64('tag'),\n        layout.replicate('data'),\n    ]);\n    function decodeTag({ tag: receivedTag, data }) {\n        if (!receivedTag.eq(tag)) {\n            throw new Error('Invalid tag, expected: ' +\n                tag.toString('hex') +\n                ', got: ' +\n                receivedTag.toString('hex'));\n        }\n        return data;\n    }\n    return new WrappedLayout(wrappedLayout, decodeTag, data => ({ tag, data }), property);\n}\nexports.tagged = tagged;\nfunction vecU8(property) {\n    const length = buffer_layout_1.u32('length');\n    const layout = buffer_layout_1.struct([\n        length,\n        buffer_layout_1.blob(buffer_layout_1.offset(length, -length.span), 'data'),\n    ]);\n    return new WrappedLayout(layout, ({ data }) => data, data => ({ data }), property);\n}\nexports.vecU8 = vecU8;\nfunction str(property) {\n    return new WrappedLayout(vecU8(), data => data.toString('utf-8'), s => Buffer.from(s, 'utf-8'), property);\n}\nexports.str = str;\nfunction rustEnum(variants, property) {\n    const unionLayout = buffer_layout_1.union(buffer_layout_1.u8(), property);\n    variants.forEach((variant, index) => unionLayout.addVariant(index, variant, variant.property));\n    return unionLayout;\n}\nexports.rustEnum = rustEnum;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenInstructions = exports.EVENT_QUEUE_LAYOUT = exports.REQUEST_QUEUE_LAYOUT = exports.decodeRequestQueue = exports.decodeEventQueue = exports.getLayoutVersion = exports.MARKETS = exports.TOKEN_MINTS = exports.supportsSrmFeeDiscounts = exports.getFeeRates = exports.getFeeTier = exports.NEW_ORDER_OWNER_INDEX = exports.NEW_ORDER_OPEN_ORDERS_INDEX = exports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = exports.SETTLE_FUNDS_BASE_WALLET_INDEX = exports.decodeInstruction = exports.DexInstructions = exports.OpenOrders = exports.Orderbook = exports.Market = void 0;\nvar market_1 = require(\"./market\");\nObject.defineProperty(exports, \"Market\", { enumerable: true, get: function () { return market_1.Market; } });\nObject.defineProperty(exports, \"Orderbook\", { enumerable: true, get: function () { return market_1.Orderbook; } });\nObject.defineProperty(exports, \"OpenOrders\", { enumerable: true, get: function () { return market_1.OpenOrders; } });\nvar instructions_1 = require(\"./instructions\");\nObject.defineProperty(exports, \"DexInstructions\", { enumerable: true, get: function () { return instructions_1.DexInstructions; } });\nObject.defineProperty(exports, \"decodeInstruction\", { enumerable: true, get: function () { return instructions_1.decodeInstruction; } });\nObject.defineProperty(exports, \"SETTLE_FUNDS_BASE_WALLET_INDEX\", { enumerable: true, get: function () { return instructions_1.SETTLE_FUNDS_BASE_WALLET_INDEX; } });\nObject.defineProperty(exports, \"SETTLE_FUNDS_QUOTE_WALLET_INDEX\", { enumerable: true, get: function () { return instructions_1.SETTLE_FUNDS_QUOTE_WALLET_INDEX; } });\nObject.defineProperty(exports, \"NEW_ORDER_OPEN_ORDERS_INDEX\", { enumerable: true, get: function () { return instructions_1.NEW_ORDER_OPEN_ORDERS_INDEX; } });\nObject.defineProperty(exports, \"NEW_ORDER_OWNER_INDEX\", { enumerable: true, get: function () { return instructions_1.NEW_ORDER_OWNER_INDEX; } });\nvar fees_1 = require(\"./fees\");\nObject.defineProperty(exports, \"getFeeTier\", { enumerable: true, get: function () { return fees_1.getFeeTier; } });\nObject.defineProperty(exports, \"getFeeRates\", { enumerable: true, get: function () { return fees_1.getFeeRates; } });\nObject.defineProperty(exports, \"supportsSrmFeeDiscounts\", { enumerable: true, get: function () { return fees_1.supportsSrmFeeDiscounts; } });\nvar tokens_and_markets_1 = require(\"./tokens_and_markets\");\nObject.defineProperty(exports, \"TOKEN_MINTS\", { enumerable: true, get: function () { return tokens_and_markets_1.TOKEN_MINTS; } });\nObject.defineProperty(exports, \"MARKETS\", { enumerable: true, get: function () { return tokens_and_markets_1.MARKETS; } });\nObject.defineProperty(exports, \"getLayoutVersion\", { enumerable: true, get: function () { return tokens_and_markets_1.getLayoutVersion; } });\nvar queue_1 = require(\"./queue\");\nObject.defineProperty(exports, \"decodeEventQueue\", { enumerable: true, get: function () { return queue_1.decodeEventQueue; } });\nObject.defineProperty(exports, \"decodeRequestQueue\", { enumerable: true, get: function () { return queue_1.decodeRequestQueue; } });\nObject.defineProperty(exports, \"REQUEST_QUEUE_LAYOUT\", { enumerable: true, get: function () { return queue_1.REQUEST_QUEUE_LAYOUT; } });\nObject.defineProperty(exports, \"EVENT_QUEUE_LAYOUT\", { enumerable: true, get: function () { return queue_1.EVENT_QUEUE_LAYOUT; } });\nexports.TokenInstructions = __importStar(require(\"./token-instructions\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMintDecimals = exports.Orderbook = exports.ORDERBOOK_LAYOUT = exports.OpenOrders = exports._OPEN_ORDERS_LAYOUT_V2 = exports._OPEN_ORDERS_LAYOUT_V1 = exports.Market = exports._MARKET_STATE_LAYOUT_V2 = exports._MARKET_STAT_LAYOUT_V1 = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst slab_1 = require(\"./slab\");\nconst instructions_1 = require(\"./instructions\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst queue_1 = require(\"./queue\");\nconst buffer_1 = require(\"buffer\");\nconst fees_1 = require(\"./fees\");\nconst token_instructions_1 = require(\"./token-instructions\");\nconst tokens_and_markets_1 = require(\"./tokens_and_markets\");\nexports._MARKET_STAT_LAYOUT_V1 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('ownAddress'),\n    layout_1.u64('vaultSignerNonce'),\n    layout_1.publicKeyLayout('baseMint'),\n    layout_1.publicKeyLayout('quoteMint'),\n    layout_1.publicKeyLayout('baseVault'),\n    layout_1.u64('baseDepositsTotal'),\n    layout_1.u64('baseFeesAccrued'),\n    layout_1.publicKeyLayout('quoteVault'),\n    layout_1.u64('quoteDepositsTotal'),\n    layout_1.u64('quoteFeesAccrued'),\n    layout_1.u64('quoteDustThreshold'),\n    layout_1.publicKeyLayout('requestQueue'),\n    layout_1.publicKeyLayout('eventQueue'),\n    layout_1.publicKeyLayout('bids'),\n    layout_1.publicKeyLayout('asks'),\n    layout_1.u64('baseLotSize'),\n    layout_1.u64('quoteLotSize'),\n    layout_1.u64('feeRateBps'),\n    buffer_layout_1.blob(7),\n]);\nexports._MARKET_STATE_LAYOUT_V2 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('ownAddress'),\n    layout_1.u64('vaultSignerNonce'),\n    layout_1.publicKeyLayout('baseMint'),\n    layout_1.publicKeyLayout('quoteMint'),\n    layout_1.publicKeyLayout('baseVault'),\n    layout_1.u64('baseDepositsTotal'),\n    layout_1.u64('baseFeesAccrued'),\n    layout_1.publicKeyLayout('quoteVault'),\n    layout_1.u64('quoteDepositsTotal'),\n    layout_1.u64('quoteFeesAccrued'),\n    layout_1.u64('quoteDustThreshold'),\n    layout_1.publicKeyLayout('requestQueue'),\n    layout_1.publicKeyLayout('eventQueue'),\n    layout_1.publicKeyLayout('bids'),\n    layout_1.publicKeyLayout('asks'),\n    layout_1.u64('baseLotSize'),\n    layout_1.u64('quoteLotSize'),\n    layout_1.u64('feeRateBps'),\n    layout_1.u64('referrerRebatesAccrued'),\n    buffer_layout_1.blob(7),\n]);\nclass Market {\n    constructor(decoded, baseMintDecimals, quoteMintDecimals, options = {}, programId) {\n        const { skipPreflight = false, commitment = 'recent' } = options;\n        if (!decoded.accountFlags.initialized || !decoded.accountFlags.market) {\n            throw new Error('Invalid market state');\n        }\n        this._decoded = decoded;\n        this._baseSplTokenDecimals = baseMintDecimals;\n        this._quoteSplTokenDecimals = quoteMintDecimals;\n        this._skipPreflight = skipPreflight;\n        this._commitment = commitment;\n        this._programId = programId;\n        this._openOrdersAccountsCache = {};\n        this._feeDiscountKeysCache = {};\n    }\n    static getLayout(programId) {\n        if (tokens_and_markets_1.getLayoutVersion(programId) === 1) {\n            return exports._MARKET_STAT_LAYOUT_V1;\n        }\n        return exports._MARKET_STATE_LAYOUT_V2;\n    }\n    static async load(connection, address, options = {}, programId) {\n        const { owner, data } = throwIfNull(await connection.getAccountInfo(address), 'Market not found');\n        if (!owner.equals(programId)) {\n            throw new Error('Address not owned by program: ' + owner.toBase58());\n        }\n        const decoded = this.getLayout(programId).decode(data);\n        if (!decoded.accountFlags.initialized ||\n            !decoded.accountFlags.market ||\n            !decoded.ownAddress.equals(address)) {\n            throw new Error('Invalid market');\n        }\n        const [baseMintDecimals, quoteMintDecimals] = await Promise.all([\n            getMintDecimals(connection, decoded.baseMint),\n            getMintDecimals(connection, decoded.quoteMint),\n        ]);\n        return new Market(decoded, baseMintDecimals, quoteMintDecimals, options, programId);\n    }\n    get programId() {\n        return this._programId;\n    }\n    get address() {\n        return this._decoded.ownAddress;\n    }\n    get publicKey() {\n        return this.address;\n    }\n    get baseMintAddress() {\n        return this._decoded.baseMint;\n    }\n    get quoteMintAddress() {\n        return this._decoded.quoteMint;\n    }\n    get bidsAddress() {\n        return this._decoded.bids;\n    }\n    get asksAddress() {\n        return this._decoded.asks;\n    }\n    async loadBids(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.bids));\n        return Orderbook.decode(this, data);\n    }\n    async loadAsks(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.asks));\n        return Orderbook.decode(this, data);\n    }\n    async loadOrdersForOwner(connection, ownerAddress, cacheDurationMs = 0) {\n        const [bids, asks, openOrdersAccounts] = await Promise.all([\n            this.loadBids(connection),\n            this.loadAsks(connection),\n            this.findOpenOrdersAccountsForOwner(connection, ownerAddress, cacheDurationMs),\n        ]);\n        return this.filterForOpenOrders(bids, asks, openOrdersAccounts);\n    }\n    filterForOpenOrders(bids, asks, openOrdersAccounts) {\n        return [...bids, ...asks].filter((order) => openOrdersAccounts.some((openOrders) => order.openOrdersAddress.equals(openOrders.address)));\n    }\n    async findBaseTokenAccountsForOwner(connection, ownerAddress, includeUnwrappedSol = false) {\n        if (this.baseMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) && includeUnwrappedSol) {\n            const [wrapped, unwrapped] = await Promise.all([\n                this.findBaseTokenAccountsForOwner(connection, ownerAddress, false),\n                connection.getAccountInfo(ownerAddress),\n            ]);\n            if (unwrapped !== null) {\n                return [{ pubkey: ownerAddress, account: unwrapped }, ...wrapped];\n            }\n            return wrapped;\n        }\n        return await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, this.baseMintAddress);\n    }\n    async getTokenAccountsByOwnerForMint(connection, ownerAddress, mintAddress) {\n        return (await connection.getTokenAccountsByOwner(ownerAddress, {\n            mint: mintAddress,\n        })).value;\n    }\n    async findQuoteTokenAccountsForOwner(connection, ownerAddress, includeUnwrappedSol = false) {\n        if (this.quoteMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) && includeUnwrappedSol) {\n            const [wrapped, unwrapped] = await Promise.all([\n                this.findQuoteTokenAccountsForOwner(connection, ownerAddress, false),\n                connection.getAccountInfo(ownerAddress),\n            ]);\n            if (unwrapped !== null) {\n                return [{ pubkey: ownerAddress, account: unwrapped }, ...wrapped];\n            }\n            return wrapped;\n        }\n        return await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, this.quoteMintAddress);\n    }\n    async findOpenOrdersAccountsForOwner(connection, ownerAddress, cacheDurationMs = 0) {\n        const strOwner = ownerAddress.toBase58();\n        const now = new Date().getTime();\n        if (strOwner in this._openOrdersAccountsCache &&\n            now - this._openOrdersAccountsCache[strOwner].ts < cacheDurationMs) {\n            return this._openOrdersAccountsCache[strOwner].accounts;\n        }\n        const openOrdersAccountsForOwner = await OpenOrders.findForMarketAndOwner(connection, this.address, ownerAddress, this._programId);\n        this._openOrdersAccountsCache[strOwner] = {\n            accounts: openOrdersAccountsForOwner,\n            ts: now,\n        };\n        return openOrdersAccountsForOwner;\n    }\n    async placeOrder(connection, { owner, payer, side, price, size, orderType = 'limit', clientId, openOrdersAddressKey, openOrdersAccount, feeDiscountPubkey, }) {\n        const { transaction, signers, } = await this.makePlaceOrderTransaction(connection, {\n            owner,\n            payer,\n            side,\n            price,\n            size,\n            orderType,\n            clientId,\n            openOrdersAddressKey,\n            openOrdersAccount,\n            feeDiscountPubkey,\n        });\n        return await this._sendTransaction(connection, transaction, [\n            owner,\n            ...signers,\n        ]);\n    }\n    getSplTokenBalanceFromAccountInfo(accountInfo, decimals) {\n        return divideBnToNumber(new bn_js_1.default(accountInfo.data.slice(64, 72), 10, 'le'), new bn_js_1.default(10).pow(new bn_js_1.default(decimals)));\n    }\n    get supportsSrmFeeDiscounts() {\n        return fees_1.supportsSrmFeeDiscounts(this._programId);\n    }\n    get supportsReferralFees() {\n        return tokens_and_markets_1.getLayoutVersion(this._programId) > 1;\n    }\n    get usesRequestQueue() {\n        return tokens_and_markets_1.getLayoutVersion(this._programId) <= 2;\n    }\n    async findFeeDiscountKeys(connection, ownerAddress, cacheDurationMs = 0) {\n        let sortedAccounts = [];\n        const now = new Date().getTime();\n        const strOwner = ownerAddress.toBase58();\n        if (strOwner in this._feeDiscountKeysCache &&\n            now - this._feeDiscountKeysCache[strOwner].ts < cacheDurationMs) {\n            return this._feeDiscountKeysCache[strOwner].accounts;\n        }\n        if (this.supportsSrmFeeDiscounts) {\n            // Fee discounts based on (M)SRM holdings supported in newer versions\n            const msrmAccounts = (await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, token_instructions_1.MSRM_MINT)).map(({ pubkey, account }) => {\n                const balance = this.getSplTokenBalanceFromAccountInfo(account, token_instructions_1.MSRM_DECIMALS);\n                return {\n                    pubkey,\n                    mint: token_instructions_1.MSRM_MINT,\n                    balance,\n                    feeTier: fees_1.getFeeTier(balance, 0),\n                };\n            });\n            const srmAccounts = (await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, token_instructions_1.SRM_MINT)).map(({ pubkey, account }) => {\n                const balance = this.getSplTokenBalanceFromAccountInfo(account, token_instructions_1.SRM_DECIMALS);\n                return {\n                    pubkey,\n                    mint: token_instructions_1.SRM_MINT,\n                    balance,\n                    feeTier: fees_1.getFeeTier(0, balance),\n                };\n            });\n            sortedAccounts = msrmAccounts.concat(srmAccounts).sort((a, b) => {\n                if (a.feeTier > b.feeTier) {\n                    return -1;\n                }\n                else if (a.feeTier < b.feeTier) {\n                    return 1;\n                }\n                else {\n                    if (a.balance > b.balance) {\n                        return -1;\n                    }\n                    else if (a.balance < b.balance) {\n                        return 1;\n                    }\n                    else {\n                        return 0;\n                    }\n                }\n            });\n        }\n        this._feeDiscountKeysCache[strOwner] = {\n            accounts: sortedAccounts,\n            ts: now,\n        };\n        return sortedAccounts;\n    }\n    async findBestFeeDiscountKey(connection, ownerAddress, cacheDurationMs = 30000) {\n        const accounts = await this.findFeeDiscountKeys(connection, ownerAddress, cacheDurationMs);\n        if (accounts.length > 0) {\n            return {\n                pubkey: accounts[0].pubkey,\n                feeTier: accounts[0].feeTier,\n            };\n        }\n        return {\n            pubkey: null,\n            feeTier: 0,\n        };\n    }\n    async makePlaceOrderTransaction(connection, { owner, payer, side, price, size, orderType = 'limit', clientId, openOrdersAddressKey, openOrdersAccount, feeDiscountPubkey = undefined, }, cacheDurationMs = 0, feeDiscountPubkeyCacheDurationMs = 0) {\n        var _a, _b;\n        // @ts-ignore\n        const ownerAddress = (_a = owner.publicKey) !== null && _a !== void 0 ? _a : owner;\n        const openOrdersAccounts = await this.findOpenOrdersAccountsForOwner(connection, ownerAddress, cacheDurationMs);\n        const transaction = new web3_js_1.Transaction();\n        const signers = [];\n        // Fetch an SRM fee discount key if the market supports discounts and it is not supplied\n        let useFeeDiscountPubkey;\n        if (feeDiscountPubkey) {\n            useFeeDiscountPubkey = feeDiscountPubkey;\n        }\n        else if (feeDiscountPubkey === undefined &&\n            this.supportsSrmFeeDiscounts) {\n            useFeeDiscountPubkey = (await this.findBestFeeDiscountKey(connection, ownerAddress, feeDiscountPubkeyCacheDurationMs)).pubkey;\n        }\n        else {\n            useFeeDiscountPubkey = null;\n        }\n        let openOrdersAddress;\n        if (openOrdersAccounts.length === 0) {\n            let account;\n            if (openOrdersAccount) {\n                account = openOrdersAccount;\n            }\n            else {\n                account = new web3_js_1.Account();\n            }\n            transaction.add(await OpenOrders.makeCreateAccountTransaction(connection, this.address, ownerAddress, account.publicKey, this._programId));\n            openOrdersAddress = account.publicKey;\n            signers.push(account);\n            // refresh the cache of open order accounts on next fetch\n            this._openOrdersAccountsCache[ownerAddress.toBase58()].ts = 0;\n        }\n        else if (openOrdersAccount) {\n            openOrdersAddress = openOrdersAccount.publicKey;\n        }\n        else if (openOrdersAddressKey) {\n            openOrdersAddress = openOrdersAddressKey;\n        }\n        else {\n            openOrdersAddress = openOrdersAccounts[0].address;\n        }\n        let wrappedSolAccount = null;\n        if (payer.equals(ownerAddress)) {\n            if ((side === 'buy' && this.quoteMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT)) ||\n                (side === 'sell' && this.baseMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT))) {\n                wrappedSolAccount = new web3_js_1.Account();\n                let lamports;\n                if (side === 'buy') {\n                    lamports = Math.round(price * size * 1.01 * web3_js_1.LAMPORTS_PER_SOL);\n                    if (openOrdersAccounts.length > 0) {\n                        lamports -= openOrdersAccounts[0].quoteTokenFree.toNumber();\n                    }\n                }\n                else {\n                    lamports = Math.round(size * web3_js_1.LAMPORTS_PER_SOL);\n                    if (openOrdersAccounts.length > 0) {\n                        lamports -= openOrdersAccounts[0].baseTokenFree.toNumber();\n                    }\n                }\n                lamports = Math.max(lamports, 0) + 1e7;\n                transaction.add(web3_js_1.SystemProgram.createAccount({\n                    fromPubkey: ownerAddress,\n                    newAccountPubkey: wrappedSolAccount.publicKey,\n                    lamports,\n                    space: 165,\n                    programId: token_instructions_1.TOKEN_PROGRAM_ID,\n                }));\n                transaction.add(token_instructions_1.initializeAccount({\n                    account: wrappedSolAccount.publicKey,\n                    mint: token_instructions_1.WRAPPED_SOL_MINT,\n                    owner: ownerAddress,\n                }));\n                signers.push(wrappedSolAccount);\n            }\n            else {\n                throw new Error('Invalid payer account');\n            }\n        }\n        const placeOrderInstruction = this.makePlaceOrderInstruction(connection, {\n            owner,\n            payer: (_b = wrappedSolAccount === null || wrappedSolAccount === void 0 ? void 0 : wrappedSolAccount.publicKey) !== null && _b !== void 0 ? _b : payer,\n            side,\n            price,\n            size,\n            orderType,\n            clientId,\n            openOrdersAddressKey: openOrdersAddress,\n            feeDiscountPubkey: useFeeDiscountPubkey,\n        });\n        transaction.add(placeOrderInstruction);\n        if (wrappedSolAccount) {\n            transaction.add(token_instructions_1.closeAccount({\n                source: wrappedSolAccount.publicKey,\n                destination: ownerAddress,\n                owner: ownerAddress,\n            }));\n        }\n        return { transaction, signers, payer: owner };\n    }\n    makePlaceOrderInstruction(connection, { owner, payer, side, price, size, orderType = 'limit', clientId, openOrdersAddressKey, openOrdersAccount, feeDiscountPubkey = null, selfTradeBehavior = 'decrementTake', }) {\n        var _a;\n        // @ts-ignore\n        const ownerAddress = (_a = owner.publicKey) !== null && _a !== void 0 ? _a : owner;\n        if (this.baseSizeNumberToLots(size).lte(new bn_js_1.default(0))) {\n            throw new Error('size too small');\n        }\n        if (this.priceNumberToLots(price).lte(new bn_js_1.default(0))) {\n            throw new Error('invalid price');\n        }\n        if (!this.supportsSrmFeeDiscounts) {\n            feeDiscountPubkey = null;\n        }\n        if (this.usesRequestQueue) {\n            return instructions_1.DexInstructions.newOrder({\n                market: this.address,\n                requestQueue: this._decoded.requestQueue,\n                baseVault: this._decoded.baseVault,\n                quoteVault: this._decoded.quoteVault,\n                openOrders: openOrdersAccount\n                    ? openOrdersAccount.publicKey\n                    : openOrdersAddressKey,\n                owner: ownerAddress,\n                payer,\n                side,\n                limitPrice: this.priceNumberToLots(price),\n                maxQuantity: this.baseSizeNumberToLots(size),\n                orderType,\n                clientId,\n                programId: this._programId,\n                feeDiscountPubkey,\n            });\n        }\n        else {\n            return instructions_1.DexInstructions.newOrderV3({\n                market: this.address,\n                bids: this._decoded.bids,\n                asks: this._decoded.asks,\n                requestQueue: this._decoded.requestQueue,\n                eventQueue: this._decoded.eventQueue,\n                baseVault: this._decoded.baseVault,\n                quoteVault: this._decoded.quoteVault,\n                openOrders: openOrdersAccount\n                    ? openOrdersAccount.publicKey\n                    : openOrdersAddressKey,\n                owner: ownerAddress,\n                payer,\n                side,\n                limitPrice: this.priceNumberToLots(price),\n                maxBaseQuantity: this.baseSizeNumberToLots(size),\n                maxQuoteQuantity: new bn_js_1.default(this._decoded.quoteLotSize.toNumber()).mul(this.baseSizeNumberToLots(size).mul(this.priceNumberToLots(price))),\n                orderType,\n                clientId,\n                programId: this._programId,\n                selfTradeBehavior,\n                feeDiscountPubkey,\n            });\n        }\n    }\n    async _sendTransaction(connection, transaction, signers) {\n        const signature = await connection.sendTransaction(transaction, signers, {\n            skipPreflight: this._skipPreflight,\n        });\n        const { value } = await connection.confirmTransaction(signature, this._commitment);\n        if (value === null || value === void 0 ? void 0 : value.err) {\n            throw new Error(JSON.stringify(value.err));\n        }\n        return signature;\n    }\n    async cancelOrderByClientId(connection, owner, openOrders, clientId) {\n        const transaction = await this.makeCancelOrderByClientIdTransaction(connection, owner.publicKey, openOrders, clientId);\n        return await this._sendTransaction(connection, transaction, [owner]);\n    }\n    async makeCancelOrderByClientIdTransaction(connection, owner, openOrders, clientId) {\n        const transaction = new web3_js_1.Transaction();\n        if (this.usesRequestQueue) {\n            transaction.add(instructions_1.DexInstructions.cancelOrderByClientId({\n                market: this.address,\n                owner,\n                openOrders,\n                requestQueue: this._decoded.requestQueue,\n                clientId,\n                programId: this._programId,\n            }));\n        }\n        else {\n            transaction.add(instructions_1.DexInstructions.cancelOrderByClientIdV2({\n                market: this.address,\n                openOrders,\n                owner,\n                bids: this._decoded.bids,\n                asks: this._decoded.asks,\n                eventQueue: this._decoded.eventQueue,\n                clientId,\n                programId: this._programId,\n            }));\n        }\n        return transaction;\n    }\n    async cancelOrder(connection, owner, order) {\n        const transaction = await this.makeCancelOrderTransaction(connection, owner.publicKey, order);\n        return await this._sendTransaction(connection, transaction, [owner]);\n    }\n    async makeCancelOrderTransaction(connection, owner, order) {\n        const transaction = new web3_js_1.Transaction();\n        transaction.add(this.makeCancelOrderInstruction(connection, owner, order));\n        return transaction;\n    }\n    makeCancelOrderInstruction(connection, owner, order) {\n        if (this.usesRequestQueue) {\n            return instructions_1.DexInstructions.cancelOrder({\n                market: this.address,\n                owner,\n                openOrders: order.openOrdersAddress,\n                requestQueue: this._decoded.requestQueue,\n                side: order.side,\n                orderId: order.orderId,\n                openOrdersSlot: order.openOrdersSlot,\n                programId: this._programId,\n            });\n        }\n        else {\n            return instructions_1.DexInstructions.cancelOrderV2({\n                market: this.address,\n                owner,\n                openOrders: order.openOrdersAddress,\n                bids: this._decoded.bids,\n                asks: this._decoded.asks,\n                eventQueue: this._decoded.eventQueue,\n                side: order.side,\n                orderId: order.orderId,\n                openOrdersSlot: order.openOrdersSlot,\n                programId: this._programId,\n            });\n        }\n    }\n    async settleFunds(connection, owner, openOrders, baseWallet, quoteWallet, referrerQuoteWallet = null) {\n        if (!openOrders.owner.equals(owner.publicKey)) {\n            throw new Error('Invalid open orders account');\n        }\n        if (referrerQuoteWallet && !this.supportsReferralFees) {\n            throw new Error('This program ID does not support referrerQuoteWallet');\n        }\n        const { transaction, signers } = await this.makeSettleFundsTransaction(connection, openOrders, baseWallet, quoteWallet, referrerQuoteWallet);\n        return await this._sendTransaction(connection, transaction, [\n            owner,\n            ...signers,\n        ]);\n    }\n    async makeSettleFundsTransaction(connection, openOrders, baseWallet, quoteWallet, referrerQuoteWallet = null) {\n        // @ts-ignore\n        const vaultSigner = await web3_js_1.PublicKey.createProgramAddress([\n            this.address.toBuffer(),\n            this._decoded.vaultSignerNonce.toArrayLike(buffer_1.Buffer, 'le', 8),\n        ], this._programId);\n        const transaction = new web3_js_1.Transaction();\n        const signers = [];\n        let wrappedSolAccount = null;\n        if ((this.baseMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) &&\n            baseWallet.equals(openOrders.owner)) ||\n            (this.quoteMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) &&\n                quoteWallet.equals(openOrders.owner))) {\n            wrappedSolAccount = new web3_js_1.Account();\n            transaction.add(web3_js_1.SystemProgram.createAccount({\n                fromPubkey: openOrders.owner,\n                newAccountPubkey: wrappedSolAccount.publicKey,\n                lamports: await connection.getMinimumBalanceForRentExemption(165),\n                space: 165,\n                programId: token_instructions_1.TOKEN_PROGRAM_ID,\n            }));\n            transaction.add(token_instructions_1.initializeAccount({\n                account: wrappedSolAccount.publicKey,\n                mint: token_instructions_1.WRAPPED_SOL_MINT,\n                owner: openOrders.owner,\n            }));\n            signers.push(wrappedSolAccount);\n        }\n        transaction.add(instructions_1.DexInstructions.settleFunds({\n            market: this.address,\n            openOrders: openOrders.address,\n            owner: openOrders.owner,\n            baseVault: this._decoded.baseVault,\n            quoteVault: this._decoded.quoteVault,\n            baseWallet: baseWallet.equals(openOrders.owner) && wrappedSolAccount\n                ? wrappedSolAccount.publicKey\n                : baseWallet,\n            quoteWallet: quoteWallet.equals(openOrders.owner) && wrappedSolAccount\n                ? wrappedSolAccount.publicKey\n                : quoteWallet,\n            vaultSigner,\n            programId: this._programId,\n            referrerQuoteWallet,\n        }));\n        if (wrappedSolAccount) {\n            transaction.add(token_instructions_1.closeAccount({\n                source: wrappedSolAccount.publicKey,\n                destination: openOrders.owner,\n                owner: openOrders.owner,\n            }));\n        }\n        return { transaction, signers, payer: openOrders.owner };\n    }\n    async matchOrders(connection, feePayer, limit) {\n        const tx = this.makeMatchOrdersTransaction(limit);\n        return await this._sendTransaction(connection, tx, [feePayer]);\n    }\n    makeMatchOrdersTransaction(limit) {\n        const tx = new web3_js_1.Transaction();\n        tx.add(instructions_1.DexInstructions.matchOrders({\n            market: this.address,\n            requestQueue: this._decoded.requestQueue,\n            eventQueue: this._decoded.eventQueue,\n            bids: this._decoded.bids,\n            asks: this._decoded.asks,\n            baseVault: this._decoded.baseVault,\n            quoteVault: this._decoded.quoteVault,\n            limit,\n            programId: this._programId,\n        }));\n        return tx;\n    }\n    async loadRequestQueue(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.requestQueue));\n        return queue_1.decodeRequestQueue(data);\n    }\n    async loadEventQueue(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.eventQueue));\n        return queue_1.decodeEventQueue(data);\n    }\n    async loadFills(connection, limit = 100) {\n        // TODO: once there's a separate source of fills use that instead\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.eventQueue));\n        const events = queue_1.decodeEventQueue(data, limit);\n        return events\n            .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\n            .map(this.parseFillEvent.bind(this));\n    }\n    parseFillEvent(event) {\n        let size, price, side, priceBeforeFees;\n        if (event.eventFlags.bid) {\n            side = 'buy';\n            priceBeforeFees = event.eventFlags.maker\n                ? event.nativeQuantityPaid.add(event.nativeFeeOrRebate)\n                : event.nativeQuantityPaid.sub(event.nativeFeeOrRebate);\n            price = divideBnToNumber(priceBeforeFees.mul(this._baseSplTokenMultiplier), this._quoteSplTokenMultiplier.mul(event.nativeQuantityReleased));\n            size = divideBnToNumber(event.nativeQuantityReleased, this._baseSplTokenMultiplier);\n        }\n        else {\n            side = 'sell';\n            priceBeforeFees = event.eventFlags.maker\n                ? event.nativeQuantityReleased.sub(event.nativeFeeOrRebate)\n                : event.nativeQuantityReleased.add(event.nativeFeeOrRebate);\n            price = divideBnToNumber(priceBeforeFees.mul(this._baseSplTokenMultiplier), this._quoteSplTokenMultiplier.mul(event.nativeQuantityPaid));\n            size = divideBnToNumber(event.nativeQuantityPaid, this._baseSplTokenMultiplier);\n        }\n        return {\n            ...event,\n            side,\n            price,\n            feeCost: this.quoteSplSizeToNumber(event.nativeFeeOrRebate) *\n                (event.eventFlags.maker ? -1 : 1),\n            size,\n        };\n    }\n    get _baseSplTokenMultiplier() {\n        return new bn_js_1.default(10).pow(new bn_js_1.default(this._baseSplTokenDecimals));\n    }\n    get _quoteSplTokenMultiplier() {\n        return new bn_js_1.default(10).pow(new bn_js_1.default(this._quoteSplTokenDecimals));\n    }\n    priceLotsToNumber(price) {\n        return divideBnToNumber(price.mul(this._decoded.quoteLotSize).mul(this._baseSplTokenMultiplier), this._decoded.baseLotSize.mul(this._quoteSplTokenMultiplier));\n    }\n    priceNumberToLots(price) {\n        return new bn_js_1.default(Math.round((price *\n            Math.pow(10, this._quoteSplTokenDecimals) *\n            this._decoded.baseLotSize.toNumber()) /\n            (Math.pow(10, this._baseSplTokenDecimals) *\n                this._decoded.quoteLotSize.toNumber())));\n    }\n    baseSplSizeToNumber(size) {\n        return divideBnToNumber(size, this._baseSplTokenMultiplier);\n    }\n    quoteSplSizeToNumber(size) {\n        return divideBnToNumber(size, this._quoteSplTokenMultiplier);\n    }\n    baseSizeLotsToNumber(size) {\n        return divideBnToNumber(size.mul(this._decoded.baseLotSize), this._baseSplTokenMultiplier);\n    }\n    baseSizeNumberToLots(size) {\n        const native = new bn_js_1.default(Math.round(size * Math.pow(10, this._baseSplTokenDecimals)));\n        // rounds down to the nearest lot size\n        return native.div(this._decoded.baseLotSize);\n    }\n    quoteSizeLotsToNumber(size) {\n        return divideBnToNumber(size.mul(this._decoded.quoteLotSize), this._quoteSplTokenMultiplier);\n    }\n    quoteSizeNumberToLots(size) {\n        const native = new bn_js_1.default(Math.round(size * Math.pow(10, this._quoteSplTokenDecimals)));\n        // rounds down to the nearest lot size\n        return native.div(this._decoded.quoteLotSize);\n    }\n    get minOrderSize() {\n        return this.baseSizeLotsToNumber(new bn_js_1.default(1));\n    }\n    get tickSize() {\n        return this.priceLotsToNumber(new bn_js_1.default(1));\n    }\n}\nexports.Market = Market;\nexports._OPEN_ORDERS_LAYOUT_V1 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('market'),\n    layout_1.publicKeyLayout('owner'),\n    // These are in spl-token (i.e. not lot) units\n    layout_1.u64('baseTokenFree'),\n    layout_1.u64('baseTokenTotal'),\n    layout_1.u64('quoteTokenFree'),\n    layout_1.u64('quoteTokenTotal'),\n    layout_1.u128('freeSlotBits'),\n    layout_1.u128('isBidBits'),\n    buffer_layout_1.seq(layout_1.u128(), 128, 'orders'),\n    buffer_layout_1.seq(layout_1.u64(), 128, 'clientIds'),\n    buffer_layout_1.blob(7),\n]);\nexports._OPEN_ORDERS_LAYOUT_V2 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('market'),\n    layout_1.publicKeyLayout('owner'),\n    // These are in spl-token (i.e. not lot) units\n    layout_1.u64('baseTokenFree'),\n    layout_1.u64('baseTokenTotal'),\n    layout_1.u64('quoteTokenFree'),\n    layout_1.u64('quoteTokenTotal'),\n    layout_1.u128('freeSlotBits'),\n    layout_1.u128('isBidBits'),\n    buffer_layout_1.seq(layout_1.u128(), 128, 'orders'),\n    buffer_layout_1.seq(layout_1.u64(), 128, 'clientIds'),\n    layout_1.u64('referrerRebatesAccrued'),\n    buffer_layout_1.blob(7),\n]);\nclass OpenOrders {\n    constructor(address, decoded, programId) {\n        this.address = address;\n        this._programId = programId;\n        Object.assign(this, decoded);\n    }\n    static getLayout(programId) {\n        if (tokens_and_markets_1.getLayoutVersion(programId) === 1) {\n            return exports._OPEN_ORDERS_LAYOUT_V1;\n        }\n        return exports._OPEN_ORDERS_LAYOUT_V2;\n    }\n    static async findForOwner(connection, ownerAddress, programId) {\n        const filters = [\n            {\n                memcmp: {\n                    offset: this.getLayout(programId).offsetOf('owner'),\n                    bytes: ownerAddress.toBase58(),\n                },\n            },\n            {\n                dataSize: this.getLayout(programId).span,\n            },\n        ];\n        const accounts = await getFilteredProgramAccounts(connection, programId, filters);\n        return accounts.map(({ publicKey, accountInfo }) => OpenOrders.fromAccountInfo(publicKey, accountInfo, programId));\n    }\n    static async findForMarketAndOwner(connection, marketAddress, ownerAddress, programId) {\n        const filters = [\n            {\n                memcmp: {\n                    offset: this.getLayout(programId).offsetOf('market'),\n                    bytes: marketAddress.toBase58(),\n                },\n            },\n            {\n                memcmp: {\n                    offset: this.getLayout(programId).offsetOf('owner'),\n                    bytes: ownerAddress.toBase58(),\n                },\n            },\n            {\n                dataSize: this.getLayout(programId).span,\n            },\n        ];\n        const accounts = await getFilteredProgramAccounts(connection, programId, filters);\n        return accounts.map(({ publicKey, accountInfo }) => OpenOrders.fromAccountInfo(publicKey, accountInfo, programId));\n    }\n    static async load(connection, address, programId) {\n        const accountInfo = await connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error('Open orders account not found');\n        }\n        return OpenOrders.fromAccountInfo(address, accountInfo, programId);\n    }\n    static fromAccountInfo(address, accountInfo, programId) {\n        const { owner, data } = accountInfo;\n        if (!owner.equals(programId)) {\n            throw new Error('Address not owned by program');\n        }\n        const decoded = this.getLayout(programId).decode(data);\n        if (!decoded.accountFlags.initialized || !decoded.accountFlags.openOrders) {\n            throw new Error('Invalid open orders account');\n        }\n        return new OpenOrders(address, decoded, programId);\n    }\n    static async makeCreateAccountTransaction(connection, marketAddress, ownerAddress, newAccountAddress, programId) {\n        return web3_js_1.SystemProgram.createAccount({\n            fromPubkey: ownerAddress,\n            newAccountPubkey: newAccountAddress,\n            lamports: await connection.getMinimumBalanceForRentExemption(this.getLayout(programId).span),\n            space: this.getLayout(programId).span,\n            programId,\n        });\n    }\n    get publicKey() {\n        return this.address;\n    }\n}\nexports.OpenOrders = OpenOrders;\nexports.ORDERBOOK_LAYOUT = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    slab_1.SLAB_LAYOUT.replicate('slab'),\n    buffer_layout_1.blob(7),\n]);\nclass Orderbook {\n    constructor(market, accountFlags, slab) {\n        if (!accountFlags.initialized || !(accountFlags.bids ^ accountFlags.asks)) {\n            throw new Error('Invalid orderbook');\n        }\n        this.market = market;\n        this.isBids = accountFlags.bids;\n        this.slab = slab;\n    }\n    static get LAYOUT() {\n        return exports.ORDERBOOK_LAYOUT;\n    }\n    static decode(market, buffer) {\n        const { accountFlags, slab } = exports.ORDERBOOK_LAYOUT.decode(buffer);\n        return new Orderbook(market, accountFlags, slab);\n    }\n    getL2(depth) {\n        const descending = this.isBids;\n        const levels = []; // (price, size)\n        for (const { key, quantity } of this.slab.items(descending)) {\n            const price = getPriceFromKey(key);\n            if (levels.length > 0 && levels[levels.length - 1][0].eq(price)) {\n                levels[levels.length - 1][1].iadd(quantity);\n            }\n            else if (levels.length === depth) {\n                break;\n            }\n            else {\n                levels.push([price, quantity]);\n            }\n        }\n        return levels.map(([priceLots, sizeLots]) => [\n            this.market.priceLotsToNumber(priceLots),\n            this.market.baseSizeLotsToNumber(sizeLots),\n            priceLots,\n            sizeLots,\n        ]);\n    }\n    [Symbol.iterator]() {\n        return this.items(false);\n    }\n    *items(descending = false) {\n        for (const { key, ownerSlot, owner, quantity, feeTier, clientOrderId, } of this.slab.items(descending)) {\n            const price = getPriceFromKey(key);\n            yield {\n                orderId: key,\n                clientId: clientOrderId,\n                openOrdersAddress: owner,\n                openOrdersSlot: ownerSlot,\n                feeTier,\n                price: this.market.priceLotsToNumber(price),\n                priceLots: price,\n                size: this.market.baseSizeLotsToNumber(quantity),\n                sizeLots: quantity,\n                side: (this.isBids ? 'buy' : 'sell'),\n            };\n        }\n    }\n}\nexports.Orderbook = Orderbook;\nfunction getPriceFromKey(key) {\n    return key.ushrn(64);\n}\nfunction divideBnToNumber(numerator, denominator) {\n    const quotient = numerator.div(denominator).toNumber();\n    const rem = numerator.umod(denominator);\n    const gcd = rem.gcd(denominator);\n    return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\n}\nconst MINT_LAYOUT = buffer_layout_1.struct([buffer_layout_1.blob(44), buffer_layout_1.u8('decimals'), buffer_layout_1.blob(37)]);\nasync function getMintDecimals(connection, mint) {\n    if (mint.equals(token_instructions_1.WRAPPED_SOL_MINT)) {\n        return 9;\n    }\n    const { data } = throwIfNull(await connection.getAccountInfo(mint), 'mint not found');\n    const { decimals } = MINT_LAYOUT.decode(data);\n    return decimals;\n}\nexports.getMintDecimals = getMintDecimals;\nasync function getFilteredProgramAccounts(connection, programId, filters) {\n    // @ts-ignore\n    const resp = await connection._rpcRequest('getProgramAccounts', [\n        programId.toBase58(),\n        {\n            commitment: connection.commitment,\n            filters,\n            encoding: 'base64',\n        },\n    ]);\n    if (resp.error) {\n        throw new Error(resp.error.message);\n    }\n    return resp.result.map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\n        publicKey: new web3_js_1.PublicKey(pubkey),\n        accountInfo: {\n            data: buffer_1.Buffer.from(data[0], 'base64'),\n            executable,\n            owner: new web3_js_1.PublicKey(owner),\n            lamports,\n        },\n    }));\n}\nfunction throwIfNull(value, message = 'account not found') {\n    if (value === null) {\n        throw new Error(message);\n    }\n    return value;\n}\n//# sourceMappingURL=market.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Slab = exports.SLAB_LAYOUT = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst SLAB_HEADER_LAYOUT = buffer_layout_1.struct([\n    // Number of modified slab nodes\n    buffer_layout_1.u32('bumpIndex'),\n    layout_1.zeros(4),\n    // Linked list of unused nodes\n    buffer_layout_1.u32('freeListLen'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('freeListHead'),\n    buffer_layout_1.u32('root'),\n    buffer_layout_1.u32('leafCount'),\n    layout_1.zeros(4),\n], 'header');\nconst SLAB_NODE_LAYOUT = buffer_layout_1.union(buffer_layout_1.u32('tag'), buffer_layout_1.blob(68), 'node');\nSLAB_NODE_LAYOUT.addVariant(0, buffer_layout_1.struct([]), 'uninitialized');\nSLAB_NODE_LAYOUT.addVariant(1, buffer_layout_1.struct([\n    // Only the first prefixLen high-order bits of key are meaningful\n    buffer_layout_1.u32('prefixLen'),\n    layout_1.u128('key'),\n    buffer_layout_1.seq(buffer_layout_1.u32(), 2, 'children'),\n]), 'innerNode');\nSLAB_NODE_LAYOUT.addVariant(2, buffer_layout_1.struct([\n    buffer_layout_1.u8('ownerSlot'),\n    buffer_layout_1.u8('feeTier'),\n    buffer_layout_1.blob(2),\n    layout_1.u128('key'),\n    layout_1.publicKeyLayout('owner'),\n    layout_1.u64('quantity'),\n    layout_1.u64('clientOrderId'),\n]), 'leafNode');\nSLAB_NODE_LAYOUT.addVariant(3, buffer_layout_1.struct([buffer_layout_1.u32('next')]), 'freeNode');\nSLAB_NODE_LAYOUT.addVariant(4, buffer_layout_1.struct([]), 'lastFreeNode');\nexports.SLAB_LAYOUT = buffer_layout_1.struct([\n    SLAB_HEADER_LAYOUT,\n    buffer_layout_1.seq(SLAB_NODE_LAYOUT, buffer_layout_1.offset(SLAB_HEADER_LAYOUT.layoutFor('bumpIndex'), SLAB_HEADER_LAYOUT.offsetOf('bumpIndex') - SLAB_HEADER_LAYOUT.span), 'nodes'),\n]);\nclass Slab {\n    constructor(header, nodes) {\n        this.header = header;\n        this.nodes = nodes;\n    }\n    static decode(buffer) {\n        return exports.SLAB_LAYOUT.decode(buffer);\n    }\n    get(searchKey) {\n        if (this.header.leafCount === 0) {\n            return null;\n        }\n        if (!(searchKey instanceof bn_js_1.default)) {\n            searchKey = new bn_js_1.default(searchKey);\n        }\n        let index = this.header.root;\n        while (true) {\n            const { leafNode, innerNode } = this.nodes[index];\n            if (leafNode) {\n                if (leafNode.key.eq(searchKey)) {\n                    return leafNode;\n                }\n                return null;\n            }\n            else if (innerNode) {\n                if (!innerNode.key\n                    .xor(searchKey)\n                    .iushrn(128 - innerNode.prefixLen)\n                    .isZero()) {\n                    return null;\n                }\n                index =\n                    innerNode.children[searchKey.testn(128 - innerNode.prefixLen - 1) ? 1 : 0];\n            }\n            else {\n                throw new Error('Invalid slab');\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this.items(false);\n    }\n    *items(descending = false) {\n        if (this.header.leafCount === 0) {\n            return;\n        }\n        const stack = [this.header.root];\n        while (stack.length > 0) {\n            const index = stack.pop();\n            const { leafNode, innerNode } = this.nodes[index];\n            if (leafNode) {\n                yield leafNode;\n            }\n            else if (innerNode) {\n                if (descending) {\n                    stack.push(innerNode.children[0], innerNode.children[1]);\n                }\n                else {\n                    stack.push(innerNode.children[1], innerNode.children[0]);\n                }\n            }\n        }\n    }\n}\nexports.Slab = Slab;\nlayout_1.setLayoutDecoder(exports.SLAB_LAYOUT, ({ header, nodes }) => new Slab(header, nodes));\n//# sourceMappingURL=slab.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeWallet = exports.Provider = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst simulate_transaction_1 = require(\"./simulate-transaction\");\nclass Provider {\n    constructor(connection, wallet, opts) {\n        this.connection = connection;\n        this.wallet = wallet;\n        this.opts = opts;\n    }\n    static defaultOptions() {\n        return {\n            preflightCommitment: 'recent',\n            commitment: 'recent',\n        };\n    }\n    static local(url, opts) {\n        opts = opts || Provider.defaultOptions();\n        const connection = new web3_js_1.Connection(url || 'http://localhost:8899', opts.preflightCommitment);\n        const wallet = NodeWallet.local();\n        return new Provider(connection, wallet, opts);\n    }\n    async send(tx, signers, opts) {\n        var _a;\n        if (signers === undefined) {\n            signers = [];\n        }\n        if (opts === undefined) {\n            opts = this.opts;\n        }\n        const signerKps = signers.filter(s => s !== undefined);\n        const signerPubkeys = [this.wallet.publicKey].concat(signerKps.map(s => s.publicKey));\n        tx.setSigners(...signerPubkeys);\n        tx.recentBlockhash = (await this.connection.getRecentBlockhash(opts.preflightCommitment)).blockhash;\n        await this.wallet.signTransaction(tx);\n        signerKps.forEach(kp => {\n            tx.partialSign(kp);\n        });\n        const rawTx = tx.serialize();\n        try {\n            const txId = await web3_js_1.sendAndConfirmRawTransaction(this.connection, rawTx, opts);\n            return txId;\n        }\n        catch (err) {\n            console.error('Transaction failed. Simulating for logs...');\n            const r = await simulate_transaction_1.simulateTransaction(this.connection, tx, (_a = opts.commitment) !== null && _a !== void 0 ? _a : 'recent');\n            console.error(r);\n            throw err;\n        }\n    }\n    async sendAll(reqs, opts) {\n        var _a;\n        if (opts === undefined) {\n            opts = this.opts;\n        }\n        const blockhash = await this.connection.getRecentBlockhash(opts.preflightCommitment);\n        let txs = reqs.map(r => {\n            let tx = r.tx;\n            let signers = r.signers;\n            if (signers === undefined) {\n                signers = [];\n            }\n            const signerKps = signers.filter(s => s !== undefined);\n            const signerPubkeys = [this.wallet.publicKey].concat(signerKps.map(s => s.publicKey));\n            tx.setSigners(...signerPubkeys);\n            tx.recentBlockhash = blockhash.blockhash;\n            signerKps.forEach(kp => {\n                tx.partialSign(kp);\n            });\n            return tx;\n        });\n        const signedTxs = await this.wallet.signAllTransactions(txs);\n        const sigs = [];\n        for (let k = 0; k < txs.length; k += 1) {\n            const tx = signedTxs[k];\n            const rawTx = tx.serialize();\n            try {\n                sigs.push(await web3_js_1.sendAndConfirmRawTransaction(this.connection, rawTx, opts));\n            }\n            catch (err) {\n                console.error('Transaction failed. Simulating for logs...');\n                const r = await simulate_transaction_1.simulateTransaction(this.connection, tx, (_a = opts.commitment) !== null && _a !== void 0 ? _a : 'recent');\n                console.error(r);\n                throw err;\n            }\n        }\n        return sigs;\n    }\n}\nexports.Provider = Provider;\nclass NodeWallet {\n    constructor(payer) {\n        this.payer = payer;\n    }\n    static local() {\n        const payer = new web3_js_1.Account(Buffer.from(JSON.parse(require('fs').readFileSync(require('os').homedir() + '/.config/solana/id.json', {\n            encoding: 'utf-8',\n        }))));\n        return new NodeWallet(payer);\n    }\n    async signTransaction(tx) {\n        tx.partialSign(this.payer);\n        return tx;\n    }\n    async signAllTransactions(txs) {\n        return txs.map(t => {\n            t.partialSign(this.payer);\n            return t;\n        });\n    }\n    get publicKey() {\n        return this.payer.publicKey;\n    }\n}\nexports.NodeWallet = NodeWallet;\n//# sourceMappingURL=provider.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getOwnedAccountsFilters = exports.parseMintData = exports.parseTokenAccountData = exports.MINT_LAYOUT = exports.ACCOUNT_LAYOUT = exports.getOwnedTokenAccounts = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst serum_1 = require(\"@project-serum/serum\");\nconst bs58 = __importStar(require(\"bs58\"));\nconst BufferLayout = __importStar(require(\"buffer-layout\"));\nasync function getOwnedTokenAccounts(connection, publicKey) {\n    let filters = getOwnedAccountsFilters(publicKey);\n    // @ts-ignore\n    let resp = await connection._rpcRequest('getProgramAccounts', [\n        serum_1.TokenInstructions.TOKEN_PROGRAM_ID.toBase58(),\n        {\n            commitment: connection.commitment,\n            filters,\n        },\n    ]);\n    if (resp.error) {\n        throw new Error('failed to get token accounts owned by ' +\n            publicKey.toBase58() +\n            ': ' +\n            resp.error.message);\n    }\n    return (resp.result\n        // @ts-ignore\n        .map(({ pubkey, account: { data } }) => {\n        data = bs58.decode(data);\n        return {\n            publicKey: new web3_js_1.PublicKey(pubkey),\n            account: parseTokenAccountData(data),\n        };\n    }));\n}\nexports.getOwnedTokenAccounts = getOwnedTokenAccounts;\n// todo: remove\nexports.ACCOUNT_LAYOUT = BufferLayout.struct([\n    BufferLayout.blob(32, 'mint'),\n    BufferLayout.blob(32, 'owner'),\n    BufferLayout.nu64('amount'),\n    BufferLayout.blob(93),\n]);\nexports.MINT_LAYOUT = BufferLayout.struct([\n    BufferLayout.blob(44),\n    BufferLayout.u8('decimals'),\n    BufferLayout.blob(37),\n]);\nfunction parseTokenAccountData(data) {\n    // @ts-ignore\n    let { mint, owner, amount } = exports.ACCOUNT_LAYOUT.decode(data);\n    return {\n        mint: new web3_js_1.PublicKey(mint),\n        owner: new web3_js_1.PublicKey(owner),\n        amount,\n    };\n}\nexports.parseTokenAccountData = parseTokenAccountData;\n// @ts-ignore\nfunction parseMintData(data) {\n    // @ts-ignore\n    let { decimals } = exports.MINT_LAYOUT.decode(data);\n    return { decimals };\n}\nexports.parseMintData = parseMintData;\n// @ts-ignore\nfunction getOwnedAccountsFilters(publicKey) {\n    return [\n        {\n            memcmp: {\n                // @ts-ignore\n                offset: exports.ACCOUNT_LAYOUT.offsetOf('owner'),\n                bytes: publicKey.toBase58(),\n            },\n        },\n        {\n            dataSize: exports.ACCOUNT_LAYOUT.span,\n        },\n    ];\n}\nexports.getOwnedAccountsFilters = getOwnedAccountsFilters;\n//# sourceMappingURL=token.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetMultipleAccountsAndContextRpcResult = exports.getMultipleSolanaAccounts = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst superstruct_1 = require(\"superstruct\");\nconst assert_1 = __importDefault(require(\"assert\"));\nasync function getMultipleSolanaAccounts(connection, publicKeys) {\n    const args = [publicKeys.map(k => k.toBase58()), { commitment: 'recent' }];\n    // @ts-ignore\n    const unsafeRes = await connection._rpcRequest('getMultipleAccounts', args);\n    const res = exports.GetMultipleAccountsAndContextRpcResult(unsafeRes);\n    if (res.error) {\n        throw new Error('failed to get info about accounts ' +\n            publicKeys.map(k => k.toBase58()).join(', ') +\n            ': ' +\n            res.error.message);\n    }\n    assert_1.default(typeof res.result !== 'undefined');\n    const accounts = [];\n    for (const account of res.result.value) {\n        let value = null;\n        if (res.result.value) {\n            const { executable, owner, lamports, data } = account;\n            assert_1.default(data[1] === 'base64');\n            value = {\n                executable,\n                owner: new web3_js_1.PublicKey(owner),\n                lamports,\n                data: Buffer.from(data[0], 'base64'),\n            };\n        }\n        if (value === null) {\n            throw new Error('Invalid response');\n        }\n        accounts.push(value);\n    }\n    return accounts.map((account, idx) => {\n        return {\n            publicKey: publicKeys[idx],\n            account,\n        };\n    });\n}\nexports.getMultipleSolanaAccounts = getMultipleSolanaAccounts;\nfunction jsonRpcResult(resultDescription) {\n    const jsonRpcVersion = superstruct_1.struct.literal('2.0');\n    return superstruct_1.struct.union([\n        superstruct_1.struct({\n            jsonrpc: jsonRpcVersion,\n            id: 'string',\n            error: 'any',\n        }),\n        superstruct_1.struct({\n            jsonrpc: jsonRpcVersion,\n            id: 'string',\n            error: 'null?',\n            result: resultDescription,\n        }),\n    ]);\n}\nfunction jsonRpcResultAndContext(resultDescription) {\n    return jsonRpcResult({\n        context: superstruct_1.struct({\n            slot: 'number',\n        }),\n        value: resultDescription,\n    });\n}\nconst AccountInfoResult = superstruct_1.struct({\n    executable: 'boolean',\n    owner: 'string',\n    lamports: 'number',\n    data: 'any',\n    rentEpoch: 'number?',\n});\nexports.GetMultipleAccountsAndContextRpcResult = jsonRpcResultAndContext(superstruct_1.struct.array([superstruct_1.struct.union(['null', AccountInfoResult])]));\n//# sourceMappingURL=connection.js.map","import { PublicKey } from '@solana/web3.js';\nimport { AccountInfo as TokenAccount } from '@solana/spl-token';\nimport { ProgramAccount as CommonProgramAccount } from '@project-serum/common';\nimport { Action, ActionType } from './actions';\nimport { networks, Network } from './config';\n\nexport enum BootstrapState {\n  NeedsBootstrap,\n  IsBootstrapping,\n  Bootstrapped,\n}\n\nexport default function reducer(\n  state: State = initialState,\n  action: Action,\n): State {\n  let newState = {\n    common: { ...state.common },\n    lockup: { ...state.lockup },\n    registry: { ...state.registry },\n    accounts: { ...state.accounts },\n  };\n  switch (action.type) {\n    // Common.\n    case ActionType.CommonAppWillBootstrap:\n      newState.common.bootstrapState = BootstrapState.IsBootstrapping;\n      newState.common.bootstrapTrigger = false;\n      return newState;\n    case ActionType.CommonAppDidBootstrap:\n      newState.common.bootstrapState = BootstrapState.Bootstrapped;\n      return newState;\n    case ActionType.CommonWalletSetProvider:\n      newState.common.walletProvider = action.item.walletProvider;\n      return newState;\n    case ActionType.CommonWalletDidConnect:\n      newState.common.isWalletConnected = true;\n      return newState;\n    case ActionType.CommonWalletDidDisconnect:\n      newState.common.isWalletConnected = false;\n      return newState;\n    case ActionType.CommonSetNetwork:\n      if (newState.common.network.label !== action.item.network.label) {\n        newState.common.network = action.item.network;\n        newState.common.bootstrapState = BootstrapState.NeedsBootstrap;\n        newState.common.shutdownTrigger = true;\n        const network = networks[action.item.networkKey];\n        newState.registry.registrar = Object.values(network.registrars)[0];\n      }\n      return newState;\n    case ActionType.CommonTriggerBootstrap:\n      newState.common.bootstrapState = BootstrapState.NeedsBootstrap;\n      newState.common.bootstrapTrigger = true;\n      return newState;\n    case ActionType.CommonTriggerShutdown:\n      newState.common.bootstrapState = BootstrapState.NeedsBootstrap;\n      newState.common.shutdownTrigger = true;\n      return newState;\n    case ActionType.CommonDidShutdown:\n      // Reset everything except network and registrar.\n      let s = {\n        ...initialState,\n      };\n      s.common.network = newState.common.network;\n      s.registry.registrar = newState.registry.registrar;\n      return s;\n    case ActionType.CommonOwnedTokenAccountsSet:\n      newState.common.ownedTokenAccounts = action.item.ownedTokenAccounts;\n      return newState;\n\n    case ActionType.CommonOwnedTokenAccountsUpdate:\n      newState.common.ownedTokenAccounts = newState.common.ownedTokenAccounts.map(\n        programAccount => {\n          if (programAccount.publicKey.equals(action.item.account.publicKey)) {\n            return action.item.account;\n          } else {\n            return programAccount;\n          }\n        },\n      );\n      return newState;\n\n    // Lockup.\n    case ActionType.LockupSetVestings:\n      newState.lockup.vestings = action.item.vestingAccounts;\n      return newState;\n    case ActionType.LockupUpdateVesting:\n      newState.accounts[action.item.vesting.publicKey.toString()] =\n        action.item.vesting.account;\n      return newState;\n    case ActionType.LockupCreateVesting:\n      newState.lockup.vestings.unshift(action.item.vesting.publicKey);\n      newState.accounts[action.item.vesting.publicKey.toString()] =\n        action.item.vesting.account;\n      return newState;\n\n    // Registry.\n    case ActionType.RegistrySetMember:\n      // This should only be called on member creation. All other member\n      // member switches should route through `RegistrySetMember`.\n      newState.registry.member = action.item.member;\n      return newState;\n    case ActionType.RegistrySetRegistrar:\n      newState.registry.registrar = action.item.registrar;\n      newState.registry.member = action.item.member;\n      newState.registry.pendingWithdrawals = null;\n      return newState;\n    case ActionType.RegistrySetPendingWithdrawals:\n      action.item.pendingWithdrawals.forEach((pw: any) => {\n        newState.accounts[pw.publicKey.toString()] = pw.account;\n      });\n      newState.registry.pendingWithdrawals = action.item.pendingWithdrawals.map(\n        (pw: any) => pw.publicKey,\n      );\n      return newState;\n    case ActionType.RegistryCreatePendingWithdrawal:\n      newState.accounts[action.item.pendingWithdrawal.publicKey.toString()] =\n        action.item.pendingWithdrawal.account;\n      if (newState.registry.pendingWithdrawals === null) {\n        newState.registry.pendingWithdrawals = [];\n      }\n      newState.registry.pendingWithdrawals.unshift(\n        action.item.pendingWithdrawal.publicKey,\n      );\n      return newState;\n    case ActionType.RegistryUpdatePendingWithdrawal:\n      newState.accounts[action.item.pendingWithdrawal.publicKey.toString()] =\n        action.item.pendingWithdrawal.account;\n      return newState;\n    case ActionType.AccountAdd:\n      newState.accounts[action.item.account.publicKey.toString()] =\n        action.item.account.account;\n      return newState;\n    case ActionType.AccountUpdate:\n      newState.accounts[action.item.account.publicKey.toString()] =\n        action.item.account.account;\n      return newState;\n    default:\n      return newState;\n  }\n}\n\nexport type State = {\n  common: CommonState;\n  lockup: LockupState;\n  registry: RegistryState;\n  accounts: { [pubkey: string]: any };\n};\n\nexport type CommonState = {\n  walletProvider?: string;\n  isWalletConnected: boolean;\n  bootstrapTrigger: boolean;\n  bootstrapState: BootstrapState;\n  shutdownTrigger: boolean;\n  network: Network;\n  ownedTokenAccounts: ProgramAccount<TokenAccount>[];\n};\n\nexport type LockupState = {\n  vestings: PublicKey[];\n};\n\n// All state associated with a single instance of a staking registrar.\nexport type RegistryState = {\n  registrar: PublicKey;\n  member?: PublicKey;\n  pendingWithdrawals: PublicKey[] | null;\n};\n\nexport const initialState: State = {\n  common: {\n    bootstrapTrigger: false,\n    shutdownTrigger: false,\n    isWalletConnected: false,\n    walletProvider: 'https://www.sollet.io',\n    bootstrapState: BootstrapState.NeedsBootstrap,\n    network: networks.mainnet,\n    ownedTokenAccounts: [],\n  },\n  lockup: {\n    vestings: [],\n  },\n  registry: {\n    pendingWithdrawals: null,\n    registrar: networks.mainnet.registrars.srm,\n  },\n  accounts: {},\n};\n\nexport type AsyncData<T> = {\n  isReady: boolean;\n  data?: T;\n};\n\n// Re-export.\nexport type ProgramAccount<T = any> = CommonProgramAccount<T>;\n","import { createStore } from 'redux';\nimport reducer from './reducer';\n\nexport const store = createStore(reducer);\n","import React, {\n  PropsWithChildren,\n  ReactNode,\n  useEffect,\n  useCallback,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport { PublicKey } from '@solana/web3.js';\nimport {\n  token,\n  parseMintAccount,\n  parseTokenAccount,\n} from '@project-serum/common';\nimport * as anchor from '@project-serum/anchor';\nimport { State as StoreState, ProgramAccount } from '../../store/reducer';\nimport { ActionType } from '../../store/actions';\nimport { useWallet } from './WalletProvider';\nimport { memberSeed } from '../../utils/registry';\n\n// BootstrapProvider performs data fetching on application startup.\nexport default function BootstrapProvider(props: PropsWithChildren<ReactNode>) {\n  const { bootstrapTrigger, shutdownTrigger, network, registrar } = useSelector(\n    (state: StoreState) => {\n      return {\n        bootstrapTrigger: state.common.bootstrapTrigger,\n        shutdownTrigger: state.common.shutdownTrigger,\n        network: state.common.network,\n        registrar: state.registry.registrar,\n      };\n    },\n  );\n  const dispatch = useDispatch();\n  const { wallet, lockupClient, registryClient } = useWallet();\n  const { enqueueSnackbar } = useSnackbar();\n\n  // Entry point for bootstrapping all the data for the app.\n  const bootstrap = useCallback(async () => {\n    enqueueSnackbar(`Connecting to ${network.label}`, {\n      variant: 'info',\n      autoHideDuration: 2500,\n    });\n\n    dispatch({\n      type: ActionType.CommonAppWillBootstrap,\n      item: {},\n    });\n\n    let { registrars, members } = await refreshAccounts({\n      dispatch,\n      lockupClient,\n      registryClient,\n      network,\n      wallet,\n    });\n\n    // Temporary account store for the initial registrar switch.\n    const accountStore = Object.fromEntries(\n      new Map(registrars.map(r => [r.publicKey.toString(), r.account])),\n    );\n    members.forEach(m => {\n      accountStore[m.publicKey.toString()] = m.account;\n    });\n\n    await registrarSwitch(\n      registryClient,\n      accountStore,\n      dispatch,\n      registrar,\n      undefined,\n    );\n\n    dispatch({\n      type: ActionType.CommonAppDidBootstrap,\n      item: {},\n    });\n\n    enqueueSnackbar(`Connection established`, {\n      variant: 'success',\n      autoHideDuration: 2500,\n    });\n  }, [\n    dispatch,\n    enqueueSnackbar,\n    registryClient,\n    registrar,\n    lockupClient,\n    network,\n    wallet,\n  ]);\n\n  const shutdown = useCallback(async () => {\n    wallet.disconnect();\n    dispatch({\n      type: ActionType.CommonDidShutdown,\n      item: {},\n    });\n  }, [dispatch, wallet]);\n\n  useEffect(() => {\n    if (bootstrapTrigger) {\n      bootstrap().catch(err => {\n        console.error(err);\n        enqueueSnackbar(`Error bootstrapping application: ${err.toString()}`, {\n          variant: 'error',\n        });\n      });\n    }\n    if (shutdownTrigger) {\n      shutdown().catch(err => {\n        console.error(err);\n        enqueueSnackbar(`Error shutting down application: ${err.toString()}`, {\n          variant: 'error',\n        });\n      });\n    }\n  }, [bootstrapTrigger, bootstrap, shutdownTrigger, shutdown, enqueueSnackbar]);\n\n  return <>{props.children}</>;\n}\n\n// Fetches and populates the redux store with all accounts needed for the app to start.\nexport async function refreshAccounts({\n  dispatch,\n  lockupClient,\n  registryClient,\n  network,\n  wallet,\n}: any) {\n  // Fetch all staking instances.\n  const fetchRegistrars = async (): Promise<ProgramAccount[]> => {\n    const registrarAddresses: PublicKey[] = Object.values(network.registrars);\n\n    // All registrars.\n    const registrars: ProgramAccount[] = (\n      await anchor.utils.getMultipleAccounts(\n        registryClient.provider.connection,\n        registrarAddresses,\n      )\n    ).map(raw => {\n      const account = registryClient.coder.accounts.decode(\n        'Registrar',\n        raw!.account.data,\n      );\n      return {\n        publicKey: raw!.publicKey,\n        account,\n      };\n    });\n\n    // Mint for each registrar.\n    const mints: ProgramAccount[] = (\n      await anchor.utils.getMultipleAccounts(\n        registryClient.provider.connection,\n        registrars.map(r => r.account.mint),\n      )\n    ).map(raw => {\n      const account = parseMintAccount(raw!.account.data);\n      return {\n        publicKey: raw!.publicKey,\n        account,\n      };\n    });\n\n    // Reward queues for each registrar.\n    const rewardQs = (\n      await anchor.utils.getMultipleAccounts(\n        registryClient.provider.connection,\n        registrars.map(r => r.account.rewardEventQ),\n      )\n    ).map(raw => {\n      const account = registryClient.coder.accounts.decode(\n        'RewardQueue',\n        raw!.account.data,\n      );\n      return {\n        publicKey: raw!.publicKey,\n        account,\n      };\n    });\n\n    // Add all the accounts to the store.\n    registrars\n      .concat(mints)\n      .concat(rewardQs)\n      .forEach(r => {\n        dispatch({\n          type: ActionType.AccountAdd,\n          item: {\n            account: r,\n          },\n        });\n      });\n    return registrars;\n  };\n\n  // Fetch the stake accounts for each staking instance (for the connected wallet).\n  const fetchMembers = async (\n    registrars: ProgramAccount[],\n  ): Promise<ProgramAccount[]> => {\n    const members = await Promise.all(\n      registrars\n        .map((r: ProgramAccount) => r.publicKey)\n        .map((r: PublicKey) =>\n          memberSeed(r)\n            .then(seed =>\n              PublicKey.createWithSeed(\n                wallet.publicKey,\n                seed,\n                registryClient.programId,\n              ),\n            )\n            .then(member => {\n              return {\n                memberPublicKey: member,\n                registrar: r,\n              };\n            }),\n        ),\n    );\n    const memberAddresses: PublicKey[] = members.map(m => m.memberPublicKey);\n    const memberAccounts: ProgramAccount[] = (\n      await anchor.utils.getMultipleAccounts(\n        registryClient.provider.connection,\n        memberAddresses,\n      )\n    )\n      .filter(raw => raw !== null)\n      .map((raw: any) => {\n        const account = registryClient.coder.accounts.decode(\n          'Member',\n          raw!.account.data,\n        );\n        return {\n          publicKey: raw!.publicKey,\n          account,\n        };\n      });\n\n    // Get all accounts for all of our member accounts.\n    //\n    // Note: As the number of registrars grows, we'll probably want to move\n    //       this fetch to be an on demand query, rather than on application\n    //       bootstrap.\n    await Promise.all(\n      memberAccounts.map(memberAccount => {\n        return fetchAndDispatchMemberAccounts(\n          memberAccount,\n          dispatch,\n          registryClient.provider.connection,\n        );\n      }),\n    );\n\n    // Add all the member accounts to the store. Must be done *after* the\n    // active member's vaults.\n    memberAccounts.forEach(m => {\n      dispatch({\n        type: ActionType.AccountAdd,\n        item: {\n          account: m,\n        },\n      });\n    });\n\n    return memberAccounts;\n  };\n\n  // All mints for each staking instance (pool token and the token being staked).\n  const fetchMints = async (registrars: ProgramAccount[]) => {\n    const mintAddresses = registrars\n      .map(r => r.account.mint)\n      .concat(registrars.map(r => r.account.poolMint));\n    const mints = (\n      await anchor.utils.getMultipleAccounts(\n        registryClient.provider.connection,\n        mintAddresses,\n      )\n    ).map(raw => {\n      const account = parseMintAccount(raw!.account.data);\n      return {\n        publicKey: raw!.publicKey,\n        account,\n      };\n    });\n    mints.forEach(m => {\n      dispatch({\n        type: ActionType.AccountAdd,\n        item: {\n          account: m,\n        },\n      });\n    });\n  };\n\n  // All token accounts owned by the current user.\n  const fetchOwnedTokenAccounts = async () => {\n    const ownedTokenAccounts = await token.getOwnedTokenAccounts(\n      lockupClient.provider.connection,\n      wallet.publicKey,\n    );\n    dispatch({\n      type: ActionType.CommonOwnedTokenAccountsSet,\n      item: {\n        ownedTokenAccounts,\n      },\n    });\n  };\n\n  // All vesting accounts owned by the current user.\n  const fetchVestingAccounts = async () => {\n    const vestingAccounts = await lockupClient.account.vesting.all(\n      wallet.publicKey.toBuffer(),\n    );\n    vestingAccounts.forEach((account: any) => {\n      dispatch({\n        type: ActionType.AccountAdd,\n        item: {\n          account,\n        },\n      });\n    });\n    dispatch({\n      type: ActionType.LockupSetVestings,\n      item: {\n        vestingAccounts: vestingAccounts.map(\n          (v: ProgramAccount) => v.publicKey,\n        ),\n      },\n    });\n  };\n\n  const registrars = await fetchRegistrars();\n  const members = await fetchMembers(registrars);\n  await fetchMints(registrars);\n  await fetchOwnedTokenAccounts();\n  await fetchVestingAccounts();\n\n  return { registrars, members };\n}\n\nexport async function registrarSwitch(\n  registryClient: any,\n  accounts: any,\n  dispatch: any,\n  newRegistrar: PublicKey,\n  oldRegistrar?: PublicKey,\n) {\n  const oldMember = await (async (): Promise<ProgramAccount | undefined> => {\n    if (oldRegistrar === undefined) {\n      return undefined;\n    }\n    const oldMember = await PublicKey.createWithSeed(\n      registryClient.provider.wallet.publicKey,\n      await memberSeed(oldRegistrar),\n      registryClient.programId,\n    );\n    const oldMemberAccount = accounts[oldMember.toString()];\n    return oldMemberAccount !== undefined\n      ? {\n          publicKey: oldMember,\n          account: oldMemberAccount,\n        }\n      : undefined;\n  })();\n\n  const newMember = await (async (): Promise<ProgramAccount | undefined> => {\n    const newMember = await PublicKey.createWithSeed(\n      registryClient.provider.wallet.publicKey,\n      await memberSeed(newRegistrar),\n      registryClient.programId,\n    );\n    const newMemberAccount = accounts[newMember.toString()];\n    return newMemberAccount\n      ? {\n          publicKey: newMember,\n          account: newMemberAccount,\n        }\n      : undefined;\n  })();\n\n  await subscribeRegistrar(\n    registryClient,\n    accounts,\n    dispatch,\n    newRegistrar,\n    oldRegistrar,\n  );\n  if (newMember) {\n    unsubscribeMember(registryClient, oldMember);\n    subscribeMember(newMember, registryClient, dispatch);\n  }\n\n  // Perform the UI update.\n  dispatch({\n    type: ActionType.RegistrySetRegistrar,\n    item: {\n      registrar: newRegistrar,\n      member: newMember ? newMember.publicKey : undefined,\n    },\n  });\n}\n\nexport async function subscribeRegistrar(\n  registryClient: any,\n  accounts: any,\n  dispatch: any,\n  newRegistrar: PublicKey,\n  oldRegistrar?: PublicKey,\n) {\n  if (oldRegistrar) {\n    const oldRegistrarAccount = accounts[oldRegistrar.toString()];\n    registryClient.account.rewardQueue.unsubscribe(\n      oldRegistrarAccount.rewardEventQ,\n    );\n    // TODO: unsubscribe from the staking pool subscription.\n  }\n\n  const newRegistrarAccount = accounts[newRegistrar.toString()];\n\n  // Reward event queue sub.\n  const conn = registryClient.account.rewardQueue.subscribe(\n    newRegistrarAccount.rewardEventQ,\n  );\n  conn.on('change', (account: any) => {\n    dispatch({\n      type: ActionType.AccountUpdate,\n      item: {\n        account: {\n          publicKey: newRegistrarAccount.rewardEventQ,\n          account,\n        },\n      },\n    });\n  });\n\n  // Staking pool token sub.\n  // TODO: track these connections somewhere more organized.\n  registryClient.provider.connection.onAccountChange(\n    newRegistrarAccount.poolMint,\n    (acc: any) => {\n      const poolMint = parseMintAccount(acc.data);\n      dispatch({\n        type: ActionType.AccountUpdate,\n        item: {\n          account: {\n            publicKey: newRegistrarAccount.poolMint,\n            account: poolMint,\n          },\n        },\n      });\n    },\n    'recent',\n  );\n}\n\nexport function subscribeMember(\n  newMember: ProgramAccount,\n  registryClient: any,\n  dispatch: any,\n) {\n  // Subscribe to all member account updates.\n  registryClient.account.member\n    .subscribe(newMember.publicKey)\n    .on('change', (account: any) => {\n      dispatch({\n        type: ActionType.AccountUpdate,\n        item: {\n          account: {\n            publicKey: newMember.publicKey,\n            account,\n          },\n        },\n      });\n    });\n\n  // Subscription function, updating the redux store on every change\n  // to a token account.\n  //\n  // TODO: should track these subscriptions for unsubscribing on demand.\n  const createVaultSubscription = (address: PublicKey) => {\n    registryClient.provider.connection.onAccountChange(\n      address,\n      (acc: any) => {\n        const tokenAccount = parseTokenAccount(acc.data);\n        dispatch({\n          type: ActionType.AccountUpdate,\n          item: {\n            account: {\n              publicKey: address,\n              account: tokenAccount,\n            },\n          },\n        });\n      },\n      'recent',\n    );\n  };\n\n  // Subscribe to all the member's token vaults.\n  createVaultSubscription(newMember.account.balances.vault);\n  createVaultSubscription(newMember.account.balances.vaultStake);\n  createVaultSubscription(newMember.account.balances.vaultPw);\n  createVaultSubscription(newMember.account.balances.spt);\n  createVaultSubscription(newMember.account.balancesLocked.vault);\n  createVaultSubscription(newMember.account.balancesLocked.vaultStake);\n  createVaultSubscription(newMember.account.balancesLocked.vaultPw);\n  createVaultSubscription(newMember.account.balancesLocked.spt);\n}\n\nfunction unsubscribeMember(registryClient: any, newMember?: ProgramAccount) {\n  // todo\n}\n\n// Fetches all accounts for a member account and populates the store with them.\nexport async function fetchAndDispatchMemberAccounts(\n  memberAccount: ProgramAccount,\n  dispatch: any,\n  connection: any,\n) {\n  let accounts = (\n    await anchor.utils.getMultipleAccounts(connection, [\n      memberAccount.account.balances.vault,\n      memberAccount.account.balances.vaultStake,\n      memberAccount.account.balances.vaultPw,\n      memberAccount.account.balances.spt,\n      memberAccount.account.balancesLocked.vault,\n      memberAccount.account.balancesLocked.vaultStake,\n      memberAccount.account.balancesLocked.vaultPw,\n      memberAccount.account.balancesLocked.spt,\n    ])\n  )\n    .filter(raw => raw !== null)\n    .map((raw: any) => {\n      return {\n        publicKey: raw.publicKey,\n        account: parseTokenAccount(raw.account.data),\n      };\n    });\n  accounts.forEach(account => {\n    dispatch({\n      type: ActionType.AccountAdd,\n      item: {\n        account,\n      },\n    });\n  });\n}\n","import React, { useState, useEffect, ReactElement } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { useSnackbar } from 'notistack';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Select from '@material-ui/core/Select';\nimport Menu from '@material-ui/core/Menu';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport Button from '@material-ui/core/Button';\nimport PersonIcon from '@material-ui/icons/Person';\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { refreshAccounts } from './BootstrapProvider';\nimport { networks } from '../../store/config';\nimport {\n  State as StoreState,\n  ProgramAccount,\n  BootstrapState,\n} from '../../store/reducer';\nimport { ActionType } from '../../store/actions';\nimport { useWallet } from './WalletProvider';\n\ntype HeaderProps = {\n  isAppReady: boolean;\n  member?: ProgramAccount;\n};\n\nexport default function Header(props: HeaderProps) {\n  const { isAppReady } = props;\n  const { network } = useSelector((state: StoreState) => {\n    return {\n      network: state.common.network,\n      isAppReady:\n        state.common.isWalletConnected &&\n        state.common.bootstrapState === BootstrapState.Bootstrapped,\n    };\n  });\n  const dispatch = useDispatch();\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const { wallet, registryClient, lockupClient } = useWallet();\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  return (\n    <AppBar\n      position=\"static\"\n      style={{\n        background: '#ffffff',\n        color: '#272727',\n        boxShadow: 'none',\n        borderBottom: 'solid 1pt #ccc',\n      }}\n    >\n      <Toolbar>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            width: '100%',\n          }}\n        >\n          <div style={{ display: 'flex' }}>\n            <SerumLogoButton />\n            <BarButton label=\"Stake\" hrefClient=\"/stake\" />\n            <BarButton label=\"Lockup\" hrefClient=\"/lockup\" />\n            <BarButton label=\"Trade\" href=\"https://dex.projectserum.com\" />\n            <BarButton label=\"Swap\" href=\"https://swap.projectserum.com\" />\n            {network.srmFaucet && (\n              <BarButton\n                label=\"Faucet\"\n                href=\"https://www.spl-token-ui.com/#/token-faucets\"\n              />\n            )}\n          </div>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              onClick={() => {\n                setIsRefreshing(true);\n                enqueueSnackbar(`Refreshing`, {\n                  variant: 'info',\n                });\n                refreshAccounts({\n                  dispatch,\n                  lockupClient,\n                  registryClient,\n                  network,\n                  wallet,\n                })\n                  .then(() => {\n                    setIsRefreshing(false);\n                    closeSnackbar();\n                  })\n                  .catch(err => {\n                    setIsRefreshing(false);\n                    closeSnackbar();\n                    enqueueSnackbar(`There was a problem refreshing: ${err}`, {\n                      variant: 'error',\n                      autoHideDuration: 2500,\n                    });\n                  });\n              }}\n              style={{\n                display: isAppReady ? 'block' : 'none',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                marginRight: '10px',\n              }}\n            >\n              {isRefreshing ? (\n                <div\n                  style={{\n                    marginTop: '8px',\n                    padding: '10px',\n                  }}\n                >\n                  <CircularProgress style={{ width: '24px', height: '24px' }} />\n                </div>\n              ) : (\n                <div>\n                  <IconButton>\n                    <RefreshIcon />\n                  </IconButton>\n                </div>\n              )}\n            </div>\n            <NetworkSelector />\n            <WalletConnectButton\n              style={{\n                display: isAppReady ? 'none' : '',\n              }}\n            />\n            {isAppReady && <UserSelector />}\n          </div>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nfunction SerumLogoButton() {\n  const history = useHistory();\n  return (\n    <div style={{ display: 'flex' }} onClick={() => history.push('/')}>\n      <Button color=\"inherit\">\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n          }}\n        >\n          <img\n            style={{\n              display: 'block',\n              height: '35px',\n            }}\n            alt=\"Logo\"\n            src=\"http://dex.projectserum.com/static/media/logo.49174c73.svg\"\n          />\n        </div>\n      </Button>\n    </div>\n  );\n}\n\ntype BarButtonProps = {\n  label: string;\n  hrefClient?: string;\n  href?: string;\n};\n\nfunction BarButton(props: BarButtonProps) {\n  const history = useHistory();\n  const { label, href, hrefClient } = props;\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n      }}\n      onClick={() => hrefClient && history.push(hrefClient)}\n    >\n      <Link\n        style={{ color: 'inherit', textDecoration: 'none' }}\n        href={href}\n        target=\"_blank\"\n      >\n        <Button color=\"inherit\">\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n              flexDirection: 'column',\n            }}\n          >\n            <Typography style={{ fontSize: '15px' }}>{label}</Typography>\n          </div>\n        </Button>\n      </Link>\n    </div>\n  );\n}\n\nfunction NetworkSelector() {\n  const network = useSelector((state: StoreState) => {\n    return state.common.network;\n  });\n  const dispatch = useDispatch();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div\n      style={{\n        marginRight: '10px',\n        fontSize: '15px',\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n      }}\n    >\n      <Button\n        color=\"inherit\"\n        onClick={e =>\n          setAnchorEl(\n            // @ts-ignore\n            e.currentTarget,\n          )\n        }\n      >\n        <BubbleChartIcon />\n        <Typography style={{ marginLeft: '5px', fontSize: '15px' }}>\n          {network.label}\n        </Typography>\n      </Button>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        style={{\n          marginLeft: '12px',\n          color: 'white',\n        }}\n      >\n        {Object.keys(networks).map((n: string) => (\n          <MenuItem\n            key={n}\n            onClick={() => {\n              handleClose();\n              dispatch({\n                type: ActionType.CommonSetNetwork,\n                item: {\n                  network: networks[n],\n                  networkKey: n,\n                },\n              });\n            }}\n          >\n            <Typography>{networks[n].label}</Typography>\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n\nfunction UserSelector() {\n  const { wallet } = useWallet();\n\n  return (\n    <Select\n      displayEmpty\n      renderValue={() => {\n        return (\n          <Typography style={{ overflow: 'hidden' }}>\n            {wallet.publicKey.toString()}\n          </Typography>\n        );\n      }}\n      style={{\n        marginLeft: '12px',\n        width: '150px',\n      }}\n      onChange={e => {\n        if (e.target.value === 'disconnect') {\n          wallet.disconnect();\n        }\n      }}\n    >\n      <MenuItem value=\"disconnect\">\n        <IconButton color=\"inherit\">\n          <ExitToAppIcon />\n          <Typography style={{ marginLeft: '15px' }}>Disconnect</Typography>\n        </IconButton>\n      </MenuItem>\n    </Select>\n  );\n}\n\ntype WalletConnectButtonProps = {\n  style?: any;\n};\n\nexport function WalletConnectButton(\n  props: WalletConnectButtonProps,\n): ReactElement {\n  const { showDisconnect } = useSelector((state: StoreState) => {\n    return {\n      showDisconnect: state.common.isWalletConnected,\n    };\n  });\n  const dispatch = useDispatch();\n  const { wallet, lockupClient } = useWallet();\n  const { enqueueSnackbar } = useSnackbar();\n\n  // Wallet connection event listeners.\n  useEffect(() => {\n    wallet.on('disconnect', () => {\n      enqueueSnackbar('Disconnected from wallet', {\n        variant: 'info',\n        autoHideDuration: 2500,\n      });\n      dispatch({\n        type: ActionType.CommonWalletDidDisconnect,\n        item: {},\n      });\n      dispatch({\n        type: ActionType.CommonTriggerShutdown,\n        item: {},\n      });\n    });\n    wallet.on('connect', async () => {\n      dispatch({\n        type: ActionType.CommonWalletDidConnect,\n        item: {},\n      });\n      dispatch({\n        type: ActionType.CommonTriggerBootstrap,\n        item: {},\n      });\n    });\n  }, [wallet, dispatch, enqueueSnackbar, lockupClient.provider.connection]);\n\n  return showDisconnect ? (\n    <Button\n      style={props.style}\n      color=\"inherit\"\n      onClick={() => wallet.disconnect()}\n    >\n      <ExitToAppIcon />\n      <Typography style={{ marginLeft: '5px', fontSize: '15px' }}>\n        Disconnect\n      </Typography>\n    </Button>\n  ) : (\n    <Button\n      style={props.style}\n      color=\"inherit\"\n      onClick={() => wallet.connect()}\n    >\n      <PersonIcon />\n      <Typography style={{ marginLeft: '5px', fontSize: '15px' }}>\n        Connect wallet\n      </Typography>\n    </Button>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Brightness1Icon from '@material-ui/icons/Brightness1';\nimport Link from '@material-ui/core/Link';\nimport { State as StoreState } from '../../store/reducer';\n\nexport default function Footer() {\n  const [envDisplay, setEnvDisplay] = useState(false);\n  const { isDisconnected } = useSelector((state: StoreState) => {\n    return {\n      isDisconnected: !state.common.isWalletConnected,\n    };\n  });\n  return (\n    <div\n      style={{\n        zIndex: 99,\n        position: 'fixed',\n        width: '100%',\n        bottom: 0,\n        textAlign: 'center',\n        height: '30px',\n        backgroundColor: '#fbfbfb',\n        borderTop: 'solid 1pt #ccc',\n        display: 'flex',\n        justifyContent: 'space-between',\n        paddingLeft: '10px',\n        paddingRight: '10px',\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          position: 'absolute',\n          bottom: '40px',\n          left: '10px',\n          borderRadius: '4px',\n          background: '#272727',\n        }}\n        onClick={() => {\n          setEnvDisplay(!envDisplay);\n        }}\n      >\n        <IconButton\n          style={{\n            paddingLeft: '10px',\n            paddingRight: '10px',\n            paddingTop: 0,\n            paddingBottom: 0,\n            color: 'inherit',\n            display: 'flex',\n            justifyContent: 'center',\n            flexDirection: 'column',\n          }}\n        >\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n              flexDirection: 'column',\n              marginRight: '10px',\n            }}\n          >\n            <Brightness1Icon\n              style={{\n                color: isDisconnected ? '#ccc' : 'rgb(60, 195, 215)',\n                fontSize: '12px',\n              }}\n            />\n          </div>\n          <Typography\n            style={{ color: '#fff', fontSize: '14px', fontWeight: 'bold' }}\n          >\n            {'Environment'}\n          </Typography>\n        </IconButton>\n      </div>\n      <div style={{ marginLeft: 'auto', marginRight: 'auto', display: 'flex' }}>\n        <FooterButton\n          href={\n            'https://github.com/project-serum/anchor/blob/master/examples/lockup/docs/staking.md'\n          }\n          label={'Technical Documentation'}\n        />\n        <FooterButton\n          href={'https://github.com/project-serum/awesome-serum'}\n          label={'Developer Resources'}\n        />\n        <FooterButton\n          href={'https://discord.com/channels/739225212658122886'}\n          label={'Discord'}\n        />\n        <FooterButton href={'https://t.me/ProjectSerum'} label={'Telegram'} />\n        <FooterButton\n          href={'https://github.com/project-serum'}\n          label={'GitHub'}\n        />\n        <FooterButton\n          href={'https://solanabeach.io/'}\n          label={'Solana Network'}\n          isEnd={true}\n        />\n      </div>\n      {envDisplay && (\n        <div\n          style={{\n            overflowY: 'scroll',\n            position: 'fixed',\n            bottom: '30px',\n            right: 0,\n            width: '500px',\n            height: '400px',\n            borderTopLeftRadius: '4px',\n            boxShadow: 'rgba(0, 0, 0, 0.05) 0px 0px 25px 0px',\n            background: '#fff',\n          }}\n        >\n          <NetworkEnvironment />\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction NetworkEnvironment() {\n  let { network, registrar, registrarAddress } = useSelector(\n    (state: StoreState) => {\n      return {\n        network: state.common.network,\n        registrar: state.accounts[state.registry.registrar.toString()],\n        registrarAddress: state.registry.registrar,\n      };\n    },\n  );\n  return (\n    <div style={{ textAlign: 'left' }}>\n      <Typography\n        style={{\n          paddingLeft: '10px',\n          marginTop: '20px',\n          fontSize: '14px',\n          fontWeight: 'bold',\n        }}\n      >\n        Programs and Global Accounts\n      </Typography>\n      <ul>\n        <li>\n          SRM Faucet:{' '}\n          {network.srmFaucet ? network.srmFaucet.toString() : 'None'}\n        </li>\n        <li>\n          MSRM Faucet:{' '}\n          {network.msrmFaucet ? network.msrmFaucet.toString() : 'None'}\n        </li>\n        <li>Registry Program: {network.registryProgramId.toString()}</li>\n        <li>Lockup Program: {network.lockupProgramId.toString()}</li>\n      </ul>\n      <Typography\n        style={{\n          paddingLeft: '10px',\n          marginTop: '20px',\n          fontSize: '14px',\n          fontWeight: 'bold',\n        }}\n      >\n        Stake Registrar\n      </Typography>\n      <ul>\n        <li>Address: {registrarAddress.toString()}</li>\n        {Object.keys(registrar).map(field => {\n          return (\n            <li>\n              {field}: {registrar[field].toString()}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\ntype FooterButtonProps = {\n  label: string;\n  href: string;\n  isEnd?: boolean;\n};\n\nfunction FooterButton(props: FooterButtonProps) {\n  const { label, href, isEnd } = props;\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        marginRight: isEnd ? '' : '15px',\n      }}\n    >\n      <Link href={href} target=\"_blank\" color=\"inherit\">\n        <Typography style={{ fontSize: '14px' }}>{label}</Typography>\n      </Link>\n    </div>\n  );\n}\n","import React, { PropsWithChildren } from 'react';\nimport { useSelector } from 'react-redux';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { State as StoreState, BootstrapState } from '../../store/reducer';\nimport Header from './Header';\nimport Footer from './Footer';\n\ntype Props = {};\n\nexport default function Layout(props: PropsWithChildren<Props>) {\n  const { isAppReady } = useSelector((state: StoreState) => {\n    return {\n      isAppReady:\n        state.common.isWalletConnected &&\n        state.common.bootstrapState === BootstrapState.Bootstrapped,\n    };\n  });\n  return (\n    <div\n      style={{\n        display: 'flex',\n        minHeight: '100vh',\n        flexDirection: 'column',\n        backgroundColor: 'rgb(251, 251, 251)',\n      }}\n    >\n      <div\n        style={{\n          position: 'fixed',\n          width: '100%',\n          zIndex: 99,\n        }}\n      >\n        <RiskBar />\n        <Header isAppReady={isAppReady} />\n      </div>\n      <div\n        style={{\n          width: '100%',\n          marginTop: '94px',\n          flex: 1,\n          display: 'flex',\n          marginBottom: '30px', // Compensates for the fixed position footer.\n        }}\n      >\n        {!isAppReady ? (\n          <DisconnectedSplash />\n        ) : (\n          <div style={{ width: '100%' }}>{props.children}</div>\n        )}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nfunction RiskBar() {\n  return (\n    <div\n      style={{\n        color: '#fff',\n        backgroundColor: 'rgb(39, 39, 39)',\n        height: '30px',\n        textAlign: 'center',\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          flexDirection: 'column',\n          height: '100%',\n        }}\n      >\n        <Typography style={{ fontSize: '14px' }}>\n          Stake is unaudited software. Use at your own risk.\n        </Typography>\n      </div>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nfunction DisconnectedSplash() {\n  const classes = useStyles();\n  const { network, isDisconnected } = useSelector((state: StoreState) => {\n    return {\n      network: state.common.network,\n      isDisconnected: !state.common.isWalletConnected,\n    };\n  });\n  return (\n    <div\n      style={{\n        flex: '1',\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        textAlign: 'center',\n      }}\n    >\n      <div style={{ width: '100%', display: 'flex' }}>\n        {isDisconnected ? (\n          <div\n            style={{ display: 'flex', marginLeft: 'auto', marginRight: 'auto' }}\n          >\n            <Typography\n              style={{ marginLeft: '24px' }}\n              color=\"textSecondary\"\n              variant=\"h4\"\n            >\n              Disconnected\n            </Typography>\n          </div>\n        ) : (\n          <div style={{ width: '100%' }}>\n            <div style={{ width: '100%' }} className={classes.root}>\n              <div>\n                <Typography variant=\"h5\">\n                  {`Connecting to ${network.label}...`}\n                </Typography>\n              </div>\n              <div\n                style={{\n                  marginLeft: 'auto',\n                  marginRight: 'auto',\n                  width: '300px',\n                }}\n              >\n                <LinearProgress style={{ width: '100%' }} />\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport BN from 'bn.js';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { PublicKey } from '@solana/web3.js';\nimport { State as StoreState } from '../../store/reducer';\nimport { toDisplay } from '../../utils/tokens';\n\ntype Props = {\n  style?: any;\n  mint?: PublicKey | null;\n  decimals?: number;\n  variant?: 'outlined' | 'standard';\n  onChange: (from: PublicKey, maxAmount: BN) => void;\n};\n\nexport default function OwnedTokenAccountsSelect(p: Props) {\n  const { mint, decimals, variant, onChange, style } = p;\n  const ownedTokenAccounts = useSelector((state: StoreState) => {\n    if (!mint) {\n      return [];\n    }\n    return state.common.ownedTokenAccounts.filter(\n      ota => ota.account.mint.toString() === mint.toString(),\n    );\n  });\n\n  const [fromAccount, setFromAccount] = useState('');\n  return (\n    <Select\n      style={style}\n      variant={variant}\n      fullWidth\n      value={fromAccount}\n      onChange={e => {\n        const pk = e.target.value as string;\n        setFromAccount(pk);\n        const pubkey = new PublicKey(pk);\n        const token = ownedTokenAccounts\n          .filter(ota => ota.publicKey.equals(pubkey))\n          .pop();\n        onChange(pubkey, new BN(token!.account.amount));\n      }}\n    >\n      {ownedTokenAccounts.length === 0 ? (\n        <MenuItem value={''}>No token accounts found</MenuItem>\n      ) : (\n        ownedTokenAccounts.map(ownedTokenAccount => {\n          return (\n            <MenuItem value={ownedTokenAccount.publicKey.toString()}>\n              <div\n                style={{\n                  width: '100%',\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  overflow: 'hidden',\n                }}\n              >\n                <div>{`${ownedTokenAccount.publicKey}`}</div>\n                {decimals && (\n                  <div style={{ float: 'right', color: '#ccc' }}>{`${toDisplay(\n                    ownedTokenAccount.account.amount,\n                    decimals ?? 0,\n                  )}`}</div>\n                )}\n              </div>\n            </MenuItem>\n          );\n        })\n      )}\n    </Select>\n  );\n}\n","import MAINNET_TOKENS from './mainnet-beta.json';\nimport DEVNET_TOKENS from './devnet.json';\nimport TESTNET_TOKENS from './testnet.json';\n\nexport const TOKENS = {\n  mainnet: MAINNET_TOKENS,\n  devnet: DEVNET_TOKENS,\n  testnet: TESTNET_TOKENS,\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { TOKENS } from '@project-serum/tokens';\nimport { PublicKey } from '@solana/web3.js';\nimport { State as StoreState, ProgramAccount } from '../../store/reducer';\nimport { Network } from '../../store/config';\nimport * as bootstrap from './BootstrapProvider';\nimport { useWallet } from './WalletProvider';\n\nexport function activeRegistrar(\n  state: StoreState,\n): { label: string; programAccount: any } {\n  const registrars = Object.keys(state.common.network.registrars)\n    .map(registrar => {\n      let entry: [string, ProgramAccount] = [\n        registrar,\n        {\n          publicKey: state.common.network.registrars[registrar],\n          account:\n            state.accounts[\n              state.common.network.registrars[registrar].toString()\n            ],\n        },\n      ];\n      return entry;\n    })\n    .filter(r => r[1].account !== undefined);\n  const selectedRegistrar: any = registrars\n    .filter(([r, acc]) => acc.publicKey.equals(state.registry.registrar))\n    .map(([r, acc]) => {\n      return {\n        label: r,\n        programAccount: acc,\n      };\n    })\n    .pop();\n\n  return selectedRegistrar;\n}\n\nexport default function RegistrarSelect() {\n  const { registryClient } = useWallet();\n  const { registrars, selectedRegistrar, accounts, network } = useSelector(\n    (state: StoreState) => {\n      const registrars = Object.keys(state.common.network.registrars)\n        .map(registrar => {\n          let entry: [string, ProgramAccount] = [\n            registrar,\n            {\n              publicKey: state.common.network.registrars[registrar],\n              account:\n                state.accounts[\n                  state.common.network.registrars[registrar].toString()\n                ],\n            },\n          ];\n          return entry;\n        })\n        .filter(r => r[1].account !== undefined);\n      const selectedRegistrar: any = registrars\n        .filter(([r, acc]) => acc.publicKey.equals(state.registry.registrar))\n        .map(([r, acc]) => {\n          return {\n            label: r,\n            programAccount: acc,\n          };\n        })\n        .pop();\n      return {\n        network: state.common.network,\n        accounts: state.accounts,\n        registrars,\n        selectedRegistrar,\n      };\n    },\n  );\n  const dispatch = useDispatch();\n  return (\n    <Select\n      style={{ width: '294px', height: '36px' }}\n      variant={'outlined'}\n      fullWidth\n      value={selectedRegistrar.label}\n      onChange={async e => {\n        const registrar: ProgramAccount = registrars\n          .filter(([r, acc]) => r === e.target.value)\n          .map(([r, acc]) => acc)\n          .pop()!;\n\n        bootstrap.registrarSwitch(\n          registryClient,\n          accounts,\n          dispatch,\n          registrar!.publicKey, // New.\n          selectedRegistrar.programAccount.publicKey, // Old.\n        );\n      }}\n    >\n      {registrars.length === 0 ? (\n        <MenuItem value={'_loading'}>Loading registrars...</MenuItem>\n      ) : (\n        registrars.map(([label, registrar]) => {\n          return (\n            <MenuItem key={label} value={label}>\n              <div style={{ display: 'flex' }}>\n                <div\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    justifyContent: 'center',\n                  }}\n                >\n                  {getImage(registrar.account.mint)}\n                </div>\n                <div\n                  style={{\n                    overflow: 'hidden',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    justifyContent: 'center',\n                  }}\n                >\n                  {`${registrarToDisplayLabel(registrar, network)}`}\n                </div>\n              </div>\n            </MenuItem>\n          );\n        })\n      )}\n    </Select>\n  );\n}\n\nfunction registrarToDisplayLabel(\n  registrar: ProgramAccount,\n  network: Network,\n): string {\n  const entry = Object.keys(network.registrars)\n    .filter(r => network.registrars[r].equals(registrar.publicKey))\n    .pop();\n  if (entry !== undefined) {\n    return entry.toUpperCase();\n  }\n  return registrar.publicKey.toString();\n}\n\nexport function getImage(mint: PublicKey, style?: any) {\n  let token = TOKENS.mainnet.filter(t => t.mintAddress === mint.toString());\n  if (token.length === 1 && token[0].icon) {\n    return (\n      <img\n        alt=\"Token Icon\"\n        style={style ?? { marginRight: '10px', height: '25px' }}\n        src={token[0].icon}\n      />\n    );\n  } else {\n    return <div style={{ marginLeft: '32px' }}></div>;\n  }\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { State as StoreState } from '../store/reducer';\nimport { toDisplay, toDisplayLabel } from '../utils/tokens';\n\nexport default function Me() {\n  const { member } = useSelector((state: StoreState) => {\n    return {\n      member: state.registry.member,\n    };\n  });\n\n  return (\n    <div style={{ display: 'flex', width: '100%' }}>\n      <div style={{ flex: 1, marginTop: '24px', marginBottom: '24px' }}>\n        {member && <MemberBalancesCard />}\n      </div>\n    </div>\n  );\n}\n\n// Assumes a member and all vaults is available in the store.\nfunction MemberBalancesCard() {\n  const {\n    mint,\n    registrar,\n    vault,\n    vaultStake,\n    vaultPw,\n    spt,\n    lockedVault,\n    lockedVaultStake,\n    lockedVaultPw,\n    lockedSpt,\n  } = useSelector((state: StoreState) => {\n    const member = state.accounts[state.registry.member!.toString()];\n    const registrar = state.accounts[state.registry.registrar.toString()];\n    return {\n      registrar,\n      mint: state.accounts[registrar.mint.toString()],\n      vault: state.accounts[member.balances.vault],\n      vaultStake: state.accounts[member.balances.vaultStake],\n      vaultPw: state.accounts[member.balances.vaultPw],\n      spt: state.accounts[member.balances.spt],\n      lockedVault: state.accounts[member.balancesLocked.vault],\n      lockedVaultStake: state.accounts[member.balancesLocked.vaultStake],\n      lockedVaultPw: state.accounts[member.balancesLocked.vaultPw],\n      lockedSpt: state.accounts[member.balancesLocked.spt],\n    };\n  });\n  const tables = [\n    {\n      title: 'Main Balances',\n      description: 'Balances deposited directly from the connected wallet.',\n      rows: [\n        {\n          token: toDisplayLabel(registrar.mint),\n          balance: toDisplay(vault.amount, mint.decimals),\n          stake: toDisplay(vaultStake.amount, mint.decimals),\n          pending: toDisplay(vaultPw.amount, mint.decimals),\n          spt: toDisplay(spt.amount, 0),\n        },\n      ],\n    },\n    {\n      title: 'Locked Balances',\n      description:\n        'Balances deposited from the lockup program. These funds are isolated from the Main Balances and may only be withdrawn back to the lockup program. At all times they are program controlled.',\n      rows: [\n        {\n          token: toDisplayLabel(registrar.mint),\n          balance: toDisplay(lockedVault.amount, mint.decimals),\n          stake: toDisplay(lockedVaultStake.amount, mint.decimals),\n          pending: toDisplay(lockedVaultPw.amount, mint.decimals),\n          spt: toDisplay(lockedSpt.amount, 0),\n        },\n      ],\n    },\n  ];\n  return (\n    <Card\n      style={{\n        marginBottom: '24px',\n      }}\n    >\n      <CardContent\n        style={{\n          marginTop: '24px',\n          position: 'relative',\n          paddingTop: 0,\n          paddingBottom: '16px',\n        }}\n      >\n        {tables.map(t => (\n          <BalanceTable\n            key={t.title}\n            title={t.title}\n            description={t.description}\n            rows={t.rows}\n          />\n        ))}\n      </CardContent>\n    </Card>\n  );\n}\n\ntype BalanceTableProps = {\n  title: string;\n  description: string;\n  rows:\n    | null\n    | {\n        token: string;\n        balance: string;\n        stake: string;\n        pending: string;\n        spt: string;\n      }[];\n};\n\nfunction BalanceTable(props: BalanceTableProps) {\n  const { title, rows, description } = props;\n  return (\n    <div style={{ marginBottom: '16px' }}>\n      <Typography style={{ fontWeight: 'bold' }}>{title}</Typography>\n      <Typography color=\"textSecondary\" style={{ fontSize: '14px' }}>\n        {description}\n      </Typography>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Token</TableCell>\n              <TableCell align=\"right\">Available</TableCell>\n              <TableCell align=\"right\">Pending</TableCell>\n              <TableCell align=\"right\">Staked</TableCell>\n              <TableCell align=\"right\">Pool</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows === null ? (\n              <CircularProgress />\n            ) : (\n              rows.map(row => (\n                <TableRow key={row.token}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.token}\n                  </TableCell>\n                  <TableCell align=\"right\">{row.balance}</TableCell>\n                  <TableCell align=\"right\">{row.pending}</TableCell>\n                  <TableCell align=\"right\">{row.stake}</TableCell>\n                  <TableCell align=\"right\">{row.spt}</TableCell>\n                </TableRow>\n              ))\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n","import { PublicKey, SYSVAR_CLOCK_PUBKEY } from '@solana/web3.js';\nimport * as anchor from '@project-serum/anchor';\nimport { simulateTransaction } from '@project-serum/common';\n\nexport async function vestingSigner(\n  programId: PublicKey,\n  vesting: PublicKey,\n): Promise<{ publicKey: PublicKey; nonce: number }> {\n  const [publicKey, nonce] = await anchor.web3.PublicKey.findProgramAddress(\n    [vesting.toBuffer()],\n    programId,\n  );\n  return {\n    publicKey,\n    nonce,\n  };\n}\n\n// Simulates the `availableForWithdrawal` instruction to funnel out a the\n// emitted log data (as a hack to get a return value).\nexport async function availableForWithdrawal(\n  lockupClient: anchor.Program,\n  vesting: PublicKey,\n): Promise<anchor.BN> {\n  let tx = lockupClient.transaction.availableForWithdrawal({\n    accounts: {\n      vesting,\n      clock: SYSVAR_CLOCK_PUBKEY,\n    },\n  });\n  tx.setSigners(...[lockupClient.provider.wallet.publicKey]);\n  let resp = await simulateTransaction(\n    lockupClient.provider.connection,\n    tx,\n    'recent',\n  );\n  if (resp.value.err) {\n    throw new Error(`RPC error: ${resp.value.err.toString()}`);\n  }\n  let log = resp.value.logs![1].slice('Program log: '.length);\n  return new anchor.BN(JSON.parse(log).result);\n}\n","import React, { useState } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport LockIcon from '@material-ui/icons/Lock';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { toDisplay } from '../../utils/tokens';\nimport { ProgramAccount } from '../../store/reducer';\nimport { Network } from '../../store/config';\n\ntype RewardsListProps = {\n  rewards: (RewardListItemViewModel | null)[];\n};\n\nexport default function RewardsList(props: RewardsListProps) {\n  const { rewards } = props;\n  return (\n    <List>\n      {rewards.length > 0 ? (\n        rewards.map(r =>\n          r === null ? (\n            <CircularProgress\n              style={{\n                display: 'block',\n                marginLeft: 'auto',\n                marginRight: 'auto',\n              }}\n            />\n          ) : (\n            <RewardListItem rli={r} />\n          ),\n        )\n      ) : (\n        <ListItem>\n          <ListItemText primary={'No rewards found'} />\n        </ListItem>\n      )}\n    </List>\n  );\n}\n\ntype RewardListItemProps = {\n  rli: RewardListItemViewModel;\n};\n\nfunction RewardListItem(props: RewardListItemProps) {\n  const { rli } = props;\n\n  const [open, setOpen] = useState(false);\n\n  const dateLabel = new Date(\n    rli.vendor!.account.startTs.toNumber() * 1000,\n  ).toLocaleString();\n  let fromLabel = `Dropped by ${rli.vendor.account.from.toString()} | ${dateLabel}`;\n  return (\n    <>\n      <ListItem button onClick={() => setOpen(open => !open)}>\n        <LockIcon\n          style={{\n            visibility: rli.reward.locked ? 'visible' : 'hidden',\n            marginRight: '16px',\n          }}\n        />\n        <ListItemText\n          primary={\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                color: rli.needsClaim ? '#54a15e' : '',\n              }}\n            >\n              <div>{`${toDisplay(\n                rli.vendor.account.total,\n                rli.mint!.account.decimals,\n              )} ${rli.mint!.publicKey}`}</div>\n            </div>\n          }\n          secondary={fromLabel}\n        />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        {rli.vendor === undefined ? (\n          <CircularProgress />\n        ) : (\n          <RewardListItemDetails vendor={rli.vendor!} />\n        )}\n      </Collapse>\n    </>\n  );\n}\n\ntype RewardListItemDetailsProps = {\n  vendor: ProgramAccount;\n};\n\nfunction RewardListItemDetails(props: RewardListItemDetailsProps) {\n  let { vendor } = props;\n\n  return (\n    <div\n      style={{\n        marginLeft: '56px',\n      }}\n    >\n      <div>Vendor</div>\n      <ul>\n        <li>Address {vendor.publicKey.toString()}</li>\n        <li>Vault: {vendor.account.vault.toString()}</li>\n        <li>Mint: {vendor.account.mint.toString()}</li>\n        <li>\n          Pool token supply snapshot:{' '}\n          {vendor.account.poolTokenSupply.toString()}\n        </li>\n        <li>\n          Expiry:{' '}\n          {new Date(\n            vendor.account.expiryTs.toNumber() * 1000,\n          ).toLocaleDateString()}\n        </li>\n        <li>Expiry receiver: {vendor.account.expiryReceiver.toString()}</li>\n        <li>Expired: {vendor.account.expired.toString()}</li>\n        <li>\n          Reward queue cursor: {vendor.account.rewardEventQCursor.toString()}\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport class RewardListItemViewModel {\n  constructor(\n    readonly reward: any,\n    readonly cursor: number,\n    readonly needsClaim: boolean,\n    readonly mint: ProgramAccount,\n    readonly vendor: ProgramAccount,\n  ) {}\n\n  static fromMessage(\n    ctx: Context,\n    event: any,\n    idx: number,\n  ): RewardListItemViewModel | null {\n    let cursor = ctx.rewardEventQueue!.account.tail + idx;\n    let needsClaim = false;\n\n    const vendor = ctx.accounts[event.vendor.toString()];\n\n    if (vendor === undefined) {\n      return null;\n    }\n\n    const mint = {\n      publicKey: vendor.mint,\n      account: ctx.accounts[vendor.mint.toString()],\n    };\n\n    if (ctx.member !== undefined) {\n      // Must own shares of the reward's target pool.\n      const sptAccount =\n        ctx.accounts[ctx.member.account.balances.spt.toString()];\n      const lockedSptAccount =\n        ctx.accounts[ctx.member.account.balancesLocked.spt.toString()];\n\n      const ownsPoolShares = sptAccount.amount + lockedSptAccount.amount > 0;\n\n      // Must not have claimed the reward yet.\n      const notYetClaimed = cursor >= ctx.member.account.rewardsCursor;\n\n      // Must have staked before the reward was dropped.\n      const isEligible = ctx.member.account.lastStakeTs < vendor.startTs;\n\n      // Must not have let the reward expire.\n      const expired = vendor.expired;\n\n      needsClaim = ownsPoolShares && notYetClaimed && isEligible && !expired;\n    }\n\n    const vendorProgramAccount = {\n      publicKey: event.vendor,\n      account: vendor,\n    };\n\n    return new RewardListItemViewModel(\n      event,\n      cursor,\n      needsClaim,\n      mint,\n      vendorProgramAccount,\n    );\n  }\n}\n\ntype Context = {\n  accounts: any;\n  rewardEventQueue: ProgramAccount;\n  member?: ProgramAccount;\n  network: Network;\n};\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport BN from 'bn.js';\nimport { useSnackbar } from 'notistack';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Tabs from '@material-ui/core/Tabs';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport * as serumCmn from '@project-serum/common';\nimport { TokenInstructions } from '@project-serum/serum';\nimport {\n  Account,\n  PublicKey,\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n} from '@solana/web3.js';\nimport { useWallet } from '../../components/common/WalletProvider';\nimport { State as StoreState } from '../../store/reducer';\nimport OwnedTokenAccountsSelect from '../common/OwnedTokenAccountsSelect';\nimport * as notification from '../common/Notification';\nimport { fromDisplay } from '../../utils/tokens';\nimport { Network } from '../../store/config';\nimport { activeRegistrar } from '../common/RegistrarSelect';\n\nexport default function DropRewardButton() {\n  const [showDialog, setShowDialog] = useState(false);\n  return (\n    <>\n      <div onClick={() => setShowDialog(true)}>\n        <Button variant=\"contained\" color=\"secondary\">\n          Drop Rewards\n        </Button>\n      </div>\n      <DropRewardDialog\n        open={showDialog}\n        onClose={() => setShowDialog(false)}\n      />\n    </>\n  );\n}\n\nenum RewardTypeViewModel {\n  Unlocked,\n  Locked,\n}\n\ntype DropRewardsDialogProps = {\n  open: boolean;\n  onClose: () => void;\n};\n\nfunction DropRewardDialog(props: DropRewardsDialogProps) {\n  const { open, onClose } = props;\n  const { selectedRegistrar } = useSelector((state: StoreState) => {\n    return {\n      selectedRegistrar: activeRegistrar(state),\n    };\n  });\n  const [rewardTypeTab, setRewardTypeTab] = useState(\n    RewardTypeViewModel.Unlocked,\n  );\n\n  return (\n    <Dialog open={open} onClose={onClose} fullWidth maxWidth=\"md\">\n      <DialogTitle>\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <Typography variant=\"h4\" component=\"h2\">\n            {`Drop Rewards on ${selectedRegistrar.label.toUpperCase()} Stakers`}\n          </Typography>\n        </div>\n      </DialogTitle>\n      <DialogContent>\n        <Tabs value={rewardTypeTab} onChange={(_e, t) => setRewardTypeTab(t)}>\n          <Tab value={RewardTypeViewModel.Unlocked} label=\"Unlocked\" />\n          <Tab value={RewardTypeViewModel.Locked} label=\"Locked\" />\n        </Tabs>\n        {rewardTypeTab === RewardTypeViewModel.Unlocked && (\n          <DropUnlockedForm onClose={onClose} />\n        )}\n        {rewardTypeTab === RewardTypeViewModel.Locked && (\n          <DropLockedForm onClose={onClose} />\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}\n\ntype DropUnlockedFormProps = {\n  onClose: () => void;\n};\n\nfunction DropUnlockedForm(props: DropUnlockedFormProps) {\n  const { onClose } = props;\n  const snack = useSnackbar();\n  const { registryClient } = useWallet();\n  const { network, registrar, accounts } = useSelector((state: StoreState) => {\n    return {\n      network: state.common.network,\n      registrar: {\n        publicKey: state.registry.registrar,\n        account: state.accounts[state.registry.registrar.toString()],\n      },\n      accounts: state.accounts,\n    };\n  });\n\n  const [rewardDisplayAmount, setRewardDisplayAmount] = useState<null | number>(\n    null,\n  );\n  const [expiryTs, setExpiryTs] = useState<null | number>(null);\n  const [depositor, setDepositor] = useState<null | PublicKey>(null);\n  const [mint, setMint] = useState<null | string>(null);\n\n  const isSendEnabled =\n    mint !== null &&\n    depositor !== null &&\n    rewardDisplayAmount !== null &&\n    expiryTs !== null;\n\n  const sendUnlockedReward = async () => {\n    await notification.withTx(\n      snack,\n      'Dropping unlocked reward...',\n      'Unlocked reward dropped',\n      async () => {\n        let mintAccount = accounts[network.mints[mint!].toString()];\n        if (!mintAccount) {\n          mintAccount = await serumCmn.getMintInfo(\n            registryClient.provider,\n            network.mints[mint!],\n          );\n        }\n\n        const lockedRewardAmount = fromDisplay(\n          rewardDisplayAmount!,\n          mintAccount.decimals,\n        );\n        const rewardKind = { unlocked: {} };\n        const vendor = new Account();\n        const vendorVault = new Account();\n        const [vendorSigner, nonce] = await PublicKey.findProgramAddress(\n          [registrar.publicKey.toBuffer(), vendor.publicKey.toBuffer()],\n          registryClient.programId,\n        );\n        return await registryClient.rpc.dropReward(\n          rewardKind,\n          lockedRewardAmount,\n          new BN(expiryTs!),\n          registryClient.provider.wallet.publicKey,\n          nonce,\n          {\n            accounts: {\n              registrar: registrar.publicKey,\n              rewardEventQ: registrar.account.rewardEventQ,\n              poolMint: registrar.account.poolMint,\n              vendor: vendor.publicKey,\n              vendorVault: vendorVault.publicKey,\n              depositor,\n              depositorAuthority: registryClient.provider.wallet.publicKey,\n              tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n              clock: SYSVAR_CLOCK_PUBKEY,\n              rent: SYSVAR_RENT_PUBKEY,\n            },\n            signers: [vendorVault, vendor],\n            instructions: [\n              ...(await serumCmn.createTokenAccountInstrs(\n                registryClient.provider,\n                vendorVault.publicKey,\n                network.mints[mint!],\n                vendorSigner,\n              )),\n              await registryClient.account.rewardVendor.createInstruction(\n                vendor,\n              ),\n            ],\n          },\n        );\n      },\n    );\n    onClose();\n  };\n  const onClick = () => {\n    sendUnlockedReward().catch(err => {\n      console.error(err);\n      snack.enqueueSnackbar(\n        `Error dropping unlocked reward: ${err.toString()}`,\n        {\n          variant: 'error',\n        },\n      );\n    });\n  };\n  return (\n    <DropVendorForm\n      network={network}\n      mint={mint}\n      setMint={setMint}\n      setDepositor={setDepositor}\n      setRewardDisplayAmount={setRewardDisplayAmount}\n      expiryTs={expiryTs}\n      setExpiryTs={setExpiryTs}\n      onCancel={onClose}\n      onClick={onClick}\n      isSendEnabled={isSendEnabled}\n    />\n  );\n}\n\ntype DropLockedFormProps = DropUnlockedFormProps;\n\nfunction DropLockedForm(props: DropLockedFormProps) {\n  const { onClose } = props;\n  const snack = useSnackbar();\n  const { registryClient } = useWallet();\n  const { network, registrar, accounts } = useSelector((state: StoreState) => {\n    return {\n      network: state.common.network,\n      registrar: {\n        publicKey: state.registry.registrar,\n        account: state.accounts[state.registry.registrar.toString()],\n      },\n      accounts: state.accounts,\n    };\n  });\n\n  const [rewardDisplayAmount, setRewardDisplayAmount] = useState<null | number>(\n    null,\n  );\n  const [startTs, setStartTs] = useState<null | number>(null);\n  const [endTs, setEndTs] = useState<null | number>(null);\n  const [expiryTs, setExpiryTs] = useState<null | number>(null);\n  const [depositor, setDepositor] = useState<null | PublicKey>(null);\n  const [mint, setMint] = useState<null | string>(null);\n  const [periodCount, setPeriodCount] = useState(7);\n\n  const isSendEnabled =\n    startTs !== null &&\n    endTs !== null &&\n    mint !== null &&\n    depositor !== null &&\n    rewardDisplayAmount !== null &&\n    expiryTs !== null;\n\n  const sendLockedRewards = async () => {\n    await notification.withTx(\n      snack,\n      'Dropping locked reward...',\n      'Locked reward dropped',\n      async () => {\n        const rewardKind = {\n          locked: {\n            startTs: new BN(startTs!),\n            endTs: new BN(endTs!),\n            periodCount: new BN(periodCount),\n          },\n        };\n        const vendor = new Account();\n        const vendorVault = new Account();\n        const [vendorSigner, nonce] = await PublicKey.findProgramAddress(\n          [registrar.publicKey.toBuffer(), vendor.publicKey.toBuffer()],\n          registryClient.programId,\n        );\n        let mintAccount = accounts[network.mints[mint!].toString()];\n        const rewardAmount = fromDisplay(\n          rewardDisplayAmount!,\n          mintAccount.decimals,\n        );\n        return await registryClient.rpc.dropReward(\n          rewardKind,\n          rewardAmount,\n          new BN(expiryTs!),\n          registryClient.provider.wallet.publicKey,\n          nonce,\n          {\n            accounts: {\n              registrar: registrar.publicKey,\n              rewardEventQ: registrar.account.rewardEventQ,\n              poolMint: registrar.account.poolMint,\n              vendor: vendor.publicKey,\n              vendorVault: vendorVault.publicKey,\n              depositor,\n              depositorAuthority: registryClient.provider.wallet.publicKey,\n              tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n              clock: SYSVAR_CLOCK_PUBKEY,\n              rent: SYSVAR_RENT_PUBKEY,\n            },\n            signers: [vendorVault, vendor],\n            instructions: [\n              ...(await serumCmn.createTokenAccountInstrs(\n                registryClient.provider,\n                vendorVault.publicKey,\n                network.mints[mint!],\n                vendorSigner,\n              )),\n              await registryClient.account.rewardVendor.createInstruction(\n                vendor,\n              ),\n            ],\n          },\n        );\n      },\n    );\n    onClose();\n  };\n\n  const onClick = () => {\n    sendLockedRewards().catch(err => {\n      snack.enqueueSnackbar(`Error dropping locked reward: ${err.toString()}`, {\n        variant: 'error',\n      });\n    });\n  };\n\n  return (\n    <DropVendorForm\n      network={network}\n      mint={mint}\n      setMint={setMint}\n      setDepositor={setDepositor}\n      setRewardDisplayAmount={setRewardDisplayAmount}\n      setStartTs={setStartTs}\n      setEndTs={setEndTs}\n      periodCount={periodCount}\n      setPeriodCount={setPeriodCount}\n      expiryTs={expiryTs}\n      setExpiryTs={setExpiryTs}\n      onCancel={onClose}\n      onClick={onClick}\n      isSendEnabled={isSendEnabled}\n    />\n  );\n}\n\ntype DropVendorFormProps = {\n  network: Network;\n  mint: string | null;\n  setMint: (mintLabel: string) => void;\n  setDepositor: (pk: PublicKey) => void;\n  setRewardDisplayAmount: (n: number) => void;\n  setStartTs?: (n: number) => void;\n  setEndTs?: (n: number) => void;\n  periodCount?: number;\n  setPeriodCount?: (p: number) => void;\n  expiryTs: number | null;\n  setExpiryTs: (ts: number) => void;\n  onCancel: () => void;\n  onClick: () => void;\n  isSendEnabled: boolean;\n};\n\nfunction DropVendorForm(props: DropVendorFormProps) {\n  const {\n    network,\n    mint,\n    setDepositor,\n    setMint,\n    setRewardDisplayAmount,\n    setStartTs,\n    setEndTs,\n    periodCount,\n    setPeriodCount,\n    expiryTs,\n    setExpiryTs,\n    onCancel,\n    onClick,\n    isSendEnabled,\n  } = props;\n  const mintOptions: { label: string; publicKey: PublicKey }[] = Object.keys(\n    network.mints,\n  ).map(label => {\n    return {\n      label,\n      publicKey: network.mints[label],\n    };\n  });\n\n  return (\n    <>\n      <div>\n        <div style={{ display: 'flex', marginTop: '10px' }}>\n          <div style={{ flex: 1 }}>\n            <OwnedTokenAccountsSelect\n              style={{ height: '100%' }}\n              mint={mint === null ? undefined : network.mints[mint]}\n              onChange={(f: PublicKey) => setDepositor(f)}\n            />\n            <FormHelperText>Account to send from</FormHelperText>\n          </div>\n          <div>\n            <FormControl\n              variant=\"outlined\"\n              style={{ width: '200px', marginLeft: '10px', marginTop: '10px' }}\n            >\n              <InputLabel>Mint</InputLabel>\n              <Select\n                value={mint}\n                onChange={e => setMint(e.target.value as string)}\n                label=\"Mint\"\n              >\n                {mintOptions.map(m => (\n                  <MenuItem value={m.label}>{m.label.toUpperCase()}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n          <div>\n            <TextField\n              style={{ marginLeft: '10px', marginTop: '10px' }}\n              id=\"outlined-number\"\n              label=\"Amount\"\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              variant=\"outlined\"\n              onChange={e =>\n                setRewardDisplayAmount(parseFloat(e.target.value) as number)\n              }\n              InputProps={{ inputProps: { min: 0 } }}\n            />\n          </div>\n        </div>\n        {setEndTs !== undefined && setStartTs !== undefined && (\n          <>\n            <div style={{ display: 'flex', marginTop: '37px' }}>\n              <div style={{ flex: 1 }}>\n                <TextField\n                  fullWidth\n                  label=\"Start date\"\n                  type=\"datetime-local\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  onChange={e => {\n                    const d = new Date(e.target.value);\n                    setStartTs(d.getTime() / 1000);\n                  }}\n                />\n                <FormHelperText>Date vesting begins</FormHelperText>\n              </div>\n            </div>\n            <div style={{ flex: 1, marginTop: '20px' }}>\n              <TextField\n                fullWidth\n                label=\"End date\"\n                type=\"datetime-local\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange={e => {\n                  const d = new Date(e.target.value);\n                  setEndTs(d.getTime() / 1000);\n                }}\n              />\n              <FormHelperText>\n                Date the vesting account is fully vested\n              </FormHelperText>\n            </div>\n            <div>\n              <FormControl fullWidth>\n                <TextField\n                  style={{ marginTop: '37px' }}\n                  id=\"outlined-number\"\n                  label=\"Period Count\"\n                  type=\"number\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  variant=\"outlined\"\n                  value={periodCount}\n                  onChange={e =>\n                    setPeriodCount!(parseInt(e.target.value) as number)\n                  }\n                  InputProps={{ inputProps: { min: 1 } }}\n                />\n              </FormControl>\n            </div>\n          </>\n        )}\n        <div style={{ marginTop: '37px', display: 'flex' }}>\n          <div\n            style={{\n              flex: 1,\n              height: '100%',\n              marginRight: '10px',\n            }}\n          >\n            <TextField\n              fullWidth\n              label=\"Expiry date\"\n              type=\"datetime-local\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={e => {\n                const d = new Date(e.target.value);\n                setExpiryTs(d.getTime() / 1000);\n              }}\n            />\n            <FormHelperText>\n              Date after which the account owner dropping rewards can withdraw\n              all unclaimed rewards.\n            </FormHelperText>\n          </div>\n          <div style={{ marginTop: '26px' }}>\n            <TextField\n              style={{ height: '100%' }}\n              disabled\n              placeholder=\"Expiry Unix timestamp\"\n              fullWidth\n              value={expiryTs}\n            />\n          </div>\n        </div>\n      </div>\n      <DialogActions>\n        <Button onClick={onCancel}>Cancel</Button>\n        <Button\n          onClick={onClick}\n          type=\"submit\"\n          color=\"primary\"\n          disabled={!isSendEnabled}\n        >\n          Send\n        </Button>\n      </DialogActions>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport BN from 'bn.js';\nimport styled from 'styled-components';\nimport LockIcon from '@material-ui/icons/Lock';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { TransitionProps } from '@material-ui/core/transitions';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport Slide from '@material-ui/core/Slide';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport { SYSVAR_RENT_PUBKEY, PublicKey, SystemProgram } from '@solana/web3.js';\nimport { TokenInstructions } from '@project-serum/serum';\nimport { getTokenAccount } from '@project-serum/common';\nimport { useWallet } from '../../components/common/WalletProvider';\nimport OwnedTokenAccountsSelect from '../../components/common/OwnedTokenAccountsSelect';\nimport { ViewTransactionOnExplorerButton } from '../../components/common/Notification';\nimport RegistrarSelect from './RegistrarSelect';\nimport { State as StoreState, ProgramAccount } from '../../store/reducer';\nimport { ActionType } from '../../store/actions';\nimport * as bootstrap from './BootstrapProvider';\nimport Me from '../Me';\nimport {\n  memberSigner,\n  memberSeed,\n  createBalanceSandbox,\n} from '../../utils/registry';\nimport { vestingSigner } from '../../utils/lockup';\nimport Stake from '../Stake';\nimport Rewards from '../rewards/Rewards';\nimport VestingAccountsSelect from './VestingAccountsSelect';\nimport { toDisplayLabel, fromDisplay } from '../../utils/tokens';\n\nenum TabModel {\n  Me,\n  Stake,\n  Rewards,\n  Lockup,\n}\n\nexport default function MyNode() {\n  const [tab, setTab] = useState(TabModel.Me);\n  return (\n    <div>\n      <MyNodeBanner setTab={setTab} />\n      <Container fixed maxWidth=\"md\" style={{ flex: 1, display: 'flex' }}>\n        {tab === TabModel.Me && <Me />}\n        {tab === TabModel.Stake && <Stake />}\n        {tab === TabModel.Rewards && <Rewards />}\n      </Container>\n    </div>\n  );\n}\n\ntype MyNodeBannerProps = {\n  setTab: (t: TabModel) => void;\n};\n\nfunction MyNodeBanner(props: MyNodeBannerProps) {\n  const [tab, setTab] = useState(TabModel.Me);\n  const { member, registrar, registrarAccount } = useSelector(\n    (state: StoreState) => {\n      return {\n        member: state.registry.member,\n        registrar: state.registry.registrar,\n        registrarAccount: state.accounts[state.registry.registrar.toString()],\n      };\n    },\n  );\n  const [showDepositDialog, setShowDepositDialog] = useState(false);\n  const [showWithdrawDialog, setShowWithdrawDialog] = useState(false);\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const { wallet, registryClient } = useWallet();\n  const dispatch = useDispatch();\n\n  const createStakeAccount = async () => {\n    enqueueSnackbar('Creating stake account', {\n      variant: 'info',\n    });\n    const seed = await memberSeed(registrar);\n    const member = await PublicKey.createWithSeed(\n      wallet.publicKey,\n      seed,\n      registryClient.programId,\n    );\n    const { publicKey, nonce } = await memberSigner(\n      registryClient.programId,\n      registrar,\n      member,\n    );\n    const memberSignerPublicKey = publicKey;\n\n    const [mainTx, balances] = await createBalanceSandbox(\n      registryClient.provider,\n      registrarAccount,\n      memberSignerPublicKey,\n    );\n    const [lockedTx, balancesLocked] = await createBalanceSandbox(\n      registryClient.provider,\n      registrarAccount,\n      memberSignerPublicKey,\n    );\n    const tx = registryClient.transaction.createMember(nonce, {\n      accounts: {\n        registrar: registrar,\n        member: member,\n        beneficiary: wallet.publicKey,\n        memberSigner: memberSignerPublicKey,\n        balances,\n        balancesLocked,\n        tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n        rent: SYSVAR_RENT_PUBKEY,\n      },\n      instructions: [\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: wallet.publicKey,\n          newAccountPubkey: member,\n          basePubkey: wallet.publicKey,\n          seed,\n          lamports: await registryClient.provider.connection.getMinimumBalanceForRentExemption(\n            registryClient.account.member.size,\n          ),\n          space: registryClient.account.member.size,\n          programId: registryClient.programId,\n        }),\n      ],\n    });\n    const signers: Account[] = [];\n    const allTxs = [mainTx, lockedTx, { tx, signers }];\n    // @ts-ignore\n    let txSigs = await registryClient.provider.sendAll(allTxs);\n    console.log('Accounts created with transactions:', txSigs);\n\n    const memberAccount = await registryClient.account.member(member);\n    const memberProgramAccount = {\n      publicKey: member,\n      account: memberAccount,\n    };\n    // Add the new member to the store.\n    dispatch({\n      type: ActionType.AccountAdd,\n      item: {\n        account: memberProgramAccount,\n      },\n    });\n\n    // Populate the store with all of the member's accounts.\n    await bootstrap.fetchAndDispatchMemberAccounts(\n      memberProgramAccount,\n      dispatch,\n      registryClient.provider.connection,\n    );\n\n    // Subscribe to any updates to the member.\n    bootstrap.subscribeMember(memberProgramAccount, registryClient, dispatch);\n\n    // Tell the UI that our member is ready.\n    dispatch({\n      type: ActionType.RegistrySetMember,\n      item: {\n        member,\n      },\n    });\n\n    closeSnackbar();\n    enqueueSnackbar(`Stake account created ${member.toString()}`, {\n      variant: 'success',\n    });\n  };\n\n  const HoverSpan = styled.span`\n    :hover {\n      cursor: pointer;\n    }\n  `;\n\n  return (\n    <>\n      <div\n        style={{\n          backgroundColor: '#fff',\n          paddingTop: '24px',\n          borderBottom: 'solid 1pt #ccc',\n        }}\n      >\n        <Container\n          fixed\n          maxWidth=\"md\"\n          style={{\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-between',\n          }}\n        >\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <div>\n              <Typography variant=\"h4\" style={{ marginBottom: '10px' }}>\n                My Stake\n              </Typography>\n            </div>\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                flexDirection: 'column',\n              }}\n            >\n              <RegistrarSelect />\n            </div>\n          </div>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n            }}\n          >\n            <div>\n              <Typography>\n                {member !== undefined ? (\n                  member.toString()\n                ) : (\n                  <>\n                    Account not found. Please{' '}\n                    <HoverSpan\n                      onClick={() => {\n                        createStakeAccount().catch(err => {\n                          console.error(err);\n                          enqueueSnackbar(\n                            `Error creating stake account: ${err.toString()}`,\n                            {\n                              variant: 'error',\n                            },\n                          );\n                        });\n                      }}\n                      style={{\n                        color: 'black',\n                        fontWeight: 'bold',\n                        textDecoration: 'underline',\n                      }}\n                    >\n                      create\n                    </HoverSpan>{' '}\n                    a stake account.\n                  </>\n                )}\n              </Typography>\n            </div>\n            <div>\n              <div>\n                <Button\n                  disabled={member === undefined}\n                  onClick={() => setShowDepositDialog(true)}\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  style={{ marginRight: '10px' }}\n                >\n                  <ArrowDownwardIcon style={{ fontSize: '20px' }} />\n                  <Typography style={{ marginLeft: '5px', marginRight: '5px' }}>\n                    Deposit\n                  </Typography>\n                </Button>\n                <Button\n                  disabled={member === undefined}\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={() => setShowWithdrawDialog(true)}\n                >\n                  <ArrowUpwardIcon style={{ fontSize: '20px' }} />\n                  <Typography style={{ marginLeft: '5px', marginRight: '5px' }}>\n                    Withdraw\n                  </Typography>\n                </Button>\n              </div>\n            </div>\n          </div>\n        </Container>\n        <div\n          style={{\n            maxWidth: '960px',\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            paddingLeft: '24px',\n            paddingRight: '24px',\n            marginTop: '10px',\n          }}\n        >\n          <Tabs\n            value={tab}\n            onChange={(_e, t) => {\n              setTab(t);\n              props.setTab(t);\n            }}\n          >\n            <Tab value={TabModel.Me} label=\"Me\" />\n            <Tab value={TabModel.Stake} label=\"Stake\" />\n            <Tab value={TabModel.Rewards} label=\"Rewards\" />\n          </Tabs>\n        </div>\n      </div>\n      {member !== undefined && (\n        <>\n          <DepositDialog\n            open={showDepositDialog}\n            onClose={() => setShowDepositDialog(false)}\n          />\n          <WithdrawDialog\n            open={showWithdrawDialog}\n            onClose={() => setShowWithdrawDialog(false)}\n          />\n        </>\n      )}\n    </>\n  );\n}\n\ntype DepositDialogProps = {\n  open: boolean;\n  onClose: () => void;\n};\n\nfunction DepositDialog(props: DepositDialogProps) {\n  const { open, onClose } = props;\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const { registryClient, lockupClient } = useWallet();\n  const dispatch = useDispatch();\n  const {\n    registrar,\n    member,\n    memberAccount,\n    mintAccount,\n    accounts,\n  } = useSelector((state: StoreState) => {\n    let memberAccount = undefined;\n    if (state.registry.member) {\n      memberAccount = state.accounts[state.registry.member.toString()];\n    }\n    const registrarAccount =\n      state.accounts[state.registry.registrar.toString()];\n    const registrar: ProgramAccount = {\n      publicKey: state.registry.registrar,\n      account: registrarAccount,\n    };\n    return {\n      registrar,\n      memberAccount,\n      member: state.registry.member,\n      mintAccount: state.accounts[registrar.account.mint.toString()],\n      accounts: state.accounts,\n    };\n  });\n  return (\n    <TransferDialog\n      deposit={true}\n      title={'Deposit'}\n      contextText={'Select the amount to deposit'}\n      open={open}\n      onClose={onClose}\n      onTransfer={async (\n        from: PublicKey,\n        displayAmount: number,\n        isLocked: boolean,\n      ) => {\n        const amount = fromDisplay(displayAmount, mintAccount.decimals);\n        enqueueSnackbar(\n          `Depositing ${displayAmount} ${toDisplayLabel(\n            registrar.account.mint,\n          )} from ${from.toString()}`,\n          {\n            variant: 'info',\n          },\n        );\n        const tx = await (async () => {\n          if (isLocked) {\n            const relayData = registryClient.coder.instruction.encode(\n              'deposit_locked',\n              {\n                amount,\n              },\n            );\n            const vesting = accounts[from.toString()];\n            const _memberSigner = (\n              await memberSigner(\n                registryClient.programId,\n                registrar.publicKey,\n                member!,\n              )\n            ).publicKey;\n            const _vestingSigner = (\n              await vestingSigner(lockupClient.programId, from)\n            ).publicKey;\n            const relayAccounts = [\n              {\n                pubkey: await registryClient.state.address(),\n                isWritable: false,\n                isSigner: false,\n              },\n              {\n                pubkey: registrar.publicKey,\n                isWritable: false,\n                isSigner: false,\n              },\n              { pubkey: member!, isWritable: false, isSigner: false },\n              {\n                pubkey: registryClient.provider.wallet.publicKey,\n                isWritable: false,\n                isSigner: true,\n              },\n            ];\n            const tx = await lockupClient.rpc.whitelistWithdraw(\n              relayData,\n              amount,\n              {\n                accounts: {\n                  transfer: {\n                    lockup: await lockupClient.state.address(),\n                    beneficiary: registryClient.provider.wallet.publicKey,\n                    whitelistedProgram: registryClient.programId,\n                    vesting: from,\n                    vault: vesting.vault,\n                    vestingSigner: _vestingSigner,\n                    tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n                    whitelistedProgramVault: memberAccount.balancesLocked.vault,\n                    whitelistedProgramVaultAuthority: _memberSigner,\n                  },\n                },\n                remainingAccounts: relayAccounts,\n              },\n            );\n\n            // Update the store with the updated account.\n            const updatedVestingAccount = await lockupClient.account.vesting(\n              from,\n            );\n            dispatch({\n              type: ActionType.LockupUpdateVesting,\n              item: {\n                vesting: {\n                  publicKey: from,\n                  account: updatedVestingAccount,\n                },\n              },\n            });\n\n            return tx;\n          } else {\n            const tx = await registryClient.rpc.deposit(amount, {\n              accounts: {\n                depositor: from,\n                depositorAuthority: registryClient.provider.wallet.publicKey,\n                tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n                vault: memberAccount.balances.vault,\n                beneficiary: registryClient.provider.wallet.publicKey,\n                member: member,\n              },\n            });\n\n            const tokenAccount = await getTokenAccount(\n              registryClient.provider,\n              from,\n            );\n            dispatch({\n              type: ActionType.CommonOwnedTokenAccountsUpdate,\n              item: {\n                account: {\n                  publicKey: from,\n                  account: tokenAccount,\n                },\n              },\n            });\n\n            return tx;\n          }\n        })();\n        closeSnackbar();\n        enqueueSnackbar(`Deposit complete`, {\n          variant: 'success',\n          action: <ViewTransactionOnExplorerButton signature={tx as string} />,\n        });\n        onClose();\n      }}\n    />\n  );\n}\n\ntype WithdrawDialogProps = DepositDialogProps;\n\nfunction WithdrawDialog(props: WithdrawDialogProps) {\n  const { open, onClose } = props;\n  const { registryClient, lockupClient } = useWallet();\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const dispatch = useDispatch();\n  const {\n    registrar,\n    registrarAccount,\n    member,\n    memberAccount,\n    mintAccount,\n    accounts,\n  } = useSelector((state: StoreState) => {\n    let memberAccount = undefined;\n    if (state.registry.member) {\n      memberAccount = state.accounts[state.registry.member.toString()];\n    }\n    const registrarAccount =\n      state.accounts[state.registry.registrar.toString()];\n    return {\n      registrar: state.registry.registrar,\n      registrarAccount,\n      member: state.registry.member,\n      memberAccount,\n      mintAccount: state.accounts[registrarAccount.mint.toString()],\n      accounts: state.accounts,\n    };\n  });\n  return (\n    <TransferDialog\n      title={'Withdraw'}\n      contextText={'Select the amount to withdraw'}\n      open={open}\n      onClose={onClose}\n      onTransfer={async (\n        from: PublicKey,\n        displayAmount: number,\n        isLocked: boolean,\n      ) => {\n        const amount = fromDisplay(displayAmount, mintAccount.decimals);\n        enqueueSnackbar(\n          `Withdrawing ${displayAmount} ${toDisplayLabel(\n            registrarAccount.mint,\n          )} to ${from.toString()}`,\n          {\n            variant: 'info',\n          },\n        );\n        const tx = await (async () => {\n          const _memberSigner = await memberSigner(\n            registryClient.programId,\n            registrar,\n            member!,\n          );\n          if (isLocked) {\n            const relayData = registryClient.coder.instruction.encode(\n              'withdraw_locked',\n              {\n                amount,\n              },\n            );\n            const vesting = accounts[from.toString()];\n            const _memberSigner = (\n              await memberSigner(registryClient.programId, registrar, member!)\n            ).publicKey;\n            const _vestingSigner = (\n              await vestingSigner(lockupClient.programId, from)\n            ).publicKey;\n            const relayAccounts = [\n              {\n                pubkey: await registryClient.state.address(),\n                isWritable: false,\n                isSigner: false,\n              },\n              { pubkey: registrar, isWritable: false, isSigner: false },\n              { pubkey: member!, isWritable: false, isSigner: false },\n              {\n                pubkey: registryClient.provider.wallet.publicKey,\n                isWritable: false,\n                isSigner: true,\n              },\n            ];\n            const tx = await lockupClient.rpc.whitelistDeposit(relayData, {\n              accounts: {\n                transfer: {\n                  lockup: await lockupClient.state.address(),\n                  beneficiary: registryClient.provider.wallet.publicKey,\n                  whitelistedProgram: registryClient.programId,\n                  vesting: from,\n                  vault: vesting.vault,\n                  vestingSigner: _vestingSigner,\n                  tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n                  whitelistedProgramVault: memberAccount.balancesLocked.vault,\n                  whitelistedProgramVaultAuthority: _memberSigner,\n                },\n              },\n              remainingAccounts: relayAccounts,\n            });\n\n            // Update the store with the updated account.\n            const updatedVestingAccount = await lockupClient.account.vesting(\n              from,\n            );\n            dispatch({\n              type: ActionType.LockupUpdateVesting,\n              item: {\n                vesting: {\n                  publicKey: from,\n                  account: updatedVestingAccount,\n                },\n              },\n            });\n\n            return tx;\n          } else {\n            const tx = await registryClient.rpc.withdraw(amount, {\n              accounts: {\n                registrar,\n                member,\n                beneficiary: registryClient.provider.wallet.publicKey,\n                vault: memberAccount.balances.vault,\n                memberSigner: _memberSigner.publicKey,\n                depositor: from,\n                tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n              },\n            });\n\n            const tokenAccount = await getTokenAccount(\n              registryClient.provider,\n              from,\n            );\n            dispatch({\n              type: ActionType.CommonOwnedTokenAccountsUpdate,\n              item: {\n                account: {\n                  publicKey: from,\n                  account: tokenAccount,\n                },\n              },\n            });\n\n            return tx;\n          }\n        })();\n\n        closeSnackbar();\n        enqueueSnackbar(`Withdraw complete`, {\n          variant: 'success',\n          action: <ViewTransactionOnExplorerButton signature={tx as string} />,\n        });\n        onClose();\n      }}\n    />\n  );\n}\n\ntype TransferDialogProps = {\n  title: string;\n  contextText: string;\n  open: boolean;\n  deposit?: boolean;\n  onClose: () => void;\n  onTransfer: (\n    from: PublicKey,\n    amount: number,\n    isLocked: boolean,\n  ) => Promise<void>;\n};\n\nfunction TransferDialog(props: TransferDialogProps) {\n  const { mint, mintAccount } = useSelector((state: StoreState) => {\n    const registrar = state.accounts[state.registry.registrar.toString()];\n    const mint = registrar ? registrar.mint : undefined;\n    return {\n      mint,\n      mintAccount: state.accounts[registrar.mint.toString()],\n    };\n  });\n  const { enqueueSnackbar } = useSnackbar();\n  const { open, onClose, onTransfer, title, contextText, deposit } = props;\n  const [displayAmount, setDisplayAmount] = useState<null | number>(null);\n  const [from, setFrom] = useState<null | PublicKey>(null);\n  const [vesting, setVesting] = useState<null | PublicKey>(null);\n  const [maxDisplayAmount, setMaxDisplayAmount] = useState<null | number>(null);\n  const [isLocked, setIsLocked] = useState(false);\n  const submitBtnDisabled =\n    (isLocked ? !vesting : !from) ||\n    !displayAmount ||\n    !maxDisplayAmount ||\n    displayAmount > maxDisplayAmount;\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={onClose}\n        fullWidth\n      >\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <DialogTitle>{title}</DialogTitle>\n          <div style={{ display: 'flex', paddingRight: '24px' }}>\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                flexDirection: 'column',\n              }}\n            >\n              <LockIcon />\n            </div>\n            <FormControlLabel\n              style={{ marginLeft: '0px', marginRight: '0px' }}\n              control={\n                <Switch\n                  checked={isLocked}\n                  onChange={() => setIsLocked(!isLocked)}\n                />\n              }\n              label=\"\"\n            />\n          </div>\n        </div>\n        <DialogContent>\n          <div style={{ display: 'flex' }}>\n            <div style={{ flex: 1 }}>\n              <TextField\n                style={{ width: '100%' }}\n                id=\"outlined-number\"\n                label=\"Amount\"\n                type=\"number\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n                onChange={e =>\n                  setDisplayAmount(parseFloat(e.target.value) as number)\n                }\n                InputProps={{\n                  inputProps: { min: 0, max: maxDisplayAmount ?? 0 },\n                }}\n              />\n              <FormHelperText>{contextText}</FormHelperText>\n            </div>\n          </div>\n          <FormControl fullWidth>\n            {!isLocked ? (\n              <>\n                <OwnedTokenAccountsSelect\n                  variant=\"outlined\"\n                  decimals={mintAccount.decimals}\n                  mint={mint}\n                  onChange={(f: PublicKey, _maxDisplayAmount: BN) => {\n                    setFrom(f);\n                    // TODO: set an actual limit for the withdrawal UI (i.e.\n                    //       what's currently in the vault). Currently not\n                    //       done since we dont' have websocket connections\n                    //       for each of the users accounts. However we\n                    //       still use the \"max\" amount for display vesting\n                    //       accounts.\n                    setMaxDisplayAmount(2 ** 53);\n                  }}\n                />\n                <FormHelperText>\n                  Token account to transfer to/from\n                </FormHelperText>\n              </>\n            ) : (\n              <>\n                <VestingAccountsSelect\n                  variant=\"outlined\"\n                  mint={mint}\n                  decimals={mintAccount.decimals}\n                  deposit={deposit}\n                  onChange={(v: PublicKey, maxDisplayAmount: BN) => {\n                    setVesting(v);\n                    setMaxDisplayAmount(maxDisplayAmount.toNumber());\n                  }}\n                />\n                <FormHelperText>\n                  Vesting account to transfer to/from your <b>locked</b>{' '}\n                  balances\n                </FormHelperText>\n              </>\n            )}\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            //@ts-ignore\n            onClick={() => {\n              onTransfer(\n                isLocked ? vesting! : from!,\n                displayAmount!,\n                isLocked,\n              ).catch(err => {\n                console.error(err);\n                enqueueSnackbar(`Error transferring funds: ${err.toString()}`, {\n                  variant: 'error',\n                });\n              });\n            }}\n            color=\"primary\"\n            disabled={submitBtnDisabled}\n          >\n            {title}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>,\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport {\n  Account,\n  PublicKey,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_CLOCK_PUBKEY,\n} from '@solana/web3.js';\nimport { TokenInstructions } from '@project-serum/serum';\nimport { createTokenAccountInstrs } from '@project-serum/common';\nimport { useWallet } from '../../components/common/WalletProvider';\nimport * as notification from '../common/Notification';\nimport OwnedTokenAccountsSelect from '../common/OwnedTokenAccountsSelect';\nimport { RewardListItemViewModel } from './RewardsList';\nimport { ActionType } from '../../store/actions';\nimport { State as StoreState } from '../../store/reducer';\nimport { vendorSigner } from '../../utils/registry';\nimport { vestingSigner } from '../../utils/lockup';\n\ntype ClaimRewardButtonProps = {\n  rli: RewardListItemViewModel;\n};\n\nexport default function ClaimRewardButton(props: ClaimRewardButtonProps) {\n  const { registryClient, lockupClient } = useWallet();\n  const { member, registrar } = useSelector((state: StoreState) => {\n    const registrar = {\n      publicKey: state.registry.registrar,\n      account: state.accounts[state.registry.registrar.toString()],\n    };\n    const member = state.registry.member\n      ? {\n          publicKey: state.registry.member,\n          account: state.accounts[state.registry.member.toString()],\n        }\n      : undefined;\n    return {\n      registrar,\n      member,\n    };\n  });\n  const { rli } = props;\n  const dispatch = useDispatch();\n  const snack = useSnackbar();\n  const [token, setToken] = useState<null | PublicKey>(null);\n\n  // On click.\n  const clickHandler = async (): Promise<void> => {\n    notification.withTx(\n      snack,\n      `Processing vendor reward ${rli!.vendor!.publicKey.toString()}`,\n      'Reward processed',\n      async () => {\n        const vendor = await registryClient.account.rewardVendor(\n          rli.vendor!.publicKey,\n        );\n        const _vendorSigner = await vendorSigner(\n          registryClient.programId,\n          registrar.publicKey,\n          rli.vendor!.publicKey,\n        );\n        if (rli!.reward.locked) {\n          const vendoredVesting = new Account();\n          const vendoredVestingVault = new Account();\n          const vendoredVestingSigner = await vestingSigner(\n            lockupClient.programId,\n            vendoredVesting.publicKey,\n          );\n          const remainingAccounts = lockupClient.instruction.createVesting\n            .accounts({\n              vesting: vendoredVesting.publicKey,\n              vault: vendoredVestingVault.publicKey,\n              depositor: vendor.vault,\n              depositorAuthority: _vendorSigner.publicKey,\n              tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n              rent: SYSVAR_RENT_PUBKEY,\n              clock: SYSVAR_CLOCK_PUBKEY,\n            })\n            // Change the signer status on the vendor signer since it's signed by the program, not the\n            // client.\n            .map((meta: any) =>\n              meta.pubkey.equals(_vendorSigner.publicKey)\n                ? { ...meta, isSigner: false }\n                : meta,\n            );\n          const tx = await registryClient.rpc.claimRewardLocked(\n            vendoredVestingSigner.nonce,\n            {\n              accounts: {\n                registry: await registryClient.state.address(),\n                lockupProgram: lockupClient.programId,\n                cmn: {\n                  registrar: registrar.publicKey,\n                  member: member!.publicKey,\n                  beneficiary: registryClient.provider.wallet.publicKey,\n                  balances: member!.account.balances,\n                  balancesLocked: member!.account.balancesLocked,\n                  vendor: rli.vendor!.publicKey,\n                  vault: rli.vendor!.account.vault,\n                  vendorSigner: _vendorSigner.publicKey,\n                  tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n                  clock: SYSVAR_CLOCK_PUBKEY,\n                },\n              },\n              remainingAccounts,\n              signers: [vendoredVesting, vendoredVestingVault],\n              instructions: [\n                await lockupClient.account.vesting.createInstruction(\n                  vendoredVesting,\n                ),\n                ...(await createTokenAccountInstrs(\n                  registryClient.provider,\n                  vendoredVestingVault.publicKey,\n                  rli.vendor!.account.mint,\n                  vendoredVestingSigner.publicKey,\n                )),\n              ],\n            },\n          );\n          // Refetch the vesting accounts to update the UI with the new reward.\n          const vestingAccounts = await lockupClient.account.vesting.all(\n            registryClient.provider.wallet.publicKey.toBuffer(),\n          );\n          vestingAccounts.forEach(account => {\n            dispatch({\n              type: ActionType.AccountAdd,\n              item: {\n                account,\n              },\n            });\n          });\n          dispatch({\n            type: ActionType.LockupSetVestings,\n            item: {\n              vestingAccounts: vestingAccounts.map(v => v.publicKey),\n            },\n          });\n          return tx;\n        } else {\n          return await registryClient.rpc.claimReward({\n            accounts: {\n              to: token,\n              cmn: {\n                registrar: registrar.publicKey,\n                member: member!.publicKey,\n                beneficiary: registryClient.provider.wallet.publicKey,\n                balances: member!.account.balances,\n                balancesLocked: member!.account.balancesLocked,\n\n                vendor: rli.vendor!.publicKey,\n                vault: vendor.vault,\n                vendorSigner: _vendorSigner.publicKey,\n\n                tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n                clock: SYSVAR_CLOCK_PUBKEY,\n              },\n            },\n          });\n        }\n      },\n    );\n  };\n\n  return (\n    <>\n      {!rli.reward.locked && (\n        <div>\n          <OwnedTokenAccountsSelect\n            style={{ width: '400px', height: '100%' }}\n            mint={rli.vendor.account.mint}\n            onChange={(f: PublicKey) => setToken(f)}\n          />\n        </div>\n      )}\n      <div style={{ marginLeft: '10px', marginRight: '10px' }}>\n        <Button\n          disabled={rli.reward.unlockedAlloc && token === null}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() =>\n            clickHandler().catch(err => {\n              console.error(err);\n              snack.enqueueSnackbar(\n                `Error ending pending redemption: ${err.toString()}`,\n                {\n                  variant: 'error',\n                },\n              );\n            })\n          }\n        >\n          Process Reward\n        </Button>\n      </div>\n    </>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { useWallet } from '../../components/common/WalletProvider';\nimport { State as StoreState } from '../../store/reducer';\nimport { ActionType } from '../../store/actions';\nimport RewardsList, { RewardListItemViewModel } from './RewardsList';\nimport DropRewardButton from './DropRewardButton';\nimport ClaimRewardButton from './ClaimRewardButton';\nimport { rewardEvents } from '../../utils/registry';\n\nexport default function Rewards() {\n  const { registryClient } = useWallet();\n  const dispatch = useDispatch();\n  const snack = useSnackbar();\n  const ctx = useSelector((state: StoreState) => {\n    const registrar = state.accounts[state.registry.registrar.toString()];\n    const rewardEventQueue = {\n      publicKey: registrar.rewardEventQ,\n      account: state.accounts[registrar.rewardEventQ.toString()],\n    };\n    return {\n      accounts: state.accounts,\n      rewardEventQueue,\n      member: state.registry.member\n        ? {\n            publicKey: state.registry.member,\n            account: state.accounts[state.registry.member.toString()],\n          }\n        : undefined,\n      network: state.common.network,\n    };\n  });\n  const { rewardEventQueue, accounts } = ctx;\n\n  const events = rewardEvents(rewardEventQueue.account);\n\n  // Load any reward vendor accounts that hasn't been loaded already.\n  useEffect(() => {\n    events.forEach(m => {\n      const vendor = accounts[m.vendor.toString()];\n      if (!vendor) {\n        registryClient.account\n          .rewardVendor(m.vendor)\n          .then((account: any) => {\n            dispatch({\n              type: ActionType.AccountAdd,\n              item: {\n                account: { publicKey: m.vendor, account },\n              },\n            });\n          })\n          .catch((err: any) => {\n            console.error(err);\n            snack.enqueueSnackbar(`Error fetching reward vendor`, {\n              variant: 'error',\n            });\n          });\n      }\n    });\n  });\n\n  // All rewards to display.\n  const rewards = events\n    .map((m: any, idx: any) => RewardListItemViewModel.fromMessage(ctx, m, idx))\n    .reverse();\n\n  // Next reward to claim.\n  let nextReward = null;\n  if (rewards.filter(r => r === null).length === 0) {\n    nextReward = rewards\n      .filter(r => r!.needsClaim)\n      .sort((a, b) =>\n        a!.cursor < b!.cursor ? -1 : a!.cursor > b!.cursor ? 1 : 0,\n      )\n      .shift();\n  }\n\n  return (\n    <div style={{ width: '100%', marginTop: '24px' }}>\n      <div\n        style={{\n          marginBottom: '10px',\n          display: 'flex',\n          justifyContent: 'space-between',\n        }}\n      >\n        <Typography style={{ fontWeight: 'bold', fontSize: '20px' }}>\n          Reward History\n        </Typography>\n        <div style={{ display: 'flex' }}>\n          {nextReward && <ClaimRewardButton rli={nextReward} />}\n          <DropRewardButton />\n        </div>\n      </div>\n      <div>\n        <Typography>\n          When rewards are dropped, one must prove one was staked during the\n          time of drop. This means sending a transaction to the staking program\n          to <b>process</b> the reward. For <b>unlocked</b> rewards, select the\n          token address to transfer the reward to. For <b>locked</b> rewards, a\n          locked vesting account will be created and realized to the staker upon\n          unstaking. See the Lockup tab.\n        </Typography>\n      </div>\n      <Paper>\n        <RewardsList rewards={rewards} />\n      </Paper>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport BN from 'bn.js';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { PublicKey } from '@solana/web3.js';\nimport { State as StoreState, ProgramAccount } from '../../store/reducer';\nimport { toDisplay } from '../../utils/tokens';\n\ntype Props = {\n  style?: any;\n  mint?: PublicKey | null;\n  decimals: number;\n  variant?: 'outlined' | 'standard';\n  onChange: (from: PublicKey, maxAmount: BN) => void;\n  deposit?: boolean;\n};\n\nexport default function VestingAccountsSelect(p: Props) {\n  const { mint, decimals, variant, onChange, style, deposit } = p;\n  const vestings: ProgramAccount[] = useSelector((state: StoreState) => {\n    if (!mint) {\n      return [];\n    }\n    return state.lockup.vestings\n      .map(v => {\n        return { publicKey: v, account: state.accounts[v.toString()] };\n      })\n      .filter(v => v.account.mint.equals(mint));\n  });\n  const [fromAccount, setFromAccount] = useState('');\n  return (\n    <Select\n      style={style}\n      variant={variant}\n      fullWidth\n      value={fromAccount}\n      onChange={e => {\n        const pk = e.target.value as string;\n        setFromAccount(pk);\n        const pubkey = new PublicKey(pk);\n        const v = vestings.filter(v => v.publicKey.equals(pubkey)).pop();\n        onChange(pubkey, availableAmount(v!, deposit));\n      }}\n    >\n      {vestings.length === 0 ? (\n        <MenuItem value={''}>No vesting accounts found</MenuItem>\n      ) : (\n        vestings.map(v => {\n          return (\n            <MenuItem value={v.publicKey.toString()}>\n              <div\n                style={{\n                  width: '100%',\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                }}\n              >\n                <div>{`${v.publicKey.toString()}`}</div>\n                <div style={{ float: 'right', color: '#ccc' }}>{`${toDisplay(\n                  availableAmount(v, deposit),\n                  decimals,\n                )}`}</div>\n              </div>\n            </MenuItem>\n          );\n        })\n      )}\n    </Select>\n  );\n}\n\nfunction availableAmount(v: ProgramAccount, deposit?: boolean): BN {\n  return deposit\n    ? v.account.outstanding.sub(v.account.whitelistOwned)\n    : v.account.whitelistOwned;\n}\n","import React from 'react';\nimport MyNode from '../components/common/MyNode';\n\nexport default function MyNodePage() {\n  return <MyNode />;\n}\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport BN from 'bn.js';\nimport {\n  Account,\n  PublicKey,\n  SystemProgram,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_CLOCK_PUBKEY,\n} from '@solana/web3.js';\nimport { TokenInstructions } from '@project-serum/serum';\nimport { createTokenAccountInstrs } from '@project-serum/common';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { State as StoreState } from '../../store/reducer';\nimport { ActionType } from '../../store/actions';\nimport { useWallet } from '../../components/common/WalletProvider';\nimport OwnedTokenAccountsSelect from '../../components/common/OwnedTokenAccountsSelect';\nimport { fromDisplay } from '../../utils/tokens';\nimport { vestingSigner } from '../../utils/lockup';\nimport { ViewTransactionOnExplorerButton } from '../common/Notification';\n\nexport default function NewVestingButton() {\n  const [open, setOpen] = useState(false);\n  return (\n    <>\n      <div onClick={() => setOpen(true)}>\n        <Button variant=\"contained\" color=\"secondary\">\n          New\n        </Button>\n      </div>\n      <NewVestingDialog open={open} onClose={() => setOpen(false)} />\n    </>\n  );\n}\n\ntype NewVestingDialogProps = {\n  open: boolean;\n  onClose: () => void;\n};\n\nfunction NewVestingDialog(props: NewVestingDialogProps) {\n  const { open, onClose } = props;\n  const { network, accounts } = useSelector((state: StoreState) => {\n    return {\n      network: state.common.network,\n      accounts: state.accounts,\n    };\n  });\n\n  const defaultStartDate = new Date().toString();\n  const defaultStartTs = new Date(defaultStartDate).getTime() / 1000;\n  const defaultEndDate = '2027-01-01T12:00';\n  const defaultEndTs = new Date(defaultEndDate).getTime() / 1000;\n\n  const [beneficiary, setBeneficiary] = useState('');\n  const isValidBeneficiary = (() => {\n    try {\n      new PublicKey(beneficiary);\n      return true;\n    } catch (_) {\n      return false;\n    }\n  })();\n  const displayBeneficiaryError = !isValidBeneficiary && beneficiary !== '';\n\n  const [fromAccount, setFromAccount] = useState<null | PublicKey>(null);\n  const [startTimestamp, setStartTimestamp] = useState(defaultStartTs);\n  const [timestamp, setTimestamp] = useState(defaultEndTs);\n  const [periodCount, setPeriodCount] = useState(7);\n  const [displayAmount, setDisplayAmount] = useState<null | number>(null);\n  const { lockupClient } = useWallet();\n  const [isLoading, setIsLoading] = useState(false);\n  const [mint, setMint] = useState<null | PublicKey>(null);\n\n  const { enqueueSnackbar } = useSnackbar();\n  const dispatch = useDispatch();\n\n  const submitBtnEnabled =\n    mint !== null &&\n    fromAccount !== null &&\n    isValidBeneficiary &&\n    displayAmount !== null;\n\n  const createVestingClickHandler = async () => {\n    setIsLoading(true);\n    try {\n      const beneficiaryPublicKey = new PublicKey(beneficiary);\n      const beneficiaryAccount = await lockupClient.provider.connection.getAccountInfo(\n        beneficiaryPublicKey,\n      );\n      if (beneficiaryAccount === null) {\n        enqueueSnackbar('Unable to validate given beneficiary.', {\n          variant: 'error',\n        });\n        setIsLoading(false);\n        return;\n      }\n      if (!beneficiaryAccount.owner.equals(SystemProgram.programId)) {\n        enqueueSnackbar(\n          'The beneficiary must be owned by the System Program.',\n          {\n            variant: 'error',\n          },\n        );\n        setIsLoading(false);\n        return;\n      }\n\n      enqueueSnackbar('Creating vesting acount...', {\n        variant: 'info',\n      });\n\n      const mintAccount = accounts[mint!.toString()];\n      let amount = mintAccount\n        ? fromDisplay(displayAmount!, mintAccount.decimals)\n        : new BN(displayAmount!);\n\n      const vesting = new Account();\n      const vestingVault = new Account();\n      const _vestingSigner = await vestingSigner(\n        lockupClient.programId,\n        vesting.publicKey,\n      );\n\n      let tx = await lockupClient.rpc.createVesting(\n        beneficiaryPublicKey,\n        amount,\n        _vestingSigner.nonce,\n        new BN(startTimestamp),\n        new BN(timestamp),\n        new BN(periodCount),\n        null,\n        {\n          accounts: {\n            vesting: vesting.publicKey,\n            vault: vestingVault.publicKey,\n            depositor: fromAccount,\n            depositorAuthority: lockupClient.provider.wallet.publicKey,\n            tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n            rent: SYSVAR_RENT_PUBKEY,\n            clock: SYSVAR_CLOCK_PUBKEY,\n          },\n          signers: [vesting, vestingVault],\n          instructions: [\n            await lockupClient.account.vesting.createInstruction(vesting),\n            ...(await createTokenAccountInstrs(\n              lockupClient.provider,\n              vestingVault.publicKey,\n              mint!,\n              _vestingSigner.publicKey,\n            )),\n          ],\n        },\n      );\n      // Only add to the local store if the lockup belongs to the current user.\n      if (beneficiaryPublicKey.equals(lockupClient.provider.wallet.publicKey)) {\n        const vestingAccount = await lockupClient.account.vesting(\n          vesting.publicKey,\n        );\n        dispatch({\n          type: ActionType.LockupCreateVesting,\n          item: {\n            vesting: {\n              publicKey: vesting.publicKey,\n              account: vestingAccount,\n            },\n          },\n        });\n      }\n      enqueueSnackbar(`Vesting account created`, {\n        variant: 'success',\n        action: <ViewTransactionOnExplorerButton signature={tx} />,\n      });\n      onClose();\n    } catch (err) {\n      enqueueSnackbar(`Error creating vesting account: ${err.toString()}`, {\n        variant: 'error',\n      });\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} fullWidth maxWidth=\"md\">\n      <DialogTitle>\n        <Typography variant=\"h4\" component=\"h2\">\n          New Vesting Account\n        </Typography>\n      </DialogTitle>\n      <DialogContent>\n        <div>\n          {isLoading && (\n            <div\n              style={{\n                width: '40px',\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                marginBottom: '24px',\n              }}\n            >\n              <CircularProgress\n                style={{ marginLeft: 'auto', marginRight: 'auto' }}\n              />\n            </div>\n          )}\n          <div style={{ display: 'flex', width: '100%' }}>\n            <div>\n              <FormControl variant=\"outlined\" style={{ width: '200px' }}>\n                <InputLabel>Mint</InputLabel>\n                <Select\n                  value={mint ? mint!.toString() : ''}\n                  onChange={e =>\n                    setMint(new PublicKey(e.target.value as string))\n                  }\n                >\n                  {Object.keys(network.mints).map(m => (\n                    <MenuItem value={network.mints[m].toString()}>\n                      {m.toUpperCase()}\n                    </MenuItem>\n                  ))}\n                  {/*<MenuItem value=\"custom\">Custom</MenuItem>*/}\n                </Select>\n              </FormControl>\n            </div>\n            {false && (\n              <div style={{ flex: 1, marginLeft: '10px' }}>\n                <TextField\n                  fullWidth\n                  label=\"Custom mint\"\n                  value={mint ? mint!.toString() : ''}\n                  onChange={e => setMint(new PublicKey(e.target.value))}\n                />\n                <FormHelperText>Mint of the token to lockup</FormHelperText>\n              </div>\n            )}\n          </div>\n          <div>\n            <div style={{ display: 'flex', width: '100%' }}>\n              <div style={{ flex: 1 }}>\n                <FormControl fullWidth>\n                  <InputLabel>From</InputLabel>\n                  <OwnedTokenAccountsSelect\n                    mint={mint}\n                    onChange={(f: PublicKey) => setFromAccount(f)}\n                  />\n                  <FormHelperText>Token account to send from</FormHelperText>\n                </FormControl>\n              </div>\n            </div>\n          </div>\n          <div style={{ marginTop: '24px' }}>\n            <TextField\n              fullWidth\n              error={displayBeneficiaryError}\n              helperText={displayBeneficiaryError && 'Invalid beneficiary'}\n              label=\"Beneficiary\"\n              value={beneficiary}\n              onChange={e => setBeneficiary(e.target.value)}\n            />\n            <FormHelperText>Owner of the new vesting account</FormHelperText>\n          </div>\n          <div\n            style={{\n              marginTop: '24px',\n            }}\n          >\n            {false && (\n              <FormHelperText style={{ color: 'blue' }}>\n                Note: Amounts for custom mints (i.e., not SRM/MSRM) are in their\n                raw, non-decimal form. Make sure to convert before entering into\n                the fields here. For example, if a token has 6 decimals, then\n                multiply your desired amount by 10^6.\n              </FormHelperText>\n            )}\n            <TextField\n              fullWidth\n              label=\"Amount\"\n              type=\"number\"\n              value={displayAmount}\n              InputProps={{ inputProps: { min: 0 } }}\n              onChange={e => setDisplayAmount(parseFloat(e.target.value))}\n            />\n            <FormHelperText>\n              Amount to deposit into the vesting account\n            </FormHelperText>\n          </div>\n          <div\n            style={{\n              marginTop: '24px',\n              display: 'flex',\n            }}\n          >\n            <div style={{ flex: 1, marginRight: '10px' }}>\n              <TextField\n                fullWidth\n                label=\"Start date\"\n                type=\"datetime-local\"\n                defaultValue={defaultStartDate}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange={e => {\n                  const d = new Date(e.target.value);\n                  setStartTimestamp(d.getTime() / 1000);\n                }}\n              />\n              <FormHelperText>Date when vesting begins</FormHelperText>\n            </div>\n            <div>\n              <TextField\n                disabled\n                fullWidth\n                label=\"Unix Timestamp\"\n                value={startTimestamp}\n              />\n            </div>\n          </div>\n          <div\n            style={{\n              marginTop: '24px',\n              display: 'flex',\n            }}\n          >\n            <div style={{ flex: 1, marginRight: '10px' }}>\n              <TextField\n                fullWidth\n                label=\"End date\"\n                type=\"datetime-local\"\n                defaultValue={defaultEndDate}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange={e => {\n                  const d = new Date(e.target.value);\n                  setTimestamp(d.getTime() / 1000);\n                }}\n              />\n              <FormHelperText>Date when all tokens are vested</FormHelperText>\n            </div>\n            <div>\n              <TextField\n                disabled\n                fullWidth\n                label=\"Unix Timestamp\"\n                value={timestamp}\n              />\n            </div>\n          </div>\n          <div\n            style={{\n              marginTop: '24px',\n            }}\n          >\n            <FormControl fullWidth>\n              <TextField\n                id=\"outlined-number\"\n                label=\"Period Count\"\n                type=\"number\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n                value={periodCount}\n                onChange={e =>\n                  setPeriodCount(parseInt(e.target.value) as number)\n                }\n                InputProps={{ inputProps: { min: 1 } }}\n              />\n              <FormHelperText>Number of vesting periods</FormHelperText>\n            </FormControl>\n          </div>\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          color=\"primary\"\n          disabled={!submitBtnEnabled || isLoading}\n          onClick={() => createVestingClickHandler()}\n        >\n          Create\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport ChartistGraph from 'react-chartist';\nimport { useDispatch, useSelector } from 'react-redux';\nimport BN from 'bn.js';\nimport { useSnackbar } from 'notistack';\nimport { FixedScaleAxis, IChartOptions, Interpolation } from 'chartist';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Card from '@material-ui/core/Card';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Link from '@material-ui/core/Link';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Collapse from '@material-ui/core/Collapse';\nimport { PublicKey, SYSVAR_CLOCK_PUBKEY } from '@solana/web3.js';\nimport { TokenInstructions } from '@project-serum/serum';\nimport { ProgramAccount, State as StoreState } from '../../store/reducer';\nimport { Network } from '../../store/config';\nimport { useWallet } from '../common/WalletProvider';\nimport OwnedTokenAccountsSelect from '../../components/common/OwnedTokenAccountsSelect';\nimport { withTx } from '../../components/common/Notification';\nimport { ActionType } from '../../store/actions';\nimport { toDisplay, toDisplayLabel } from '../../utils/tokens';\nimport { getImage } from '../../components/common/RegistrarSelect';\nimport {\n  vestingSigner,\n  availableForWithdrawal as _availableForWithdrawal,\n} from '../../utils/lockup';\n\ntype VestingAccountCardProps = {\n  network: Network;\n  vesting: ProgramAccount;\n};\n\nexport default function VestingAccountCard(props: VestingAccountCardProps) {\n  const { vesting, network } = props;\n  const { lockupClient, registryClient } = useWallet();\n  const { enqueueSnackbar } = useSnackbar();\n  const dispatch = useDispatch();\n  const { accounts, member, mintAccount } = useSelector((state: StoreState) => {\n    return {\n      accounts: state.accounts,\n      member: state.registry.member\n        ? {\n            publicKey: state.registry.member,\n            account: state.accounts[state.registry.member.toString()],\n          }\n        : undefined,\n      mintAccount: state.accounts[vesting.account.mint.toString()],\n    };\n  });\n  const [expanded, setExpanded] = useState(false);\n  const [hover, setHover] = useState(false);\n\n  // Whitelisted mints only for now.\n  const isCustomMint = false;\n\n  let mint = accounts[vesting.account.mint.toString()];\n  const displayFn = mint\n    ? (input: BN) => {\n        return toDisplay(input, mint.decimals);\n      }\n    : (input: BN) => input.toString();\n\n  const outstandingLabel = `${displayFn(\n    vesting.account.outstanding,\n  )} ${toDisplayLabel(vesting.account.mint)}`;\n  const startTs = vesting.account.startTs;\n  const endTs = vesting.account.endTs;\n\n  const tsOverflow = endTs.sub(startTs).mod(vesting.account.periodCount);\n  const shiftedStartTs = startTs.sub(tsOverflow);\n\n  const period = endTs.sub(shiftedStartTs).div(vesting.account.periodCount);\n\n  // Make the horizontal axis evenly spaced.\n  //\n  // Vesting dates assuming we stretch the start date back in time (so that the\n  // periods are of even length).\n  const vestingDates = [\n    ...Array(vesting.account.periodCount.toNumber() + 1),\n  ].map((_, idx) => {\n    return formatDate(\n      new Date((shiftedStartTs.toNumber() + idx * period.toNumber()) * 1000),\n    );\n  });\n  // Now push the start window forward to the real start date, making the first period shorter.\n  vestingDates[0] = formatDate(new Date(startTs.toNumber() * 1000));\n\n  // Now do the same thing on the vertical axis.\n  const rewardOverflow = vesting.account.startBalance.mod(\n    vesting.account.periodCount,\n  );\n  const rewardPerPeriod = vesting.account.startBalance\n    .sub(rewardOverflow)\n    .div(vesting.account.periodCount)\n    .toNumber();\n  const cumulativeVesting = [...Array(vestingDates.length)].map(() => 0);\n  cumulativeVesting[1] = rewardPerPeriod + rewardOverflow.toNumber();\n  for (let k = 2; k < cumulativeVesting.length; k += 1) {\n    cumulativeVesting[k] = cumulativeVesting[k - 1] + rewardPerPeriod;\n  }\n\n  const startLabel = formatDate(\n    new Date(vesting.account.startTs.toNumber() * 1000),\n  );\n  const endLabel = formatDate(\n    new Date(vesting.account.endTs.toNumber() * 1000),\n  );\n  const urlSuffix = `?cluster=${network.explorerClusterSuffix}`;\n\n  const [\n    availableForWithdrawal,\n    setAvailableForWithdrawal,\n  ] = useState<null | BN>(null);\n  const [withdrawalAccount, setWithdrawalAccount] = useState<null | PublicKey>(\n    null,\n  );\n\n  useEffect(() => {\n    _availableForWithdrawal(lockupClient, vesting.publicKey)\n      .then((amount: BN) => {\n        setAvailableForWithdrawal(amount);\n      })\n      .catch((err: any) => {\n        console.error(err);\n        enqueueSnackbar(\n          `Error fetching available for withdrawal: ${err.toString()}`,\n          {\n            variant: 'error',\n          },\n        );\n      });\n  }, [lockupClient, vesting, enqueueSnackbar]);\n  const snack = useSnackbar();\n\n  const withdrawEnabled =\n    withdrawalAccount !== null &&\n    availableForWithdrawal !== null &&\n    availableForWithdrawal.gtn(0);\n  const withdraw = async () => {\n    await withTx(\n      snack,\n      'Withdrawing locked tokens',\n      'Tokens unlocked',\n      async () => {\n        const remainingAccounts = (() => {\n          if (vesting.account.realizor) {\n            if (!member) {\n              // Should never be thrown.\n              throw new Error('Member account not found');\n            }\n            return [\n              {\n                pubkey: registryClient.programId,\n                isSigner: false,\n                isWritable: false,\n              },\n              { pubkey: member.publicKey, isSigner: false, isWritable: false },\n              {\n                pubkey: member.account.balances.spt,\n                isSigner: false,\n                isWritable: false,\n              },\n              {\n                pubkey: member.account.balancesLocked.spt,\n                isSigner: false,\n                isWritable: false,\n              },\n            ];\n          } else {\n            return undefined;\n          }\n        })();\n        const tx = await lockupClient.rpc.withdraw(availableForWithdrawal!, {\n          accounts: {\n            vesting: vesting.publicKey,\n            beneficiary: lockupClient.provider.wallet.publicKey,\n            token: withdrawalAccount!,\n            vault: vesting.account.vault,\n            vestingSigner: (\n              await vestingSigner(lockupClient.programId, vesting.publicKey)\n            ).publicKey,\n            tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n            clock: SYSVAR_CLOCK_PUBKEY,\n          },\n          remainingAccounts,\n        });\n        const newVesting = await lockupClient.account.vesting(\n          vesting.publicKey,\n        );\n        dispatch({\n          type: ActionType.LockupUpdateVesting,\n          item: {\n            vesting: {\n              publicKey: vesting.publicKey,\n              account: newVesting,\n            },\n          },\n        });\n        return tx;\n      },\n    );\n  };\n  const rows = [\n    {\n      field: 'Projected unlock',\n      value:\n        availableForWithdrawal === null\n          ? null\n          : displayFn(availableForWithdrawal!),\n    },\n    {\n      field: 'Locked outstanding',\n      value: displayFn(vesting.account.outstanding),\n    },\n    {\n      field: 'Current balance',\n      value: displayFn(\n        vesting.account.outstanding.sub(vesting.account.whitelistOwned),\n      ),\n    },\n    { field: 'Initial lockup', value: displayFn(vesting.account.startBalance) },\n    {\n      field: 'Amount unlocked',\n      value: displayFn(\n        vesting.account.startBalance.sub(vesting.account.outstanding),\n      ),\n    },\n    {\n      field: 'Whitelist owned',\n      value: displayFn(vesting.account.whitelistOwned),\n    },\n    { field: 'Period count', value: vesting.account.periodCount.toString() },\n    {\n      field: 'Start timestamp',\n      value: `${new Date(\n        vesting.account.startTs.toNumber() * 1000,\n      ).toLocaleString()} (${vesting.account.startTs.toString()})`,\n    },\n    {\n      field: 'End timestamp',\n      value: `${new Date(\n        vesting.account.endTs.toNumber() * 1000,\n      ).toLocaleString()} (${vesting.account.endTs.toString()})`,\n    },\n    { field: 'Vault', value: vesting.account.vault.toString() },\n    {\n      field: 'Realizer program',\n      value: vesting.account.realizor\n        ? vesting.account.realizor.program.toString()\n        : 'None',\n    },\n    {\n      field: 'Realizer metadata',\n      value: vesting.account.realizor\n        ? vesting.account.realizor.metadata.toString()\n        : 'None',\n    },\n    {\n      field: 'Grantor',\n      value: vesting.account.grantor.toString(),\n    },\n  ];\n\n  return (\n    <Card\n      key={vesting.publicKey.toString()}\n      onMouseOver={() => setHover(true)}\n      onMouseOut={() => setHover(false)}\n      style={{\n        marginTop: '24px',\n        cursor: hover ? 'pointer' : 'default',\n      }}\n    >\n      <CardContent style={{ paddingBottom: '16px' }}>\n        <ListItem onClick={() => setExpanded(!expanded)}>\n          <div\n            style={{\n              width: '100%',\n              display: 'flex',\n              justifyContent: 'space-between',\n            }}\n          >\n            <ListItemIcon>\n              {getImage(vesting.account.mint, {\n                marginRight: '16px',\n                width: '56px',\n              })}\n            </ListItemIcon>\n            <ListItemText\n              primary={\n                <Link\n                  href={\n                    `https://explorer.solana.com/account/${vesting.publicKey.toBase58()}` +\n                    urlSuffix\n                  }\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  {vesting.publicKey.toString()}\n                </Link>\n              }\n              secondary={`${startLabel}, ${endLabel} | ${vesting.account.periodCount.toNumber()} periods`}\n            />\n            <div\n              style={{\n                marginTop: '6px',\n                color: 'rgba(0, 0, 0, 0.54)',\n                display: 'flex',\n                justifyContent: 'space-between',\n                flexDirection: 'column',\n                maxWidth: '200px',\n              }}\n            >\n              <Typography\n                style={{ overflow: 'hidden', whiteSpace: 'nowrap' }}\n                variant=\"body1\"\n              >\n                {outstandingLabel}\n              </Typography>\n            </div>\n          </div>\n        </ListItem>\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <Typography></Typography>\n          {vestingDates.length <= 15 ? (\n            <ChartistGraph\n              data={{\n                labels: vestingDates,\n                series: [cumulativeVesting],\n              }}\n              options={\n                {\n                  axisY: {\n                    type: FixedScaleAxis,\n                    low: 0,\n                    high: cumulativeVesting[cumulativeVesting.length - 1],\n                    ticks: cumulativeVesting,\n                  },\n                  lineSmooth: Interpolation.step(),\n                  height: 400,\n                } as IChartOptions\n              }\n              type={'Line'}\n            />\n          ) : (\n            <div style={{ textAlign: 'center', fontWeight: 'bold' }}>\n              {/* TOOD: graphs for vesting accounts with a lot of periods. */}A\n              graph isn't available for this account.\n            </div>\n          )}\n          <div>\n            {isCustomMint && (\n              <div\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <b>\n                  Note: custom mints (i.e. not SRM/MSRM) display raw token\n                  amounts without decimals.\n                </b>\n              </div>\n            )}\n            <Table>\n              <TableBody>\n                {rows.map(r => {\n                  return (\n                    <TableRow>\n                      <TableCell>{r.field}</TableCell>\n                      <TableCell align=\"right\">\n                        {r.value === null ? (\n                          <CircularProgress\n                            style={{\n                              height: '20px',\n                              width: '20px',\n                              padding: 0,\n                            }}\n                          />\n                        ) : (\n                          r.value\n                        )}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n            <div style={{ display: 'flex', marginTop: '15px' }}>\n              <OwnedTokenAccountsSelect\n                decimals={mintAccount ? mintAccount.decimals : undefined}\n                mint={vesting.account.mint}\n                onChange={(f: PublicKey) => setWithdrawalAccount(f)}\n              />\n              <div style={{ marginLeft: '20px', width: '191px' }}>\n                <Button\n                  style={{ fontSize: '12px' }}\n                  color=\"primary\"\n                  disabled={!withdrawEnabled}\n                  variant=\"contained\"\n                  onClick={() =>\n                    withdraw().catch(err => {\n                      let msg = err.toString();\n                      if (\n                        msg &&\n                        msg.split('custom program error: 0x78').length === 2\n                      ) {\n                        msg = 'Unrealized rewards. Please unstake';\n                      }\n                      enqueueSnackbar(\n                        `Error withdrawing from vesting account: ${err.toString()}`,\n                        {\n                          variant: 'error',\n                        },\n                      );\n                    })\n                  }\n                >\n                  Unlock tokens\n                </Button>\n              </div>\n            </div>\n          </div>\n        </Collapse>\n      </CardContent>\n    </Card>\n  );\n}\n\n// TODO: locale format without minutes, hours, seconds?\nfunction formatDate(d: Date): string {\n  return `${d.getMonth() + 1}/${d.getDate()}/${d.getFullYear()}`;\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport Container from '@material-ui/core/Container';\nimport List from '@material-ui/core/List';\nimport { useWallet } from '../../components/common/WalletProvider';\nimport { State as StoreState } from '../../store/reducer';\nimport NewVestingButton from './NewVesting';\nimport VestingAccountCard from './VestingAccountCard';\n\nexport default function Vestings() {\n  const { wallet } = useWallet();\n  const { vestingAccounts, network } = useSelector((state: StoreState) => {\n    return {\n      vestingAccounts: state.lockup.vestings.map(v => {\n        return {\n          publicKey: v,\n          account: state.accounts[v.toString()],\n        };\n      }),\n      network: state.common.network,\n    };\n  });\n\n  return (\n    <Container fixed maxWidth=\"md\">\n      <div style={{ width: '100%' }}>\n        <div style={{ marginTop: '24px', marginBottom: '24px' }}>\n          <link\n            rel=\"stylesheet\"\n            href=\"//cdn.jsdelivr.net/chartist.js/latest/chartist.min.css\"\n          />\n          <script src=\"//cdn.jsdelivr.net/chartist.js/latest/chartist.min.js\"></script>\n          {wallet.publicKey && (\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                marginBottom: '24px',\n              }}\n            >\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  flexDirection: 'column',\n                }}\n              >\n                <Typography\n                  style={{\n                    fontSize: '20px',\n                    fontWeight: 'bold',\n                  }}\n                >\n                  Projected Unlocks\n                </Typography>\n              </div>\n              <div>\n                <NewVestingButton />\n              </div>\n            </div>\n          )}\n          <Typography color=\"textSecondary\">\n            In addition to a vesting schedule, locked token accounts are subject\n            to an application dependent\n            <b> realization condition</b>, determining if and when locked tokens\n            are given to a user. For example, in the case of locked staking\n            rewards, locked tokens become realized in the event of unstaking. If\n            one never unstakes, one never receives locked token rewards.\n          </Typography>\n          <List\n            disablePadding\n            style={{ marginLeft: 'auto', marginRight: 'auto' }}\n          >\n            {vestingAccounts.map(v => (\n              <VestingAccountCard network={network} vesting={v} />\n            ))}\n            {vestingAccounts.length === 0 && (\n              <Card\n                style={{\n                  marginTop: '24px',\n                }}\n              >\n                <CardContent>\n                  <ListItem>\n                    <div\n                      style={{\n                        width: '100%',\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                      }}\n                    >\n                      <Typography color=\"textSecondary\" variant=\"h6\">\n                        No vesting accounts found\n                      </Typography>\n                    </div>\n                  </ListItem>\n                </CardContent>\n              </Card>\n            )}\n          </List>\n        </div>\n      </div>\n    </Container>\n  );\n}\n","import React from 'react';\nimport Vestings from '../components/lockups/Vestings';\n\nexport default function LockupPage() {\n  return <Vestings />;\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { SnackbarProvider } from 'notistack';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { unstable_createMuiStrictModeTheme as createMuiTheme } from '@material-ui/core/styles';\nimport { store } from './store';\nimport WalletProvider from './components/common/WalletProvider';\nimport BootstrapProvider from './components/common/BootstrapProvider';\nimport Layout from './components/common/Layout';\nimport MyNodePage from './pages/MyNode';\nimport LockupPage from './pages/Lockup';\n\nfunction App() {\n  const theme = createMuiTheme({\n    palette: {\n      background: {\n        default: 'rgb(255,255,255)',\n      },\n    },\n    typography: {\n      fontFamily: ['Source Sans Pro', 'sans-serif'].join(','),\n    },\n    overrides: {},\n  });\n  return (\n    <Provider store={store}>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <SnackbarProvider maxSnack={5} autoHideDuration={8000}>\n          <WalletProvider>\n            <BootstrapProvider>\n              <HashRouter basename={'/'}>\n                <Layout>\n                  <Route exact path=\"/\" component={MyNodePage} />\n                  <Route exact path=\"/stake\" component={MyNodePage} />\n                  <Route exact path=\"/lockup\" component={LockupPage} />\n                </Layout>\n              </HashRouter>\n            </BootstrapProvider>\n          </WalletProvider>\n        </SnackbarProvider>\n      </MuiThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { Transaction, PublicKey, Account } from '@solana/web3.js';\nimport * as serumCmn from '@project-serum/common';\nimport * as anchor from '@project-serum/anchor';\n\nexport async function registrarSigner(\n  programId: PublicKey,\n  registrar: PublicKey,\n): Promise<{ publicKey: PublicKey; nonce: number }> {\n  const [publicKey, nonce] = await anchor.web3.PublicKey.findProgramAddress(\n    [registrar.toBuffer()],\n    programId,\n  );\n  return {\n    publicKey,\n    nonce,\n  };\n}\n\nexport async function memberSigner(\n  programId: PublicKey,\n  registrar: PublicKey,\n  member: PublicKey,\n): Promise<{ publicKey: PublicKey; nonce: number }> {\n  const [publicKey, nonce] = await anchor.web3.PublicKey.findProgramAddress(\n    [registrar.toBuffer(), member.toBuffer()],\n    programId,\n  );\n  return {\n    publicKey,\n    nonce,\n  };\n}\n\nexport async function vendorSigner(\n  programId: PublicKey,\n  registrar: PublicKey,\n  vendor: PublicKey,\n): Promise<{ publicKey: PublicKey; nonce: number }> {\n  const [publicKey, nonce] = await anchor.web3.PublicKey.findProgramAddress(\n    [registrar.toBuffer(), vendor.toBuffer()],\n    programId,\n  );\n  return {\n    publicKey,\n    nonce,\n  };\n}\n\n// Returns the seed used to derive a member address. This is not necessary, but\n// a UX convenience. Each member address is a deterministic function of the\n// program, beneficiary, and this (constant) seed.\nexport async function memberSeed(registrar: PublicKey): Promise<string> {\n  const seed = await anchor.utils.sha256(`${registrar.toString()}:Member`);\n  // The max length of seeds allowed by Solana is 32.\n  return seed.slice(0, 32);\n}\n\n// Creates all the SPL otken vaults needed for constructing a `Member` account.\nexport async function createBalanceSandbox(\n  provider: serumCmn.Provider,\n  r: any,\n  registrySigner: PublicKey,\n) {\n  const spt = new Account();\n  const vault = new Account();\n  const vaultStake = new Account();\n  const vaultPw = new Account();\n\n  const lamports = await provider.connection.getMinimumBalanceForRentExemption(\n    165,\n  );\n\n  const createSptIx = await serumCmn.createTokenAccountInstrs(\n    provider,\n    spt.publicKey,\n    r.poolMint,\n    registrySigner,\n    lamports,\n  );\n  const createVaultIx = await serumCmn.createTokenAccountInstrs(\n    provider,\n    vault.publicKey,\n    r.mint,\n    registrySigner,\n    lamports,\n  );\n  const createVaultStakeIx = await serumCmn.createTokenAccountInstrs(\n    provider,\n    vaultStake.publicKey,\n    r.mint,\n    registrySigner,\n    lamports,\n  );\n  const createVaultPwIx = await serumCmn.createTokenAccountInstrs(\n    provider,\n    vaultPw.publicKey,\n    r.mint,\n    registrySigner,\n    lamports,\n  );\n  let tx0 = new Transaction();\n  tx0.add(\n    ...createSptIx,\n    ...createVaultIx,\n    ...createVaultStakeIx,\n    ...createVaultPwIx,\n  );\n  let signers0 = [spt, vault, vaultStake, vaultPw];\n\n  const tx = { tx: tx0, signers: signers0 };\n\n  return [\n    tx,\n    {\n      spt: spt.publicKey,\n      vault: vault.publicKey,\n      vaultStake: vaultStake.publicKey,\n      vaultPw: vaultPw.publicKey,\n    },\n  ];\n}\n\n// Returns all events in the reward queue.\nexport function rewardEvents(rewardQ: any): any[] {\n  let events = [];\n  let tail = rewardQ.tail;\n  while (tail < rewardQ.head) {\n    let idx = tail % rewardQ.events.length;\n    events.push(rewardQ.events[idx]);\n    tail += 1;\n  }\n  return events;\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport { TransactionSignature } from '@solana/web3.js';\nimport { State as StoreState } from '../../store/reducer';\n\ntype Props = {\n  signature: string;\n};\n\nexport async function withTx(\n  snack: any,\n  beforeLabel: string,\n  afterLabel: string,\n  execTx: () => Promise<TransactionSignature>,\n) {\n  snack.enqueueSnackbar(beforeLabel, {\n    variant: 'info',\n  });\n  try {\n    let tx = await execTx();\n    snack.closeSnackbar();\n    snack.enqueueSnackbar(afterLabel, {\n      variant: 'success',\n      action: <ViewTransactionOnExplorerButton signature={tx} />,\n    });\n  } catch (err) {\n    snack.enqueueSnackbar(`Error: ${err.toString()}`, {\n      variant: 'error',\n    });\n  }\n}\n\nexport function ViewTransactionOnExplorerButton(props: Props) {\n  const { signature } = props;\n  const { explorerClusterSuffix } = useSelector((state: StoreState) => {\n    return {\n      explorerClusterSuffix: state.common.network.explorerClusterSuffix,\n    };\n  });\n  const urlSuffix = `?cluster=${explorerClusterSuffix}`;\n  return (\n    <Button\n      color=\"inherit\"\n      component=\"a\"\n      target=\"_blank\"\n      rel=\"noopener\"\n      href={`https://explorer.solana.com/tx/${signature}` + urlSuffix}\n    >\n      View on Solana Explorer\n    </Button>\n  );\n}\n","import { PublicKey } from '@solana/web3.js';\n\ntype Networks = { [label: string]: Network };\n\nexport type Network = {\n  // Cluster.\n  label: string;\n  url: string;\n  explorerClusterSuffix: string;\n\n  // Faucets.\n  srmFaucet: PublicKey | null;\n  msrmFaucet: PublicKey | null;\n\n  // Programs.\n  registryProgramId: PublicKey;\n  lockupProgramId: PublicKey;\n\n  // Staking instances.\n  registrars: { [token: string]: PublicKey };\n\n  // Whitelisted token mints.\n  mints: { [token: string]: PublicKey };\n};\n\nexport const networks: Networks = {\n  mainnet: {\n    // Cluster.\n    label: 'Mainnet Beta',\n    url: 'https://solana-api.projectserum.com',\n    explorerClusterSuffix: '',\n\n    srmFaucet: null,\n    msrmFaucet: null,\n\n    registryProgramId: new PublicKey(\n      'GrAkKfEpTKQuVHG2Y97Y2FF4i7y7Q5AHLK94JBy7Y5yv',\n    ),\n    lockupProgramId: new PublicKey(\n      '6ebQNeTPZ1j7k3TtkCCtEPRvG7GQsucQrZ7sSEDQi9Ks',\n    ),\n    registrars: {\n      srm: new PublicKey('5vJRzKtcp4fJxqmR7qzajkaKSiAb6aT9grRsaZKXU222'),\n      msrm: new PublicKey('7uURiX2DwCpRuMFebKSkFtX9v5GK1Cd8nWLL8tyoyxZY'),\n      fida: new PublicKey('CJPEDnLSD6gQa94fkFmcPdqikHYMPzAL8NXmaurta2a7'),\n      maps: new PublicKey('9tzkorTXKbw73hokMsq34R6ADd13eJF9X4udXQLiGAKc'),\n    },\n    mints: {\n      srm: new PublicKey('SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt'),\n      msrm: new PublicKey('MSRMcoVyrFxnSgo5uXwone5SKcGhT1KEJMFEkMEWf9L'),\n      fida: new PublicKey('EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp'),\n      maps: new PublicKey('MAPS41MDahZ9QdKXhVa4dWB9RuyfV4XqhyAZ8XcYepb'),\n    },\n  },\n  devnet: {\n    // Cluster.\n    label: 'Devnet',\n    url: 'https://devnet.solana.com',\n    explorerClusterSuffix: 'devnet',\n\n    srmFaucet: null,\n    msrmFaucet: null,\n\n    registryProgramId: new PublicKey(\n      'DVBFLTDaN29K69yW61AiVTcQuEmbnuodvW9qGXpQQuRc',\n    ),\n    lockupProgramId: new PublicKey(\n      'FXef1WbmM9WHzFMDcXvsgPWzgHQz7Hrz1CoqNUq5EEi9',\n    ),\n    registrars: {\n      token1: new PublicKey('4QK3drbHCjouKbHUGP9PW8AYH6LuB5f4DQDq4ExCZD5u'),\n      token2: new PublicKey('Gz6kVhoUc9mHF2bXkAQik7gXtDoWKvDkJ99fr1v2WTbi'),\n    },\n    mints: {\n      token1: new PublicKey('2CRHQWy4LaM5pXGwfYkgQLvxRJh4vsm4FGzTpjXTFe2p'),\n      token2: new PublicKey('GeRsQMtERmiEief53PDv8iTDTDZe8RPpqfcHWukR5nGt'),\n    },\n  },\n\n  // Fill in with your local cluster addresses.\n  localhost: {\n    // Cluster.\n    label: 'Localhost',\n    url: 'http://localhost:8899',\n    explorerClusterSuffix: 'localhost',\n\n    srmFaucet: null,\n    msrmFaucet: null,\n\n    registryProgramId: new PublicKey(\n      'zyX2Mz2hErCRtY89c71xBhG97ecZBzGW7gXQcqK3kGm',\n    ),\n    lockupProgramId: new PublicKey(\n      'G1eYCEgXjdrQa9hHRtmw6HYpccTKrboVmf99LEpo8966',\n    ),\n    registrars: {\n      token1: new PublicKey('BGKtgdD8nUN7nYcReaEmc21ov1LNaRh1RaBPo2bN4u2X'),\n      token2: new PublicKey('66YNDsBxejtN6UDodiCTMtjyyxyucMRTJnwb4zFjaRY8'),\n    },\n    mints: {\n      token1: new PublicKey('2NGvipoNMC8AFj2cqwt9GqsLvAg17nAdJjcZgYAzPoRA'),\n      token2: new PublicKey('dLiXdXEUiG8N4YzJaq3sbxrT16qhgc5TVFPn4XemQTj'),\n    },\n  },\n};\n"],"sourceRoot":""}