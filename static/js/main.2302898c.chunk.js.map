{"version":3,"sources":["../../src/layout.js","skin/index.ts","utils/idl.ts","store/actions.ts","../../src/token-instructions.js","../../src/tokens_and_markets.ts","components/multisig/Multisig.tsx","utils/tokens.tsx","idl/lockup.ts","idl/registry.ts","idl/multisig.ts","components/common/WalletProvider.tsx","../../src/instructions.js","../../src/queue.ts","../../src/fees.ts","../../../src/simulate-transaction.ts","components/Stake.tsx","../../../src/index.ts","../../src/market.ts","../../src/index.js","../../src/slab.ts","../../../src/provider.ts","../../../src/token.ts","../../../src/connection.ts","store/reducer.ts","store/index.ts","components/common/BootstrapProvider.tsx","components/common/Header.tsx","components/common/Footer.tsx","components/common/Layout.tsx","components/common/OwnedTokenAccountsSelect.tsx","components/common/RegistrarSelect.tsx","components/Me.tsx","utils/lockup.ts","components/rewards/RewardsList.tsx","components/rewards/DropRewardButton.tsx","components/common/MyNode.tsx","components/rewards/ClaimRewardButton.tsx","components/rewards/Rewards.tsx","components/common/VestingAccountsSelect.tsx","pages/MyNode.tsx","components/lockups/NewVesting.tsx","components/lockups/VestingAccountCard.tsx","components/lockups/Vestings.tsx","pages/Lockup.tsx","pages/Multisig.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/common/Notification.tsx","utils/registry.ts","store/config.ts"],"names":["BNLayout","buffer_layout_1","Blob","b","_skin","active","ready","notReady","inactive","deactivating","instance","IDL_INSTRUCTION_LAYOUT","rustEnum","struct","encodeInstruction","i","buffer","Buffer","alloc","len","encode","concat","IDL_TAG","slice","from","reverse","ActionType","BufferLayout","u8","layout_1","publicKeyLayout","LAYOUT","addVariant","programId","exports","address","name","Multisig","multisig","history","useHistory","useState","multisigAddress","setMultisigAddress","disabled","addr","PublicKey","_","isValidPubkey","searchFn","push","style","paddingLeft","paddingRight","borderBottom","display","flex","background","padding","border","outlineWidth","placeholder","value","onChange","e","target","onKeyPress","key","onClick","NewMultisigButton","MultisigInstance","multisigClient","useWallet","undefined","multisigAccount","setMultisigAccount","transactions","setTransactions","showSignerDialog","setShowSignerDialog","showAddTransactionDialog","setShowAddTransactionDialog","forceRefresh","setForceRefresh","useEffect","account","then","catch","err","console","error","transaction","all","toBuffer","txs","subscribe","on","fixed","maxWidth","marginBottom","marginTop","marginLeft","marginRight","color","textAlign","position","elevation","variant","flexGrow","component","toString","threshold","owners","length","title","arrow","disablePadding","primary","map","tx","TxListItem","publicKey","AddTransactionDialog","open","onClose","didAddTransaction","SignerDialog","setOpen","NewMultisigDialog","enqueueSnackbar","useSnackbar","setThreshold","zeroAddr","provider","wallet","participants","setParticipants","_onClose","createMultisig","a","Account","ownerSize","multisigSize","findProgramAddress","nonce","p","rpc","BN","rent","SYSVAR_RENT_PUBKEY","createInstruction","accounts","signers","instructions","action","signature","fullWidth","label","type","parseInt","idx","justifyContent","str","txAccount","setTxAccount","rows","field","didExecute","wordBreak","width","float","encodeBase64","data","ownerSetSeqno","msAccountRows","owner","approve","execute","multisigSigner","executeTransaction","remainingAccounts","t","pubkey","equals","isSigner","isWritable","button","icon","ixLabel","in","timeout","unmountOnExit","errStr","align","r","AccountsList","BPF_LOADER_UPGRADEABLE_PID","secondary","coder","sighash","idl","signer","setSigner","addrNonce","paddingBottom","ProgramUpdateListItem","IdlUpgradeListItem","MultisigSetOwnersListItem","ChangeThresholdListItem","ChangeThresholdListItemDetails","changeThreshold","changeThresholdData","proposer","createTransaction","SetOwnersListItemDetails","setOwners","setOwnersData","UpgradeIdlListItemDetails","setProgramId","setBuffer","createTransactionAccount","programAddr","bufferAddr","anchor","idlAddress","idlAddr","accs","UpgradeProgramListItemDetails","connection","getAccountInfo","programAccount","Error","programdataAddress","spill","SYSVAR_CLOCK_PUBKEY","instruction","TokenListContext","React","createContext","tokenMap","Map","useTokenInfos","useContext","TokenRegistryProvider","props","setTokenMap","TokenListProvider","resolve","tokens","tokenList","filterByClusterSlug","getList","reduce","item","set","Provider","children","fromDisplay","amount","decimals","toDisplay","toNumber","toDisplayLabel","mint","whitelistedMint","Object","keys","networks","mainnet","mints","filter","pop","toUpperCase","version","isMut","args","option","defined","state","kind","fields","vec","methods","types","errors","code","msg","variants","w","WalletContext","WalletProvider","useSelector","walletProvider","common","network","useMemo","opts","preflightCommitment","commitment","Connection","url","Wallet","lockupClient","Program","LockupIdl","lockupProgramId","registryClient","RegistryIdl","registryProgramId","MultisigIdl","multisigProgramId","INSTRUCTION_LAYOUT","u64","feeTier","Stake","dispatch","useDispatch","registrarAccount","registry","registrar","member","memberAccount","closeSnackbar","createPoolTokens","isLocked","poolMint","rewardEventQ","balances","balancesLocked","memberSigner","registrarSigner","TokenInstructions","TOKEN_PROGRAM_ID","beneficiary","clock","tokenProgram","stake","redeemPoolTokens","pendingWithdrawal","startUnstake","pwAccount","RegistryCreatePendingWithdrawal","createPool","shares","redeemPool","PoolCard","create","redeem","RedemptionList","AllPendingTransfers","poolAmount","setPoolAmount","setIsLocked","poolTokenMint","pricePerShare","stakeRate","cost","mul","subheader","flexDirection","fontWeight","supply","withdrawalTimelock","control","checked","labelPlacement","pendingWithdrawals","pw","RegistrySetPendingWithdrawals","paddingTop","fontSize","PendingStakeListItem","isLast","sptLabel","l","locked","overflow","whiteSpace","PendingWithdrawalButton","Date","startTs","toLocaleString","endTs","pool","endPendingWithdrawal","vault","vaultPw","endUnstake","updatedPendingWithdrawal","burned","RegistryUpdatePendingWithdrawal","skin","now","height","mintAccount","pendingTransfers","setPendingTransfers","transfers","sort","fetchAll","maxHeight","div","u32","zeros","BootstrapState","initialState","bootstrapTrigger","shutdownTrigger","isWalletConnected","bootstrapState","NeedsBootstrap","ownedTokenAccounts","lockup","vestings","registrars","srm","store","createStore","newState","CommonAppWillBootstrap","IsBootstrapping","CommonAppDidBootstrap","Bootstrapped","CommonWalletSetProvider","CommonWalletDidConnect","CommonWalletDidDisconnect","CommonSetNetwork","networkKey","values","CommonTriggerBootstrap","CommonTriggerShutdown","CommonDidShutdown","s","CommonOwnedTokenAccountsSet","CommonOwnedTokenAccountsUpdate","LockupSetVestings","vestingAccounts","LockupUpdateVesting","vesting","LockupCreateVesting","unshift","RegistrySetMember","RegistrySetRegistrar","forEach","AccountAdd","AccountUpdate","BootstrapProvider","bootstrap","useCallback","autoHideDuration","refreshAccounts","members","accountStore","fromEntries","m","registrarSwitch","shutdown","disconnect","fetchRegistrars","registrarAddresses","getMultipleAccounts","raw","decode","parseMintAccount","rewardQs","fetchMembers","Promise","memberSeed","seed","createWithSeed","memberPublicKey","memberAddresses","memberAccounts","fetchAndDispatchMemberAccounts","fetchMints","mintAddresses","fetchOwnedTokenAccounts","token","getOwnedTokenAccounts","fetchVestingAccounts","v","newRegistrar","oldRegistrar","oldMember","oldMemberAccount","newMember","newMemberAccount","subscribeRegistrar","subscribeMember","oldRegistrarAccount","rewardQueue","unsubscribe","newRegistrarAccount","onAccountChange","acc","createVaultSubscription","tokenAccount","parseTokenAccount","vaultStake","spt","Header","isAppReady","isRefreshing","setIsRefreshing","AppBar","boxShadow","Toolbar","SerumLogoButton","BarButton","hrefClient","href","srmFaucet","CircularProgress","IconButton","NetworkSelector","WalletConnectButton","UserSelector","Button","alt","src","Link","textDecoration","Typography","anchorEl","setAnchorEl","handleClose","currentTarget","Menu","Boolean","n","MenuItem","Select","displayEmpty","renderValue","showDisconnect","connect","Footer","envDisplay","setEnvDisplay","isDisconnected","zIndex","bottom","backgroundColor","borderTop","left","borderRadius","FooterButton","isEnd","overflowY","right","borderTopLeftRadius","NetworkEnvironment","registrarAddress","msrmFaucet","Layout","refresh","setRefresh","minHeight","RiskBar","window","localStorage","getItem","DisconnectedSplash","RiskDisclosureForm","onConsent","setItem","useStyles","makeStyles","theme","root","spacing","classes","className","LinearProgress","OwnedTokenAccountsSelect","ota","fromAccount","setFromAccount","pk","ownedTokenAccount","activeRegistrar","RegistrarSelect","selectedRegistrar","tokenInfos","getImage","get","registrarToDisplayLabel","entry","logoURI","Me","MemberBalancesCard","lockedVault","lockedVaultStake","lockedVaultPw","lockedSpt","tables","description","balance","pending","Card","CardContent","BalanceTable","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","row","scope","vestingSigner","availableForWithdrawal","setSigners","simulateTransaction","resp","log","logs","JSON","parse","result","RewardsList","rewards","List","RewardListItem","rli","ListItem","ListItemText","dateLabel","vendor","fromLabel","visibility","reward","needsClaim","total","Collapse","RewardListItemDetails","poolTokenSupply","expiryTs","toLocaleDateString","expiryReceiver","expired","rewardEventQCursor","RewardTypeViewModel","TabModel","RewardListItemViewModel","cursor","ctx","event","rewardEventQueue","tail","sptAccount","lockedSptAccount","ownsPoolShares","notYetClaimed","rewardsCursor","isEligible","lastStakeTs","DropRewardButton","showDialog","setShowDialog","DropRewardDialog","Unlocked","rewardTypeTab","setRewardTypeTab","Dialog","DialogTitle","DialogContent","Tabs","_e","Tab","Locked","DropUnlockedForm","DropLockedForm","snack","rewardDisplayAmount","setRewardDisplayAmount","setExpiryTs","depositor","setDepositor","setMint","isSendEnabled","sendUnlockedReward","notification","serumCmn","lockedRewardAmount","rewardKind","unlocked","vendorVault","vendorSigner","depositorAuthority","rewardVendor","dropReward","DropVendorForm","onCancel","setStartTs","setEndTs","periodCount","setPeriodCount","sendLockedRewards","rewardAmount","mintOptions","f","FormHelperText","FormControl","InputLabel","TextField","id","InputLabelProps","shrink","parseFloat","InputProps","inputProps","min","d","getTime","DialogActions","ClaimRewardButton","setToken","clickHandler","_vendorSigner","vendoredVesting","vendoredVestingVault","vendoredVestingSigner","createVesting","meta","lockupProgram","cmn","createTokenAccountInstrs","claimRewardLocked","claimReward","to","unlockedAlloc","Rewards","events","rewardEvents","fromMessage","nextReward","shift","Paper","VestingAccountsSelect","deposit","availableAmount","outstanding","sub","whitelistOwned","MyNode","tab","setTab","MyNodeBanner","Container","showDepositDialog","setShowDepositDialog","showWithdrawDialog","setShowWithdrawDialog","createStakeAccount","memberSignerPublicKey","createBalanceSandbox","mainTx","lockedTx","SystemProgram","getMinimumBalanceForRentExemption","size","fromPubkey","newAccountPubkey","basePubkey","lamports","space","createAccountWithSeed","createMember","allTxs","sendAll","skipPreflight","txSigs","memberProgramAccount","HoverSpan","styled","span","DepositDialog","WithdrawDialog","TransferDialog","contextText","onTransfer","displayAmount","relayData","_memberSigner","_vestingSigner","relayAccounts","whitelistedProgram","whitelistedProgramVault","whitelistedProgramVaultAuthority","transfer","whitelistWithdraw","updatedVestingAccount","getTokenAccount","whitelistDeposit","withdraw","setDisplayAmount","setFrom","setVesting","maxDisplayAmount","setMaxDisplayAmount","submitBtnDisabled","TransitionComponent","Transition","keepMounted","FormControlLabel","Switch","max","_maxDisplayAmount","forwardRef","ref","Slide","direction","MyNodePage","NewVestingButton","NewVestingDialog","defaultStartDate","defaultStartTs","defaultEndDate","defaultEndTs","setBeneficiary","isValidBeneficiary","displayBeneficiaryError","startTimestamp","setStartTimestamp","timestamp","setTimestamp","isLoading","setIsLoading","submitBtnEnabled","createVestingClickHandler","beneficiaryPublicKey","beneficiaryAccount","vestingVault","vestingAccount","helperText","defaultValue","VestingAccountCard","expanded","setExpanded","hover","setHover","displayFn","input","outstandingLabel","tsOverflow","mod","shiftedStartTs","period","vestingDates","Array","formatDate","rewardOverflow","startBalance","rewardPerPeriod","cumulativeVesting","k","startLabel","endLabel","urlSuffix","explorerClusterSuffix","setAvailableForWithdrawal","withdrawalAccount","setWithdrawalAccount","_availableForWithdrawal","withdrawEnabled","gtn","withTx","realizor","newVesting","program","metadata","grantor","onMouseOver","onMouseOut","ListItemIcon","toBase58","rel","labels","series","options","axisY","FixedScaleAxis","low","high","ticks","lineSmooth","Interpolation","step","split","getMonth","getDate","getFullYear","Vestings","LockupPage","MultisigPage","MultisigInstancePage","path","useLocation","pathname","App","createMuiTheme","palette","default","typography","fontFamily","join","overrides","CssBaseline","maxSnack","basename","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","beforeLabel","afterLabel","execTx","ViewTransactionOnExplorerButton","sha256","registrySigner","createSptIx","createVaultIx","createVaultStakeIx","createVaultPwIx","tx0","Transaction","add","rewardQ","head","msrm","maps","oxy","fida","devnet","token1","token2","localhost"],"mappings":"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","file":"static/js/main.2302898c.chunk.js","sourcesContent":["\"use strict\";\n// @ts-nocheck\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setLayoutEncoder = exports.setLayoutDecoder = exports.accountFlagsLayout = exports.selfTradeBehaviorLayout = exports.orderTypeLayout = exports.sideLayout = exports.VersionedLayout = exports.WideBits = exports.u128 = exports.u64 = exports.publicKeyLayout = exports.zeros = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nclass Zeros extends buffer_layout_1.Blob {\n    decode(b, offset) {\n        const slice = super.decode(b, offset);\n        if (!slice.every((v) => v === 0)) {\n            throw new Error('nonzero padding bytes');\n        }\n        return slice;\n    }\n}\nfunction zeros(length) {\n    return new Zeros(length);\n}\nexports.zeros = zeros;\nclass PublicKeyLayout extends buffer_layout_1.Blob {\n    constructor(property) {\n        super(32, property);\n    }\n    decode(b, offset) {\n        return new web3_js_1.PublicKey(super.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return super.encode(src.toBuffer(), b, offset);\n    }\n}\nfunction publicKeyLayout(property) {\n    return new PublicKeyLayout(property);\n}\nexports.publicKeyLayout = publicKeyLayout;\nclass BNLayout extends buffer_layout_1.Blob {\n    decode(b, offset) {\n        return new bn_js_1.default(super.decode(b, offset), 10, 'le');\n    }\n    encode(src, b, offset) {\n        return super.encode(src.toArrayLike(Buffer, 'le', this.span), b, offset);\n    }\n}\nfunction u64(property) {\n    return new BNLayout(8, property);\n}\nexports.u64 = u64;\nfunction u128(property) {\n    return new BNLayout(16, property);\n}\nexports.u128 = u128;\nclass WideBits extends buffer_layout_1.Layout {\n    constructor(property) {\n        super(8, property);\n        this._lower = buffer_layout_1.bits(buffer_layout_1.u32(), false);\n        this._upper = buffer_layout_1.bits(buffer_layout_1.u32(), false);\n    }\n    addBoolean(property) {\n        if (this._lower.fields.length < 32) {\n            this._lower.addBoolean(property);\n        }\n        else {\n            this._upper.addBoolean(property);\n        }\n    }\n    decode(b, offset = 0) {\n        const lowerDecoded = this._lower.decode(b, offset);\n        const upperDecoded = this._upper.decode(b, offset + this._lower.span);\n        return { ...lowerDecoded, ...upperDecoded };\n    }\n    encode(src, b, offset = 0) {\n        return (this._lower.encode(src, b, offset) +\n            this._upper.encode(src, b, offset + this._lower.span));\n    }\n}\nexports.WideBits = WideBits;\nclass VersionedLayout extends buffer_layout_1.Layout {\n    constructor(version, inner, property) {\n        super(inner.span > 0 ? inner.span + 1 : inner.span, property);\n        this.version = version;\n        this.inner = inner;\n    }\n    decode(b, offset = 0) {\n        // if (b.readUInt8(offset) !== this._version) {\n        //   throw new Error('invalid version');\n        // }\n        return this.inner.decode(b, offset + 1);\n    }\n    encode(src, b, offset = 0) {\n        b.writeUInt8(this.version, offset);\n        return 1 + this.inner.encode(src, b, offset + 1);\n    }\n    getSpan(b, offset = 0) {\n        return 1 + this.inner.getSpan(b, offset + 1);\n    }\n}\nexports.VersionedLayout = VersionedLayout;\nclass EnumLayout extends buffer_layout_1.UInt {\n    constructor(values, span, property) {\n        super(span, property);\n        this.values = values;\n    }\n    encode(src, b, offset) {\n        if (this.values[src] !== undefined) {\n            return super.encode(this.values[src], b, offset);\n        }\n        throw new Error('Invalid ' + this.property);\n    }\n    decode(b, offset) {\n        const decodedValue = super.decode(b, offset);\n        const entry = Object.entries(this.values).find(([, value]) => value === decodedValue);\n        if (entry) {\n            return entry[0];\n        }\n        throw new Error('Invalid ' + this.property);\n    }\n}\nfunction sideLayout(property) {\n    return new EnumLayout({ buy: 0, sell: 1 }, 4, property);\n}\nexports.sideLayout = sideLayout;\nfunction orderTypeLayout(property) {\n    return new EnumLayout({ limit: 0, ioc: 1, postOnly: 2 }, 4, property);\n}\nexports.orderTypeLayout = orderTypeLayout;\nfunction selfTradeBehaviorLayout(property) {\n    return new EnumLayout({ decrementTake: 0, cancelProvide: 1, abortTransaction: 2 }, 4, property);\n}\nexports.selfTradeBehaviorLayout = selfTradeBehaviorLayout;\nconst ACCOUNT_FLAGS_LAYOUT = new WideBits();\nACCOUNT_FLAGS_LAYOUT.addBoolean('initialized');\nACCOUNT_FLAGS_LAYOUT.addBoolean('market');\nACCOUNT_FLAGS_LAYOUT.addBoolean('openOrders');\nACCOUNT_FLAGS_LAYOUT.addBoolean('requestQueue');\nACCOUNT_FLAGS_LAYOUT.addBoolean('eventQueue');\nACCOUNT_FLAGS_LAYOUT.addBoolean('bids');\nACCOUNT_FLAGS_LAYOUT.addBoolean('asks');\nfunction accountFlagsLayout(property = 'accountFlags') {\n    return ACCOUNT_FLAGS_LAYOUT.replicate(property);\n}\nexports.accountFlagsLayout = accountFlagsLayout;\nfunction setLayoutDecoder(layout, decoder) {\n    const originalDecode = layout.decode;\n    layout.decode = function decode(b, offset = 0) {\n        return decoder(originalDecode.call(this, b, offset));\n    };\n}\nexports.setLayoutDecoder = setLayoutDecoder;\nfunction setLayoutEncoder(layout, encoder) {\n    const originalEncode = layout.encode;\n    layout.encode = function encode(src, b, offset) {\n        return originalEncode.call(this, encoder(src), b, offset);\n    };\n    return layout;\n}\nexports.setLayoutEncoder = setLayoutEncoder;\n//# sourceMappingURL=layout.js.map","type Skin = {\n  active: string;\n  ready: string;\n  inactive: string;\n  notReady: string;\n  deactivating: string;\n};\n\nconst _skin: Skin = {\n  active: '#43a047',\n  ready: '#3f51b5',\n  notReady: '#ccc',\n  inactive: 'red',\n  deactivating: 'rgb(255, 121, 42)',\n};\n\nexport function instance(): Skin {\n  return _skin;\n}\n","import { struct, Layout } from 'buffer-layout';\nimport { rustEnum } from '@project-serum/borsh';\n\n// Simplified since we only use the SetBuffer variant.\nexport type IdlInstruction =\n  | Create\n  | CreateBuffer\n  | Write\n  | SetBuffer\n  | SetAuthority;\n\ntype Create = {};\ntype CreateBuffer = {};\ntype Write = {};\ntype SetBuffer = {};\ntype SetAuthority = {};\n\nconst IDL_INSTRUCTION_LAYOUT: Layout<IdlInstruction> = rustEnum([\n  struct([], 'create'),\n  struct([], 'createBuffer'),\n  struct([], 'write'),\n  struct([], 'setBuffer'),\n  struct([], 'setAuthority'),\n]);\n\nexport function encodeInstruction(i: IdlInstruction): Buffer {\n  const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n  const len = IDL_INSTRUCTION_LAYOUT.encode(i, buffer);\n  return Buffer.concat([IDL_TAG, buffer.slice(0, len)]);\n}\n\n// Reverse for little endian.\nexport const IDL_TAG = Buffer.from('0a69e9a778bcf440', 'hex').reverse();\n","export type Action = {\n  type: ActionType;\n  item: any;\n};\n\nexport enum ActionType {\n  // Common.\n  CommonTriggerBootstrap,\n  CommonAppWillBootstrap,\n  CommonAppDidBootstrap,\n  CommonTriggerShutdown,\n  CommonDidShutdown,\n  CommonWalletDidConnect,\n  CommonWalletDidDisconnect,\n  CommonWalletSetProvider,\n  CommonSetNetwork,\n  CommonOwnedTokenAccountsSet,\n  CommonOwnedTokenAccountsUpdate,\n  CommonWalletReset,\n\n  // Lockup.\n  LockupSetVestings,\n  LockupUpdateVesting,\n  LockupCreateVesting,\n\n  // Registry.\n  RegistrySetMember,\n  RegistrySetRegistrar,\n  RegistrySetPendingWithdrawals,\n  RegistryCreatePendingWithdrawal,\n  RegistryUpdatePendingWithdrawal,\n\n  // Accounts.\n  AccountAdd,\n  AccountUpdate,\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.closeAccount = exports.mintTo = exports.setAuthority = exports.revoke = exports.approve = exports.transfer = exports.initializeAccount = exports.initializeMint = exports.decodeTokenInstructionData = exports.SRM_DECIMALS = exports.SRM_MINT = exports.MSRM_DECIMALS = exports.MSRM_MINT = exports.WRAPPED_SOL_MINT = exports.TOKEN_PROGRAM_ID = exports.CLOSE_ACCOUNT_OWNER_INDEX = exports.CLOSE_ACCOUNT_DESTINATION_INDEX = exports.CLOSE_ACCOUNT_SOURCE_INDEX = exports.TRANSFER_OWNER_INDEX = exports.TRANSFER_DESTINATION_INDEX = exports.TRANSFER_SOURCE_INDEX = exports.INITIALIZE_ACCOUNT_OWNER_INDEX = exports.INITIALIZE_ACCOUNT_MINT_INDEX = exports.INITIALIZE_ACCOUNT_ACCOUNT_INDEX = void 0;\nconst BufferLayout = __importStar(require(\"buffer-layout\"));\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst layout_1 = require(\"./layout\");\n// NOTE: Update these if the position of arguments for the initializeAccount instruction changes\nexports.INITIALIZE_ACCOUNT_ACCOUNT_INDEX = 0;\nexports.INITIALIZE_ACCOUNT_MINT_INDEX = 1;\nexports.INITIALIZE_ACCOUNT_OWNER_INDEX = 2;\n// NOTE: Update these if the position of arguments for the transfer instruction changes\nexports.TRANSFER_SOURCE_INDEX = 0;\nexports.TRANSFER_DESTINATION_INDEX = 1;\nexports.TRANSFER_OWNER_INDEX = 2;\n// NOTE: Update these if the position of arguments for the closeAccount instruction changes\nexports.CLOSE_ACCOUNT_SOURCE_INDEX = 0;\nexports.CLOSE_ACCOUNT_DESTINATION_INDEX = 1;\nexports.CLOSE_ACCOUNT_OWNER_INDEX = 2;\nexports.TOKEN_PROGRAM_ID = new web3_js_1.PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\nexports.WRAPPED_SOL_MINT = new web3_js_1.PublicKey('So11111111111111111111111111111111111111112');\nexports.MSRM_MINT = new web3_js_1.PublicKey('MSRMcoVyrFxnSgo5uXwone5SKcGhT1KEJMFEkMEWf9L');\nexports.MSRM_DECIMALS = 0;\nexports.SRM_MINT = new web3_js_1.PublicKey('SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt');\nexports.SRM_DECIMALS = 6;\nconst LAYOUT = BufferLayout.union(BufferLayout.u8('instruction'));\nLAYOUT.addVariant(0, BufferLayout.struct([\n    BufferLayout.u8('decimals'),\n    layout_1.publicKeyLayout('mintAuthority'),\n    BufferLayout.u8('freezeAuthorityOption'),\n    layout_1.publicKeyLayout('freezeAuthority'),\n]), 'initializeMint');\nLAYOUT.addVariant(1, BufferLayout.struct([]), 'initializeAccount');\nLAYOUT.addVariant(3, BufferLayout.struct([BufferLayout.nu64('amount')]), 'transfer');\nLAYOUT.addVariant(4, BufferLayout.struct([BufferLayout.nu64('amount')]), 'approve');\nLAYOUT.addVariant(5, BufferLayout.struct([]), 'revoke');\nLAYOUT.addVariant(6, BufferLayout.struct([\n    BufferLayout.u8('authorityType'),\n    BufferLayout.u8('newAuthorityOption'),\n    layout_1.publicKeyLayout('newAuthority'),\n]), 'setAuthority');\nLAYOUT.addVariant(7, BufferLayout.struct([BufferLayout.nu64('amount')]), 'mintTo');\nLAYOUT.addVariant(8, BufferLayout.struct([BufferLayout.nu64('amount')]), 'burn');\nLAYOUT.addVariant(9, BufferLayout.struct([]), 'closeAccount');\nconst instructionMaxSpan = Math.max(...Object.values(LAYOUT.registry).map((r) => r.span));\nfunction encodeTokenInstructionData(instruction) {\n    const b = Buffer.alloc(instructionMaxSpan);\n    const span = LAYOUT.encode(instruction, b);\n    return b.slice(0, span);\n}\nfunction decodeTokenInstructionData(instruction) {\n    return LAYOUT.decode(instruction);\n}\nexports.decodeTokenInstructionData = decodeTokenInstructionData;\nfunction initializeMint({ mint, decimals, mintAuthority, freezeAuthority = null, }) {\n    const keys = [\n        { pubkey: mint, isSigner: false, isWritable: true },\n        { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            initializeMint: {\n                decimals,\n                mintAuthority,\n                freezeAuthorityOption: !!freezeAuthority,\n                freezeAuthority: freezeAuthority || new web3_js_1.PublicKey(0),\n            },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.initializeMint = initializeMint;\nfunction initializeAccount({ account, mint, owner }) {\n    const keys = [\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: owner, isSigner: false, isWritable: false },\n        { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            initializeAccount: {},\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.initializeAccount = initializeAccount;\nfunction transfer({ source, destination, amount, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            transfer: { amount },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.transfer = transfer;\nfunction approve({ source, delegate, amount, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: delegate, isSigner: false, isWritable: false },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            approve: { amount },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.approve = approve;\nfunction revoke({ source, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            revoke: {},\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.revoke = revoke;\nfunction setAuthority({ target, currentAuthority, newAuthority, authorityType, }) {\n    const keys = [\n        { pubkey: target, isSigner: false, isWritable: true },\n        { pubkey: currentAuthority, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            setAuthority: {\n                authorityType,\n                newAuthorityOption: !!newAuthority,\n                newAuthority,\n            },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.setAuthority = setAuthority;\nfunction mintTo({ mint, destination, amount, mintAuthority }) {\n    const keys = [\n        { pubkey: mint, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n        { pubkey: mintAuthority, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            mintTo: { amount },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.mintTo = mintTo;\nfunction closeAccount({ source, destination, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            closeAccount: {},\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.closeAccount = closeAccount;\n//# sourceMappingURL=token-instructions.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MARKETS = exports.TOKEN_MINTS = exports.getLayoutVersion = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst markets_json_1 = __importDefault(require(\"./markets.json\"));\nconst token_mints_json_1 = __importDefault(require(\"./token-mints.json\"));\nfunction getLayoutVersion(programId) {\n    if (programId.equals(new web3_js_1.PublicKey('4ckmDgGdxQoPDLUkDT3vHgSAkzA3QRdNq5ywwY4sUSJn')) ||\n        programId.equals(new web3_js_1.PublicKey('BJ3jrUzddfuSrZHXSCxMUUQsjKEyLmuuyZebkcaFp2fg'))) {\n        return 1;\n    }\n    else if (programId.equals(new web3_js_1.PublicKey('EUqojwWA2rd19FZrzeBncJsm38Jm1hEhE3zsmX3bRc2o'))) {\n        return 2;\n    }\n    else {\n        return 3;\n    }\n}\nexports.getLayoutVersion = getLayoutVersion;\nexports.TOKEN_MINTS = token_mints_json_1.default.map((mint) => {\n    return {\n        address: new web3_js_1.PublicKey(mint.address),\n        name: mint.name,\n    };\n});\nexports.MARKETS = markets_json_1.default.map((market) => {\n    return {\n        address: new web3_js_1.PublicKey(market.address),\n        name: market.name,\n        programId: new web3_js_1.PublicKey(market.programId),\n        deprecated: market.deprecated,\n    };\n});\n//# sourceMappingURL=tokens_and_markets.js.map","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { useSnackbar } from 'notistack';\nimport { encode as encodeBase64 } from 'js-base64';\nimport Container from '@material-ui/core/Container';\nimport AppBar from '@material-ui/core/AppBar';\nimport GavelIcon from '@material-ui/icons/Gavel';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport Paper from '@material-ui/core/Paper';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ReceiptIcon from '@material-ui/icons/Receipt';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport Collapse from '@material-ui/core/Collapse';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport InfoIcon from '@material-ui/icons/Info';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport BuildIcon from '@material-ui/icons/Build';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport CardContent from '@material-ui/core/CardContent';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport AddIcon from '@material-ui/icons/Add';\nimport List from '@material-ui/core/List';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport BN from 'bn.js';\nimport {\n  Account,\n  PublicKey,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_CLOCK_PUBKEY,\n} from '@solana/web3.js';\nimport * as anchor from '@project-serum/anchor';\nimport { useWallet } from '../common/WalletProvider';\nimport { ViewTransactionOnExplorerButton } from '../common/Notification';\nimport * as idl from '../../utils/idl';\n\nexport default function Multisig({ multisig }: { multisig?: PublicKey }) {\n  const history = useHistory();\n  const [multisigAddress, setMultisigAddress] = useState('');\n  const disabled = !isValidPubkey(multisigAddress);\n  const searchFn = () => {\n    history.push(`/multisig/${multisigAddress}`);\n  };\n  return (\n    <div>\n      <div\n        style={{\n          paddingLeft: '16px',\n          paddingRight: '16px',\n          borderBottom: 'solid 1pt #ccc',\n          display: 'flex',\n        }}\n      >\n        <input\n          style={{\n            flex: 1,\n            background: 'none',\n            padding: '16px',\n            border: 'none',\n            outlineWidth: 0,\n          }}\n          placeholder=\"Multisig address\"\n          value={multisigAddress}\n          onChange={e => setMultisigAddress(e.target.value as string)}\n          onKeyPress={e => {\n            if (e.key === 'Enter') {\n              searchFn();\n            }\n          }}\n        />\n        <IconButton disabled={disabled} onClick={searchFn}>\n          <SearchIcon />\n        </IconButton>\n        <NewMultisigButton />\n      </div>\n      <div>{multisig && <MultisigInstance multisig={multisig} />}</div>\n    </div>\n  );\n}\n\nfunction isValidPubkey(addr: string): boolean {\n  try {\n    new PublicKey(addr);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n\nexport function MultisigInstance({ multisig }: { multisig: PublicKey }) {\n  const { multisigClient } = useWallet();\n  const [multisigAccount, setMultisigAccount] = useState<any>(undefined);\n  const [transactions, setTransactions] = useState<any>(null);\n  const [showSignerDialog, setShowSignerDialog] = useState(false);\n  const [showAddTransactionDialog, setShowAddTransactionDialog] = useState(\n    false,\n  );\n  const [forceRefresh, setForceRefresh] = useState(false);\n  useEffect(() => {\n    multisigClient.account\n      .multisig(multisig)\n      .then((account: any) => {\n        setMultisigAccount(account);\n      })\n      .catch((err: any) => {\n        console.error(err);\n        setMultisigAccount(null);\n      });\n  }, [multisig, multisigClient.account]);\n  useEffect(() => {\n    multisigClient.account.transaction.all(multisig.toBuffer()).then(txs => {\n      setTransactions(txs);\n    });\n  }, [multisigClient.account.transaction, multisig, forceRefresh]);\n  useEffect(() => {\n    multisigClient.account.multisig\n      .subscribe(multisig)\n      .on('change', account => {\n        setMultisigAccount(account);\n      });\n  }, [multisigClient, multisig]);\n  return (\n    <Container fixed maxWidth=\"md\" style={{ marginBottom: '16px' }}>\n      <div>\n        <Card style={{ marginTop: '24px' }}>\n          {multisigAccount === undefined ? (\n            <div style={{ padding: '16px' }}>\n              <CircularProgress\n                style={{\n                  display: 'block',\n                  marginLeft: 'auto',\n                  marginRight: 'auto',\n                }}\n              />\n            </div>\n          ) : multisigAccount === null ? (\n            <CardContent>\n              <Typography\n                color=\"textSecondary\"\n                style={{\n                  padding: '24px',\n                  textAlign: 'center',\n                }}\n              >\n                Multisig not found\n              </Typography>\n            </CardContent>\n          ) : (\n            <></>\n          )}\n        </Card>\n        {multisigAccount && (\n          <Paper>\n            <AppBar\n              style={{ marginTop: '24px' }}\n              position=\"static\"\n              color=\"default\"\n              elevation={1}\n            >\n              <Toolbar>\n                <Typography variant=\"h6\" style={{ flexGrow: 1 }} component=\"h2\">\n                  {multisig.toString()} | {multisigAccount.threshold.toString()}{' '}\n                  of {multisigAccount.owners.length.toString()} Multisig\n                </Typography>\n                <Tooltip title=\"Signer\" arrow>\n                  <IconButton onClick={() => setShowSignerDialog(true)}>\n                    <InfoIcon />\n                  </IconButton>\n                </Tooltip>\n                <Tooltip title=\"Add\" arrow>\n                  <IconButton onClick={() => setShowAddTransactionDialog(true)}>\n                    <AddIcon />\n                  </IconButton>\n                </Tooltip>\n              </Toolbar>\n            </AppBar>\n            <List disablePadding>\n              {transactions === null ? (\n                <div style={{ padding: '16px' }}>\n                  <CircularProgress\n                    style={{\n                      display: 'block',\n                      marginLeft: 'auto',\n                      marginRight: 'auto',\n                    }}\n                  />\n                </div>\n              ) : transactions.length === 0 ? (\n                <ListItem>\n                  <ListItemText primary=\"No transactions found\" />\n                </ListItem>\n              ) : (\n                transactions.map((tx: any) => (\n                  <TxListItem\n                    key={tx.publicKey.toString()}\n                    multisig={multisig}\n                    multisigAccount={multisigAccount}\n                    tx={tx}\n                  />\n                ))\n              )}\n            </List>\n          </Paper>\n        )}\n      </div>\n      <AddTransactionDialog\n        multisig={multisig}\n        open={showAddTransactionDialog}\n        onClose={() => setShowAddTransactionDialog(false)}\n        didAddTransaction={() => setForceRefresh(!forceRefresh)}\n      />\n      {multisigAccount && (\n        <SignerDialog\n          multisig={multisig}\n          multisigAccount={multisigAccount}\n          open={showSignerDialog}\n          onClose={() => setShowSignerDialog(false)}\n        />\n      )}\n    </Container>\n  );\n}\n\nfunction NewMultisigButton() {\n  const [open, setOpen] = useState(false);\n  return (\n    <div>\n      <IconButton onClick={() => setOpen(true)}>\n        <AddIcon />\n      </IconButton>\n      <NewMultisigDialog open={open} onClose={() => setOpen(false)} />\n    </div>\n  );\n}\n\nfunction NewMultisigDialog({\n  open,\n  onClose,\n}: {\n  open: boolean;\n  onClose: () => void;\n}) {\n  const history = useHistory();\n  const { multisigClient } = useWallet();\n  const { enqueueSnackbar } = useSnackbar();\n  const [threshold, setThreshold] = useState(2);\n  // @ts-ignore\n  const zeroAddr = new PublicKey().toString();\n  const [participants, setParticipants] = useState([\n    multisigClient.provider.wallet.publicKey.toString(),\n    zeroAddr,\n  ]);\n  const _onClose = () => {\n    onClose();\n    setThreshold(2);\n    setParticipants([zeroAddr, zeroAddr]);\n  };\n  const createMultisig = async () => {\n    enqueueSnackbar('Creating multisig', {\n      variant: 'info',\n    });\n    const multisig = new Account();\n    // Disc. + threshold + nonce.\n    const baseSize = 8 + 8 + 1;\n    // Can only grow the participant set by 2x the initialized value.\n    const ownerSize = participants.length * 2 * 32 + 8;\n    const multisigSize = baseSize + ownerSize;\n    const [, nonce] = await PublicKey.findProgramAddress(\n      [multisig.publicKey.toBuffer()],\n      multisigClient.programId,\n    );\n    const owners = participants.map(p => new PublicKey(p));\n    const tx = await multisigClient.rpc.createMultisig(\n      owners,\n      new BN(threshold),\n      nonce,\n      {\n        accounts: {\n          multisig: multisig.publicKey,\n          rent: SYSVAR_RENT_PUBKEY,\n        },\n        signers: [multisig],\n        instructions: [\n          await multisigClient.account.multisig.createInstruction(\n            multisig,\n            // @ts-ignore\n            multisigSize,\n          ),\n        ],\n      },\n    );\n    enqueueSnackbar(`Multisig created: ${multisig.publicKey.toString()}`, {\n      variant: 'success',\n      action: <ViewTransactionOnExplorerButton signature={tx} />,\n    });\n    _onClose();\n    history.push(`/multisig/${multisig.publicKey.toString()}`);\n  };\n  return (\n    <Dialog fullWidth open={open} onClose={_onClose} maxWidth=\"md\">\n      <DialogTitle>\n        <Typography variant=\"h4\" component=\"h2\">\n          New Multisig\n        </Typography>\n      </DialogTitle>\n      <DialogContent>\n        <TextField\n          fullWidth\n          label=\"Threshold\"\n          value={threshold}\n          type=\"number\"\n          onChange={e => setThreshold(parseInt(e.target.value) as number)}\n        />\n        {participants.map((p, idx) => (\n          <TextField\n            key={p}\n            fullWidth\n            label=\"Participant\"\n            value={p}\n            onChange={e => {\n              const p = [...participants];\n              p[idx] = e.target.value;\n              setParticipants(p);\n            }}\n          />\n        ))}\n        <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n          <IconButton\n            onClick={() => {\n              const p = [...participants];\n              // @ts-ignore\n              p.push(new PublicKey().toString());\n              setParticipants(p);\n            }}\n          >\n            <AddIcon />\n          </IconButton>\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={_onClose}>Cancel</Button>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          color=\"primary\"\n          onClick={() =>\n            createMultisig().catch(err => {\n              const str = err ? err.toString() : '';\n              enqueueSnackbar(`Error creating multisig: ${str}`, {\n                variant: 'error',\n              });\n            })\n          }\n        >\n          Create\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nfunction TxListItem({\n  multisig,\n  multisigAccount,\n  tx,\n}: {\n  multisig: PublicKey;\n  multisigAccount: any;\n  tx: any;\n}) {\n  const { enqueueSnackbar } = useSnackbar();\n  const { multisigClient } = useWallet();\n  const [open, setOpen] = useState(false);\n  const [txAccount, setTxAccount] = useState(tx.account);\n  useEffect(() => {\n    multisigClient.account.transaction\n      .subscribe(tx.publicKey)\n      .on('change', account => {\n        setTxAccount(account);\n      });\n  }, [multisigClient, multisig, tx.publicKey]);\n  const rows = [\n    {\n      field: 'Program ID',\n      value: txAccount.programId.toString(),\n    },\n    {\n      field: 'Did execute',\n      value: txAccount.didExecute.toString(),\n    },\n    {\n      field: 'Instruction data',\n      value: (\n        <code\n          style={{\n            wordBreak: 'break-word',\n            width: '370px',\n            background: 'black',\n            color: '#ffffff',\n            float: 'right',\n            textAlign: 'left',\n          }}\n        >\n          {encodeBase64(txAccount.data)}\n        </code>\n      ),\n    },\n    {\n      field: 'Multisig',\n      value: txAccount.multisig.toString(),\n    },\n    {\n      field: 'Transaction account',\n      value: tx.publicKey.toString(),\n    },\n    {\n      field: 'Owner set seqno',\n      value: txAccount.ownerSetSeqno.toString(),\n    },\n  ];\n  const msAccountRows = multisigAccount.owners.map(\n    (owner: PublicKey, idx: number) => {\n      return {\n        field: owner.toString(),\n        value: txAccount.signers[idx] ? <CheckIcon /> : <RemoveIcon />,\n      };\n    },\n  );\n  const approve = async () => {\n    enqueueSnackbar('Approving transaction', {\n      variant: 'info',\n    });\n    await multisigClient.rpc.approve({\n      accounts: {\n        multisig,\n        transaction: tx.publicKey,\n        owner: multisigClient.provider.wallet.publicKey,\n      },\n    });\n    enqueueSnackbar('Transaction approved', {\n      variant: 'success',\n    });\n  };\n  const execute = async () => {\n    enqueueSnackbar('Executing transaction', {\n      variant: 'info',\n    });\n    const [multisigSigner] = await PublicKey.findProgramAddress(\n      [multisig.toBuffer()],\n      multisigClient.programId,\n    );\n    await multisigClient.rpc.executeTransaction({\n      accounts: {\n        multisig,\n        multisigSigner,\n        transaction: tx.publicKey,\n      },\n      remainingAccounts: txAccount.accounts\n        .map((t: any) => {\n          if (t.pubkey.equals(multisigSigner)) {\n            return { ...t, isSigner: false };\n          }\n          return t;\n        })\n        .concat({\n          pubkey: txAccount.programId,\n          isWritable: false,\n          isSigner: false,\n        }),\n    });\n    enqueueSnackbar('Transaction executed', {\n      variant: 'success',\n    });\n  };\n  return (\n    <>\n      <ListItem button onClick={() => setOpen(!open)}>\n        <ListItemIcon>{icon(tx, multisigClient)}</ListItemIcon>\n        {ixLabel(tx, multisigClient)}\n        {txAccount.didExecute && (\n          <CheckCircleIcon style={{ marginRight: '16px' }} />\n        )}\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <div style={{ background: '#ececec', padding: '10px' }}>\n          <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <Button\n              style={{ marginRight: '10px' }}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() =>\n                approve().catch(err => {\n                  let errStr = '';\n                  if (err) {\n                    errStr = err.toString();\n                  }\n                  enqueueSnackbar(`Unable to approve transaction: ${errStr}`, {\n                    variant: 'error',\n                  });\n                })\n              }\n            >\n              Approve\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() =>\n                execute().catch(err => {\n                  let errStr = '';\n                  if (err) {\n                    errStr = err.toString();\n                  }\n                  enqueueSnackbar(`Unable to execute transaction: ${errStr}`, {\n                    variant: 'error',\n                  });\n                })\n              }\n            >\n              Execute\n            </Button>\n          </div>\n          <Card style={{ marginTop: '16px' }}>\n            <CardContent>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Transaction Field</TableCell>\n                    <TableCell align=\"right\">Value</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {rows.map(r => (\n                    <TableRow>\n                      <TableCell>{r.field}</TableCell>\n                      <TableCell align=\"right\">{r.value}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </CardContent>\n          </Card>\n          <Card style={{ marginTop: '16px' }}>\n            <CardContent>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Multisig Owner</TableCell>\n                    <TableCell align=\"right\">Did Sign</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {txAccount.ownerSetSeqno === multisigAccount.ownerSetSeqno &&\n                    msAccountRows.map((r: any) => (\n                      <TableRow>\n                        <TableCell>{r.field}</TableCell>\n                        <TableCell align=\"right\">{r.value}</TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n              {txAccount.ownerSetSeqno !== multisigAccount.ownerSetSeqno && (\n                <div style={{ marginTop: '16px' }}>\n                  <Typography\n                    color=\"textSecondary\"\n                    style={{ textAlign: 'center' }}\n                  >\n                    The owner set has changed since this transaction was created\n                  </Typography>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n          <Card style={{ marginTop: '16px' }}>\n            <CardContent>\n              <AccountsList accounts={txAccount.accounts} />\n            </CardContent>\n          </Card>\n        </div>\n      </Collapse>\n    </>\n  );\n}\n\nfunction ixLabel(tx: any, multisigClient: any) {\n  if (tx.account.programId.equals(BPF_LOADER_UPGRADEABLE_PID)) {\n    // Upgrade instruction.\n    if (tx.account.data.equals(Buffer.from([3, 0, 0, 0]))) {\n      return (\n        <ListItemText\n          primary=\"Program upgrade\"\n          secondary={tx.publicKey.toString()}\n        />\n      );\n    }\n  }\n  if (tx.account.programId.equals(multisigClient.programId)) {\n    const setThresholdSighash = multisigClient.coder.sighash(\n      'global',\n      'change_threshold',\n    );\n    if (setThresholdSighash.equals(tx.account.data.slice(0, 8))) {\n      return (\n        <ListItemText\n          primary=\"Set threshold\"\n          secondary={tx.publicKey.toString()}\n        />\n      );\n    }\n    const setOwnersSighash = multisigClient.coder.sighash(\n      'global',\n      'set_owners',\n    );\n    if (setOwnersSighash.equals(tx.account.data.slice(0, 8))) {\n      return (\n        <ListItemText\n          primary=\"Set owners\"\n          secondary={tx.publicKey.toString()}\n        />\n      );\n    }\n  }\n  if (idl.IDL_TAG.equals(tx.account.data.slice(0, 8))) {\n    return (\n      <ListItemText primary=\"Upgrade IDL\" secondary={tx.publicKey.toString()} />\n    );\n  }\n  return <ListItemText primary={tx.publicKey.toString()} />;\n}\n\nfunction AccountsList({ accounts }: { accounts: any }) {\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>Account</TableCell>\n          <TableCell align=\"right\">Writable</TableCell>\n          <TableCell align=\"right\">Signer</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {accounts.map((r: any) => (\n          <TableRow>\n            <TableCell>{r.pubkey.toString()}</TableCell>\n            <TableCell align=\"right\">{r.isWritable.toString()}</TableCell>\n            <TableCell align=\"right\">{r.isSigner.toString()}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}\n\nfunction SignerDialog({\n  multisig,\n  multisigAccount,\n  open,\n  onClose,\n}: {\n  multisig: PublicKey;\n  multisigAccount: any;\n  open: boolean;\n  onClose: () => void;\n}) {\n  const { multisigClient } = useWallet();\n  const [signer, setSigner] = useState<null | string>(null);\n  useEffect(() => {\n    PublicKey.findProgramAddress(\n      [multisig.toBuffer()],\n      multisigClient.programId,\n    ).then(addrNonce => setSigner(addrNonce[0].toString()));\n  }, [multisig, multisigClient.programId, setSigner]);\n  return (\n    <Dialog open={open} fullWidth onClose={onClose} maxWidth=\"md\">\n      <DialogTitle>\n        <Typography variant=\"h4\" component=\"h2\">\n          Multisig Info\n        </Typography>\n      </DialogTitle>\n      <DialogContent style={{ paddingBottom: '16px' }}>\n        <DialogContentText>\n          <b>Program derived address</b>: {signer}. This is the address one\n          should use as the authority for data governed by the multisig.\n        </DialogContentText>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Owners</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {multisigAccount.owners.map((r: any) => (\n              <TableRow>\n                <TableCell>{r.toString()}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Close</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nfunction AddTransactionDialog({\n  multisig,\n  open,\n  onClose,\n  didAddTransaction,\n}: {\n  multisig: PublicKey;\n  open: boolean;\n  onClose: () => void;\n  didAddTransaction: (tx: PublicKey) => void;\n}) {\n  return (\n    <Dialog open={open} fullWidth onClose={onClose} maxWidth=\"md\">\n      <DialogTitle>\n        <Typography variant=\"h4\" component=\"h2\">\n          New Transaction\n        </Typography>\n      </DialogTitle>\n      <DialogContent style={{ paddingBottom: '16px' }}>\n        <DialogContentText>\n          Create a new transaction to be signed by the multisig. This\n          transaction will not execute until enough owners have signed the\n          transaction.\n        </DialogContentText>\n        <List disablePadding>\n          <ProgramUpdateListItem\n            didAddTransaction={didAddTransaction}\n            multisig={multisig}\n            onClose={onClose}\n          />\n          <IdlUpgradeListItem\n            didAddTransaction={didAddTransaction}\n            multisig={multisig}\n            onClose={onClose}\n          />\n          <MultisigSetOwnersListItem\n            didAddTransaction={didAddTransaction}\n            multisig={multisig}\n            onClose={onClose}\n          />\n          <ChangeThresholdListItem\n            didAddTransaction={didAddTransaction}\n            multisig={multisig}\n            onClose={onClose}\n          />\n        </List>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nfunction ChangeThresholdListItem({\n  multisig,\n  onClose,\n  didAddTransaction,\n}: {\n  multisig: PublicKey;\n  onClose: Function;\n  didAddTransaction: (tx: PublicKey) => void;\n}) {\n  const [open, setOpen] = useState(false);\n  return (\n    <>\n      <ListItem button onClick={() => setOpen(open => !open)}>\n        <ListItemIcon>\n          <GavelIcon />\n        </ListItemIcon>\n        <ListItemText primary={'Change threshold'} />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <ChangeThresholdListItemDetails\n          didAddTransaction={didAddTransaction}\n          multisig={multisig}\n          onClose={onClose}\n        />\n      </Collapse>\n    </>\n  );\n}\n\nfunction ChangeThresholdListItemDetails({\n  multisig,\n  onClose,\n  didAddTransaction,\n}: {\n  multisig: PublicKey;\n  onClose: Function;\n  didAddTransaction: (tx: PublicKey) => void;\n}) {\n  const [threshold, setThreshold] = useState(2);\n  const { multisigClient } = useWallet();\n  // @ts-ignore\n  const { enqueueSnackbar } = useSnackbar();\n  const changeThreshold = async () => {\n    enqueueSnackbar('Creating change threshold transaction', {\n      variant: 'info',\n    });\n    const data = changeThresholdData(multisigClient, threshold);\n    const [multisigSigner] = await PublicKey.findProgramAddress(\n      [multisig.toBuffer()],\n      multisigClient.programId,\n    );\n    const accounts = [\n      {\n        pubkey: multisig,\n        isWritable: true,\n        isSigner: false,\n      },\n      {\n        pubkey: multisigSigner,\n        isWritable: false,\n        isSigner: true,\n      },\n    ];\n    const transaction = new Account();\n    const txSize = 1000; // todo\n    const tx = await multisigClient.rpc.createTransaction(\n      multisigClient.programId,\n      accounts,\n      data,\n      {\n        accounts: {\n          multisig,\n          transaction: transaction.publicKey,\n          proposer: multisigClient.provider.wallet.publicKey,\n          rent: SYSVAR_RENT_PUBKEY,\n        },\n        signers: [transaction],\n        instructions: [\n          await multisigClient.account.transaction.createInstruction(\n            transaction,\n            // @ts-ignore\n            txSize,\n          ),\n        ],\n      },\n    );\n    enqueueSnackbar('Transaction created', {\n      variant: 'success',\n      action: <ViewTransactionOnExplorerButton signature={tx} />,\n    });\n    didAddTransaction(transaction.publicKey);\n    onClose();\n  };\n  return (\n    <div\n      style={{\n        background: '#f1f0f0',\n        paddingLeft: '24px',\n        paddingRight: '24px',\n      }}\n    >\n      <TextField\n        fullWidth\n        style={{ marginTop: '16px' }}\n        label=\"Threshold\"\n        value={threshold}\n        type=\"number\"\n        onChange={e => {\n          // @ts-ignore\n          setThreshold(e.target.value);\n        }}\n      />\n      <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n        <Button onClick={() => changeThreshold()}>Change Threshold</Button>\n      </div>\n    </div>\n  );\n}\n\nfunction MultisigSetOwnersListItem({\n  multisig,\n  onClose,\n  didAddTransaction,\n}: {\n  multisig: PublicKey;\n  onClose: Function;\n  didAddTransaction: (tx: PublicKey) => void;\n}) {\n  const [open, setOpen] = useState(false);\n  return (\n    <>\n      <ListItem button onClick={() => setOpen(open => !open)}>\n        <ListItemIcon>\n          <SupervisorAccountIcon />\n        </ListItemIcon>\n        <ListItemText primary={'Set owners'} />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <SetOwnersListItemDetails\n          didAddTransaction={didAddTransaction}\n          multisig={multisig}\n          onClose={onClose}\n        />\n      </Collapse>\n    </>\n  );\n}\n\nfunction SetOwnersListItemDetails({\n  multisig,\n  onClose,\n  didAddTransaction,\n}: {\n  multisig: PublicKey;\n  onClose: Function;\n  didAddTransaction: (tx: PublicKey) => void;\n}) {\n  const { multisigClient } = useWallet();\n  // @ts-ignore\n  const zeroAddr = new PublicKey().toString();\n  const [participants, setParticipants] = useState([\n    multisigClient.provider.wallet.publicKey.toString(),\n    zeroAddr,\n  ]);\n  const { enqueueSnackbar } = useSnackbar();\n  const setOwners = async () => {\n    enqueueSnackbar('Creating setOwners transaction', {\n      variant: 'info',\n    });\n    const owners = participants.map(p => new PublicKey(p));\n    const data = setOwnersData(multisigClient, owners);\n    const [multisigSigner] = await PublicKey.findProgramAddress(\n      [multisig.toBuffer()],\n      multisigClient.programId,\n    );\n    const accounts = [\n      {\n        pubkey: multisig,\n        isWritable: true,\n        isSigner: false,\n      },\n      {\n        pubkey: multisigSigner,\n        isWritable: false,\n        isSigner: true,\n      },\n    ];\n    const transaction = new Account();\n    const txSize = 5000; // TODO: tighter bound.\n    const tx = await multisigClient.rpc.createTransaction(\n      multisigClient.programId,\n      accounts,\n      data,\n      {\n        accounts: {\n          multisig,\n          transaction: transaction.publicKey,\n          proposer: multisigClient.provider.wallet.publicKey,\n          rent: SYSVAR_RENT_PUBKEY,\n        },\n        signers: [transaction],\n        instructions: [\n          await multisigClient.account.transaction.createInstruction(\n            transaction,\n            // @ts-ignore\n            txSize,\n          ),\n        ],\n      },\n    );\n    enqueueSnackbar('Transaction created', {\n      variant: 'success',\n      action: <ViewTransactionOnExplorerButton signature={tx} />,\n    });\n    didAddTransaction(transaction.publicKey);\n    onClose();\n  };\n  return (\n    <div\n      style={{\n        background: '#f1f0f0',\n        paddingLeft: '24px',\n        paddingRight: '24px',\n      }}\n    >\n      {participants.map((p, idx) => (\n        <TextField\n          fullWidth\n          style={{ marginTop: '16px' }}\n          label=\"Participant\"\n          value={p}\n          onChange={e => {\n            const p = [...participants];\n            p[idx] = e.target.value;\n            setParticipants(p);\n          }}\n        />\n      ))}\n      <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n        <IconButton\n          onClick={() => {\n            const p = [...participants];\n            // @ts-ignore\n            p.push(new PublicKey().toString());\n            setParticipants(p);\n          }}\n        >\n          <AddIcon />\n        </IconButton>\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          marginTop: '16px',\n          paddingBottom: '16px',\n        }}\n      >\n        <Button onClick={() => setOwners()}>Set Owners</Button>\n      </div>\n    </div>\n  );\n}\n\nfunction IdlUpgradeListItem({\n  multisig,\n  onClose,\n  didAddTransaction,\n}: {\n  multisig: PublicKey;\n  onClose: Function;\n  didAddTransaction: (tx: PublicKey) => void;\n}) {\n  const [open, setOpen] = useState(false);\n  return (\n    <>\n      <ListItem button onClick={() => setOpen(open => !open)}>\n        <ListItemIcon>\n          <DescriptionIcon />\n        </ListItemIcon>\n        <ListItemText primary={'Upgrade IDL'} />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <UpgradeIdlListItemDetails\n          didAddTransaction={didAddTransaction}\n          multisig={multisig}\n          onClose={onClose}\n        />\n      </Collapse>\n    </>\n  );\n}\n\nfunction UpgradeIdlListItemDetails({\n  multisig,\n  onClose,\n  didAddTransaction,\n}: {\n  multisig: PublicKey;\n  onClose: Function;\n  didAddTransaction: (tx: PublicKey) => void;\n}) {\n  const [programId, setProgramId] = useState<null | string>(null);\n  const [buffer, setBuffer] = useState<null | string>(null);\n\n  const { multisigClient } = useWallet();\n  const { enqueueSnackbar } = useSnackbar();\n  const createTransactionAccount = async () => {\n    enqueueSnackbar('Creating transaction', {\n      variant: 'info',\n    });\n    const programAddr = new PublicKey(programId as string);\n    const bufferAddr = new PublicKey(buffer as string);\n    const idlAddr = await anchor.utils.idlAddress(programAddr);\n    const [multisigSigner] = await PublicKey.findProgramAddress(\n      [multisig.toBuffer()],\n      multisigClient.programId,\n    );\n    const data = idl.encodeInstruction({ setBuffer: {} });\n    const accs = [\n      {\n        pubkey: bufferAddr,\n        isWritable: true,\n        isSigner: false,\n      },\n      { pubkey: idlAddr, isWritable: true, isSigner: false },\n      { pubkey: multisigSigner, isWritable: true, isSigner: false },\n    ];\n    const txSize = 1000; // TODO: tighter bound.\n    const transaction = new Account();\n    const tx = await multisigClient.rpc.createTransaction(\n      programAddr,\n      accs,\n      data,\n      {\n        accounts: {\n          multisig,\n          transaction: transaction.publicKey,\n          proposer: multisigClient.provider.wallet.publicKey,\n          rent: SYSVAR_RENT_PUBKEY,\n        },\n        signers: [transaction],\n        instructions: [\n          await multisigClient.account.transaction.createInstruction(\n            transaction,\n            // @ts-ignore\n            txSize,\n          ),\n        ],\n      },\n    );\n    enqueueSnackbar('Transaction created', {\n      variant: 'success',\n      action: <ViewTransactionOnExplorerButton signature={tx} />,\n    });\n    didAddTransaction(transaction.publicKey);\n    onClose();\n  };\n\n  return (\n    <div\n      style={{\n        background: '#f1f0f0',\n        paddingLeft: '24px',\n        paddingRight: '24px',\n      }}\n    >\n      <TextField\n        fullWidth\n        style={{ marginTop: '16px' }}\n        label=\"Program ID\"\n        value={programId}\n        onChange={e => setProgramId(e.target.value as string)}\n      />\n      <TextField\n        style={{ marginTop: '16px' }}\n        fullWidth\n        label=\"New IDL buffer\"\n        value={buffer}\n        onChange={e => setBuffer(e.target.value as string)}\n      />\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          marginTop: '16px',\n          paddingBottom: '16px',\n        }}\n      >\n        <Button onClick={() => createTransactionAccount()}>\n          Create upgrade\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nfunction ProgramUpdateListItem({\n  multisig,\n  onClose,\n  didAddTransaction,\n}: {\n  multisig: PublicKey;\n  onClose: Function;\n  didAddTransaction: (tx: PublicKey) => void;\n}) {\n  const [open, setOpen] = useState(false);\n  return (\n    <>\n      <ListItem button onClick={() => setOpen(open => !open)}>\n        <ListItemIcon>\n          <BuildIcon />\n        </ListItemIcon>\n        <ListItemText primary={'Upgrade program'} />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <UpgradeProgramListItemDetails\n          didAddTransaction={didAddTransaction}\n          multisig={multisig}\n          onClose={onClose}\n        />\n      </Collapse>\n    </>\n  );\n}\n\nconst BPF_LOADER_UPGRADEABLE_PID = new PublicKey(\n  'BPFLoaderUpgradeab1e11111111111111111111111',\n);\n\nfunction UpgradeProgramListItemDetails({\n  multisig,\n  onClose,\n  didAddTransaction,\n}: {\n  multisig: PublicKey;\n  onClose: Function;\n  didAddTransaction: (tx: PublicKey) => void;\n}) {\n  const [programId, setProgramId] = useState<null | string>(null);\n  const [buffer, setBuffer] = useState<null | string>(null);\n\n  const { multisigClient } = useWallet();\n  const { enqueueSnackbar } = useSnackbar();\n  const createTransactionAccount = async () => {\n    enqueueSnackbar('Creating transaction', {\n      variant: 'info',\n    });\n    const programAddr = new PublicKey(programId as string);\n    const bufferAddr = new PublicKey(buffer as string);\n    // Hard code serialization.\n    const data = Buffer.from([3, 0, 0, 0]);\n\n    const programAccount = await (async () => {\n      const programAccount = await multisigClient.provider.connection.getAccountInfo(\n        programAddr,\n      );\n      if (programAccount === null) {\n        throw new Error('Invalid program ID');\n      }\n      return {\n        // Hard code deserialization.\n        programdataAddress: new PublicKey(programAccount.data.slice(4)),\n      };\n    })();\n    const spill = multisigClient.provider.wallet.publicKey;\n    const [multisigSigner] = await PublicKey.findProgramAddress(\n      [multisig.toBuffer()],\n      multisigClient.programId,\n    );\n    const accs = [\n      {\n        pubkey: programAccount.programdataAddress,\n        isWritable: true,\n        isSigner: false,\n      },\n      { pubkey: programAddr, isWritable: true, isSigner: false },\n      { pubkey: bufferAddr, isWritable: true, isSigner: false },\n      { pubkey: spill, isWritable: true, isSigner: false },\n      { pubkey: SYSVAR_RENT_PUBKEY, isWritable: false, isSigner: false },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isWritable: false, isSigner: false },\n      { pubkey: multisigSigner, isWritable: false, isSigner: false },\n    ];\n    const txSize = 1000; // TODO: tighter bound.\n    const transaction = new Account();\n    const tx = await multisigClient.rpc.createTransaction(\n      BPF_LOADER_UPGRADEABLE_PID,\n      accs,\n      data,\n      {\n        accounts: {\n          multisig,\n          transaction: transaction.publicKey,\n          proposer: multisigClient.provider.wallet.publicKey,\n          rent: SYSVAR_RENT_PUBKEY,\n        },\n        signers: [transaction],\n        instructions: [\n          await multisigClient.account.transaction.createInstruction(\n            transaction,\n            // @ts-ignore\n            txSize,\n          ),\n        ],\n      },\n    );\n    enqueueSnackbar('Transaction created', {\n      variant: 'success',\n      action: <ViewTransactionOnExplorerButton signature={tx} />,\n    });\n    didAddTransaction(transaction.publicKey);\n    onClose();\n  };\n\n  return (\n    <div\n      style={{\n        background: '#f1f0f0',\n        paddingLeft: '24px',\n        paddingRight: '24px',\n      }}\n    >\n      <TextField\n        fullWidth\n        style={{ marginTop: '16px' }}\n        label=\"Program ID\"\n        value={programId}\n        onChange={e => setProgramId(e.target.value as string)}\n      />\n      <TextField\n        style={{ marginTop: '16px' }}\n        fullWidth\n        label=\"New program buffer\"\n        value={buffer}\n        onChange={e => setBuffer(e.target.value as string)}\n      />\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          marginTop: '16px',\n          paddingBottom: '16px',\n        }}\n      >\n        <Button onClick={() => createTransactionAccount()}>\n          Create upgrade\n        </Button>\n      </div>\n    </div>\n  );\n}\n\n// @ts-ignore\nfunction icon(tx, multisigClient) {\n  if (tx.account.programId.equals(BPF_LOADER_UPGRADEABLE_PID)) {\n    return <BuildIcon />;\n  }\n  if (tx.account.programId.equals(multisigClient.programId)) {\n    const setThresholdSighash = multisigClient.coder.sighash(\n      'global',\n      'change_threshold',\n    );\n    if (setThresholdSighash.equals(tx.account.data.slice(0, 8))) {\n      return <GavelIcon />;\n    }\n    const setOwnersSighash = multisigClient.coder.sighash(\n      'global',\n      'set_owners',\n    );\n    if (setOwnersSighash.equals(tx.account.data.slice(0, 8))) {\n      return <SupervisorAccountIcon />;\n    }\n  }\n  if (idl.IDL_TAG.equals(tx.account.data.slice(0, 8))) {\n    return <DescriptionIcon />;\n  }\n  return <ReceiptIcon />;\n}\n\n// @ts-ignore\nfunction changeThresholdData(multisigClient, threshold) {\n  return multisigClient.coder.instruction.encode('change_threshold', {\n    threshold: new BN(threshold),\n  });\n}\n\n// @ts-ignore\nfunction setOwnersData(multisigClient, owners) {\n  return multisigClient.coder.instruction.encode('set_owners', {\n    owners,\n  });\n}\n","import React, {\n  ReactNode,\n  PropsWithChildren,\n  useContext,\n  useState,\n  useEffect,\n} from 'react';\nimport BN from 'bn.js';\nimport { PublicKey } from '@solana/web3.js';\nimport { TokenListProvider, TokenInfo } from '@solana/spl-token-registry';\nimport { networks } from '../store/config';\n\nconst TokenListContext = React.createContext<TokenListContextValues>({\n  tokenMap: new Map(),\n});\n\ntype TokenListContextValues = {\n  tokenMap: Map<string, TokenInfo>;\n};\n\nexport function useTokenInfos(): Map<string, TokenInfo> {\n  const { tokenMap } = useContext<TokenListContextValues>(TokenListContext);\n  return tokenMap;\n}\n\nexport function TokenRegistryProvider(props: PropsWithChildren<ReactNode>) {\n  const [tokenMap, setTokenMap] = useState<Map<string, TokenInfo>>(new Map());\n  useEffect(() => {\n    new TokenListProvider().resolve().then(tokens => {\n      const tokenList = tokens.filterByClusterSlug('mainnet-beta').getList();\n      setTokenMap(\n        tokenList.reduce((map, item) => {\n          map.set(item.address, item);\n          return map;\n        }, new Map()),\n      );\n    });\n  }, [setTokenMap]);\n\n  return (\n    <TokenListContext.Provider value={{ tokenMap }}>\n      {props.children}\n    </TokenListContext.Provider>\n  );\n}\n\nexport function fromDisplay(amount: number, decimals: number): BN {\n  return new BN(amount * 10 ** decimals);\n}\n\nexport function toDisplay(amount: BN | number, decimals: number): string {\n  if (amount instanceof BN) {\n    amount = amount.toNumber();\n  }\n  return (amount / 10 ** decimals).toString();\n}\n\nexport function toDisplayLabel(mint: PublicKey): string {\n  let whitelistedMint = Object.keys(networks.mainnet.mints)\n    .filter(label => networks.mainnet.mints[label].equals(mint))\n    .pop();\n  if (whitelistedMint) {\n    return whitelistedMint.toUpperCase();\n  }\n  return mint.toString();\n}\n","import { Idl } from '@project-serum/anchor';\n\nconst idl: Idl = {\n  version: '0.0.0',\n  name: 'lockup',\n  instructions: [\n    {\n      name: 'createVesting',\n      accounts: [\n        {\n          name: 'vesting',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'vault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'depositor',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'depositorAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'clock',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'beneficiary',\n          type: 'publicKey',\n        },\n        {\n          name: 'depositAmount',\n          type: 'u64',\n        },\n        {\n          name: 'nonce',\n          type: 'u8',\n        },\n        {\n          name: 'startTs',\n          type: 'i64',\n        },\n        {\n          name: 'endTs',\n          type: 'i64',\n        },\n        {\n          name: 'periodCount',\n          type: 'u64',\n        },\n        {\n          name: 'realizor',\n          type: {\n            option: {\n              defined: 'Realizor',\n            },\n          },\n        },\n      ],\n    },\n    {\n      name: 'withdraw',\n      accounts: [\n        {\n          name: 'vesting',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'beneficiary',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'vault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'vestingSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'token',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'clock',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'amount',\n          type: 'u64',\n        },\n      ],\n    },\n    {\n      name: 'whitelistWithdraw',\n      accounts: [\n        {\n          name: 'transfer',\n          accounts: [\n            {\n              name: 'lockup',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'beneficiary',\n              isMut: false,\n              isSigner: true,\n            },\n            {\n              name: 'whitelistedProgram',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'vesting',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vestingSigner',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'tokenProgram',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'whitelistedProgramVault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'whitelistedProgramVaultAuthority',\n              isMut: false,\n              isSigner: false,\n            },\n          ],\n        },\n      ],\n      args: [\n        {\n          name: 'instructionData',\n          type: 'bytes',\n        },\n        {\n          name: 'amount',\n          type: 'u64',\n        },\n      ],\n    },\n    {\n      name: 'whitelistDeposit',\n      accounts: [\n        {\n          name: 'transfer',\n          accounts: [\n            {\n              name: 'lockup',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'beneficiary',\n              isMut: false,\n              isSigner: true,\n            },\n            {\n              name: 'whitelistedProgram',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'vesting',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vestingSigner',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'tokenProgram',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'whitelistedProgramVault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'whitelistedProgramVaultAuthority',\n              isMut: false,\n              isSigner: false,\n            },\n          ],\n        },\n      ],\n      args: [\n        {\n          name: 'instructionData',\n          type: 'bytes',\n        },\n      ],\n    },\n    {\n      name: 'availableForWithdrawal',\n      accounts: [\n        {\n          name: 'vesting',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'clock',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n  ],\n  state: {\n    struct: {\n      name: 'Lockup',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'authority',\n            type: 'publicKey',\n          },\n          {\n            name: 'whitelist',\n            type: {\n              vec: {\n                defined: 'WhitelistEntry',\n              },\n            },\n          },\n        ],\n      },\n    },\n    methods: [\n      {\n        name: 'new',\n        accounts: [\n          {\n            name: 'authority',\n            isMut: false,\n            isSigner: true,\n          },\n        ],\n        args: [],\n      },\n      {\n        name: 'whitelistAdd',\n        accounts: [\n          {\n            name: 'authority',\n            isMut: false,\n            isSigner: true,\n          },\n        ],\n        args: [\n          {\n            name: 'entry',\n            type: {\n              defined: 'WhitelistEntry',\n            },\n          },\n        ],\n      },\n      {\n        name: 'whitelistDelete',\n        accounts: [\n          {\n            name: 'authority',\n            isMut: false,\n            isSigner: true,\n          },\n        ],\n        args: [\n          {\n            name: 'entry',\n            type: {\n              defined: 'WhitelistEntry',\n            },\n          },\n        ],\n      },\n      {\n        name: 'setAuthority',\n        accounts: [\n          {\n            name: 'authority',\n            isMut: false,\n            isSigner: true,\n          },\n        ],\n        args: [\n          {\n            name: 'newAuthority',\n            type: 'publicKey',\n          },\n        ],\n      },\n    ],\n  },\n  accounts: [\n    {\n      name: 'Vesting',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'beneficiary',\n            type: 'publicKey',\n          },\n          {\n            name: 'mint',\n            type: 'publicKey',\n          },\n          {\n            name: 'vault',\n            type: 'publicKey',\n          },\n          {\n            name: 'grantor',\n            type: 'publicKey',\n          },\n          {\n            name: 'outstanding',\n            type: 'u64',\n          },\n          {\n            name: 'startBalance',\n            type: 'u64',\n          },\n          {\n            name: 'createdTs',\n            type: 'i64',\n          },\n          {\n            name: 'startTs',\n            type: 'i64',\n          },\n          {\n            name: 'endTs',\n            type: 'i64',\n          },\n          {\n            name: 'periodCount',\n            type: 'u64',\n          },\n          {\n            name: 'whitelistOwned',\n            type: 'u64',\n          },\n          {\n            name: 'nonce',\n            type: 'u8',\n          },\n          {\n            name: 'realizor',\n            type: {\n              option: {\n                defined: 'Realizor',\n              },\n            },\n          },\n        ],\n      },\n    },\n  ],\n  types: [\n    {\n      name: 'Realizor',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'program',\n            type: 'publicKey',\n          },\n          {\n            name: 'metadata',\n            type: 'publicKey',\n          },\n        ],\n      },\n    },\n    {\n      name: 'WhitelistEntry',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'programId',\n            type: 'publicKey',\n          },\n        ],\n      },\n    },\n  ],\n  errors: [\n    {\n      code: 100,\n      name: 'InvalidTimestamp',\n      msg: 'Vesting end must be greater than the current unix timestamp.',\n    },\n    {\n      code: 101,\n      name: 'InvalidPeriod',\n      msg: 'The number of vesting periods must be greater than zero.',\n    },\n    {\n      code: 102,\n      name: 'InvalidDepositAmount',\n      msg: 'The vesting deposit amount must be greater than zero.',\n    },\n    {\n      code: 103,\n      name: 'InvalidWhitelistEntry',\n      msg: 'The Whitelist entry is not a valid program address.',\n    },\n    {\n      code: 104,\n      name: 'InvalidProgramAddress',\n      msg: 'Invalid program address. Did you provide the correct nonce?',\n    },\n    {\n      code: 105,\n      name: 'InvalidVaultOwner',\n      msg: 'Invalid vault owner.',\n    },\n    {\n      code: 106,\n      name: 'InvalidVaultAmount',\n      msg: 'Vault amount must be zero.',\n    },\n    {\n      code: 107,\n      name: 'InsufficientWithdrawalBalance',\n      msg: 'Insufficient withdrawal balance.',\n    },\n    {\n      code: 108,\n      name: 'WhitelistFull',\n      msg: 'Whitelist is full',\n    },\n    {\n      code: 109,\n      name: 'WhitelistEntryAlreadyExists',\n      msg: 'Whitelist entry already exists',\n    },\n    {\n      code: 110,\n      name: 'InsufficientWhitelistDepositAmount',\n      msg: 'Balance must go up when performing a whitelist deposit',\n    },\n    {\n      code: 111,\n      name: 'WhitelistDepositOverflow',\n      msg: 'Cannot deposit more than withdrawn',\n    },\n    {\n      code: 112,\n      name: 'WhitelistWithdrawLimit',\n      msg: 'Tried to withdraw over the specified limit',\n    },\n    {\n      code: 113,\n      name: 'WhitelistEntryNotFound',\n      msg: 'Whitelist entry not found.',\n    },\n    {\n      code: 114,\n      name: 'Unauthorized',\n      msg: 'You do not have sufficient permissions to perform this action.',\n    },\n    {\n      code: 115,\n      name: 'UnableToWithdrawWhileStaked',\n      msg: 'You are unable to realize projected rewards until unstaking.',\n    },\n    {\n      code: 116,\n      name: 'InvalidLockRealizor',\n      msg: \"The given lock realizor doesn't match the vesting account.\",\n    },\n    {\n      code: 117,\n      name: 'UnrealizedVesting',\n      msg: 'You have not realized this vesting account.',\n    },\n    {\n      code: 118,\n      name: 'InvalidSchedule',\n      msg: 'Invalid vesting schedule given.',\n    },\n  ],\n};\n\nexport default idl;\n","import { Idl } from '@project-serum/anchor';\n\nconst idl: Idl = {\n  version: '0.0.0',\n  name: 'registry',\n  instructions: [\n    {\n      name: 'initialize',\n      accounts: [\n        {\n          name: 'registrar',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'rewardEventQ',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolMint',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'mint',\n          type: 'publicKey',\n        },\n        {\n          name: 'authority',\n          type: 'publicKey',\n        },\n        {\n          name: 'nonce',\n          type: 'u8',\n        },\n        {\n          name: 'withdrawalTimelock',\n          type: 'i64',\n        },\n        {\n          name: 'stakeRate',\n          type: 'u64',\n        },\n        {\n          name: 'rewardQLen',\n          type: 'u32',\n        },\n      ],\n    },\n    {\n      name: 'updateRegistrar',\n      accounts: [\n        {\n          name: 'registrar',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'authority',\n          isMut: false,\n          isSigner: true,\n        },\n      ],\n      args: [\n        {\n          name: 'newAuthority',\n          type: {\n            option: 'publicKey',\n          },\n        },\n        {\n          name: 'withdrawalTimelock',\n          type: {\n            option: 'i64',\n          },\n        },\n      ],\n    },\n    {\n      name: 'createMember',\n      accounts: [\n        {\n          name: 'registrar',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'member',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'beneficiary',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'balances',\n          accounts: [\n            {\n              name: 'spt',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultStake',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultPw',\n              isMut: true,\n              isSigner: false,\n            },\n          ],\n        },\n        {\n          name: 'balancesLocked',\n          accounts: [\n            {\n              name: 'spt',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultStake',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultPw',\n              isMut: true,\n              isSigner: false,\n            },\n          ],\n        },\n        {\n          name: 'memberSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'nonce',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'updateMember',\n      accounts: [\n        {\n          name: 'member',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'beneficiary',\n          isMut: false,\n          isSigner: true,\n        },\n      ],\n      args: [\n        {\n          name: 'metadata',\n          type: {\n            option: 'publicKey',\n          },\n        },\n      ],\n    },\n    {\n      name: 'deposit',\n      accounts: [\n        {\n          name: 'member',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'beneficiary',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'vault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'depositor',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'depositorAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'amount',\n          type: 'u64',\n        },\n      ],\n    },\n    {\n      name: 'depositLocked',\n      accounts: [\n        {\n          name: 'vesting',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'vestingVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'depositorAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'memberVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'memberSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'registry',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'registrar',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'member',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'beneficiary',\n          isMut: false,\n          isSigner: true,\n        },\n      ],\n      args: [\n        {\n          name: 'amount',\n          type: 'u64',\n        },\n      ],\n    },\n    {\n      name: 'stake',\n      accounts: [\n        {\n          name: 'registrar',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rewardEventQ',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'poolMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'member',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'beneficiary',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'balances',\n          accounts: [\n            {\n              name: 'spt',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultStake',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultPw',\n              isMut: true,\n              isSigner: false,\n            },\n          ],\n        },\n        {\n          name: 'balancesLocked',\n          accounts: [\n            {\n              name: 'spt',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultStake',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultPw',\n              isMut: true,\n              isSigner: false,\n            },\n          ],\n        },\n        {\n          name: 'memberSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'registrarSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'clock',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'sptAmount',\n          type: 'u64',\n        },\n        {\n          name: 'locked',\n          type: 'bool',\n        },\n      ],\n    },\n    {\n      name: 'startUnstake',\n      accounts: [\n        {\n          name: 'registrar',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rewardEventQ',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'poolMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'pendingWithdrawal',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'member',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'beneficiary',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'balances',\n          accounts: [\n            {\n              name: 'spt',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultStake',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultPw',\n              isMut: true,\n              isSigner: false,\n            },\n          ],\n        },\n        {\n          name: 'balancesLocked',\n          accounts: [\n            {\n              name: 'spt',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultStake',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultPw',\n              isMut: true,\n              isSigner: false,\n            },\n          ],\n        },\n        {\n          name: 'memberSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'clock',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'sptAmount',\n          type: 'u64',\n        },\n        {\n          name: 'locked',\n          type: 'bool',\n        },\n      ],\n    },\n    {\n      name: 'endUnstake',\n      accounts: [\n        {\n          name: 'registrar',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'member',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'beneficiary',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'pendingWithdrawal',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'vault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'vaultPw',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'memberSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'clock',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'withdraw',\n      accounts: [\n        {\n          name: 'registrar',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'member',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'beneficiary',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'vault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'memberSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'depositor',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'amount',\n          type: 'u64',\n        },\n      ],\n    },\n    {\n      name: 'withdrawLocked',\n      accounts: [\n        {\n          name: 'vesting',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'vestingVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'vestingSigner',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'memberVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'memberSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'registry',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'registrar',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'member',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'beneficiary',\n          isMut: false,\n          isSigner: true,\n        },\n      ],\n      args: [\n        {\n          name: 'amount',\n          type: 'u64',\n        },\n      ],\n    },\n    {\n      name: 'dropReward',\n      accounts: [\n        {\n          name: 'registrar',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rewardEventQ',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolMint',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'vendor',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'vendorVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'depositor',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'depositorAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'clock',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'kind',\n          type: {\n            defined: 'RewardVendorKind',\n          },\n        },\n        {\n          name: 'total',\n          type: 'u64',\n        },\n        {\n          name: 'expiryTs',\n          type: 'i64',\n        },\n        {\n          name: 'expiryReceiver',\n          type: 'publicKey',\n        },\n        {\n          name: 'nonce',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'claimReward',\n      accounts: [\n        {\n          name: 'cmn',\n          accounts: [\n            {\n              name: 'registrar',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'member',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'beneficiary',\n              isMut: false,\n              isSigner: true,\n            },\n            {\n              name: 'balances',\n              accounts: [\n                {\n                  name: 'spt',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vault',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vaultStake',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vaultPw',\n                  isMut: true,\n                  isSigner: false,\n                },\n              ],\n            },\n            {\n              name: 'balancesLocked',\n              accounts: [\n                {\n                  name: 'spt',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vault',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vaultStake',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vaultPw',\n                  isMut: true,\n                  isSigner: false,\n                },\n              ],\n            },\n            {\n              name: 'vendor',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'vault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vendorSigner',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'tokenProgram',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'clock',\n              isMut: false,\n              isSigner: false,\n            },\n          ],\n        },\n        {\n          name: 'to',\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'claimRewardLocked',\n      accounts: [\n        {\n          name: 'cmn',\n          accounts: [\n            {\n              name: 'registrar',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'member',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'beneficiary',\n              isMut: false,\n              isSigner: true,\n            },\n            {\n              name: 'balances',\n              accounts: [\n                {\n                  name: 'spt',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vault',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vaultStake',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vaultPw',\n                  isMut: true,\n                  isSigner: false,\n                },\n              ],\n            },\n            {\n              name: 'balancesLocked',\n              accounts: [\n                {\n                  name: 'spt',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vault',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vaultStake',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vaultPw',\n                  isMut: true,\n                  isSigner: false,\n                },\n              ],\n            },\n            {\n              name: 'vendor',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'vault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vendorSigner',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'tokenProgram',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'clock',\n              isMut: false,\n              isSigner: false,\n            },\n          ],\n        },\n        {\n          name: 'registry',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'lockupProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'nonce',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'expireReward',\n      accounts: [\n        {\n          name: 'registrar',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'vendor',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'vault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'vendorSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'expiryReceiver',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'expiryReceiverToken',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'clock',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n  ],\n  state: {\n    struct: {\n      name: 'Registry',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'lockupProgram',\n            type: 'publicKey',\n          },\n        ],\n      },\n    },\n    methods: [\n      {\n        name: 'new',\n        accounts: [\n          {\n            name: 'lockupProgram',\n            isMut: false,\n            isSigner: false,\n          },\n        ],\n        args: [],\n      },\n      {\n        name: 'setLockupProgram',\n        accounts: [\n          {\n            name: 'authority',\n            isMut: false,\n            isSigner: true,\n          },\n        ],\n        args: [\n          {\n            name: 'lockupProgram',\n            type: 'publicKey',\n          },\n        ],\n      },\n    ],\n  },\n  accounts: [\n    {\n      name: 'Registrar',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'authority',\n            type: 'publicKey',\n          },\n          {\n            name: 'nonce',\n            type: 'u8',\n          },\n          {\n            name: 'withdrawalTimelock',\n            type: 'i64',\n          },\n          {\n            name: 'rewardEventQ',\n            type: 'publicKey',\n          },\n          {\n            name: 'mint',\n            type: 'publicKey',\n          },\n          {\n            name: 'poolMint',\n            type: 'publicKey',\n          },\n          {\n            name: 'stakeRate',\n            type: 'u64',\n          },\n        ],\n      },\n    },\n    {\n      name: 'Member',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'registrar',\n            type: 'publicKey',\n          },\n          {\n            name: 'beneficiary',\n            type: 'publicKey',\n          },\n          {\n            name: 'metadata',\n            type: 'publicKey',\n          },\n          {\n            name: 'balances',\n            type: {\n              defined: 'BalanceSandbox',\n            },\n          },\n          {\n            name: 'balancesLocked',\n            type: {\n              defined: 'BalanceSandbox',\n            },\n          },\n          {\n            name: 'rewardsCursor',\n            type: 'u32',\n          },\n          {\n            name: 'lastStakeTs',\n            type: 'i64',\n          },\n          {\n            name: 'nonce',\n            type: 'u8',\n          },\n        ],\n      },\n    },\n    {\n      name: 'PendingWithdrawal',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'registrar',\n            type: 'publicKey',\n          },\n          {\n            name: 'member',\n            type: 'publicKey',\n          },\n          {\n            name: 'burned',\n            type: 'bool',\n          },\n          {\n            name: 'pool',\n            type: 'publicKey',\n          },\n          {\n            name: 'startTs',\n            type: 'i64',\n          },\n          {\n            name: 'endTs',\n            type: 'i64',\n          },\n          {\n            name: 'amount',\n            type: 'u64',\n          },\n          {\n            name: 'locked',\n            type: 'bool',\n          },\n        ],\n      },\n    },\n    {\n      name: 'RewardQueue',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'head',\n            type: 'u32',\n          },\n          {\n            name: 'tail',\n            type: 'u32',\n          },\n          {\n            name: 'events',\n            type: {\n              vec: {\n                defined: 'RewardEvent',\n              },\n            },\n          },\n        ],\n      },\n    },\n    {\n      name: 'RewardVendor',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'registrar',\n            type: 'publicKey',\n          },\n          {\n            name: 'vault',\n            type: 'publicKey',\n          },\n          {\n            name: 'mint',\n            type: 'publicKey',\n          },\n          {\n            name: 'nonce',\n            type: 'u8',\n          },\n          {\n            name: 'poolTokenSupply',\n            type: 'u64',\n          },\n          {\n            name: 'rewardEventQCursor',\n            type: 'u32',\n          },\n          {\n            name: 'startTs',\n            type: 'i64',\n          },\n          {\n            name: 'expiryTs',\n            type: 'i64',\n          },\n          {\n            name: 'expiryReceiver',\n            type: 'publicKey',\n          },\n          {\n            name: 'from',\n            type: 'publicKey',\n          },\n          {\n            name: 'total',\n            type: 'u64',\n          },\n          {\n            name: 'expired',\n            type: 'bool',\n          },\n          {\n            name: 'kind',\n            type: {\n              defined: 'RewardVendorKind',\n            },\n          },\n        ],\n      },\n    },\n  ],\n  types: [\n    {\n      name: 'BalanceSandbox',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'spt',\n            type: 'publicKey',\n          },\n          {\n            name: 'vault',\n            type: 'publicKey',\n          },\n          {\n            name: 'vaultStake',\n            type: 'publicKey',\n          },\n          {\n            name: 'vaultPw',\n            type: 'publicKey',\n          },\n        ],\n      },\n    },\n    {\n      name: 'RewardEvent',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'vendor',\n            type: 'publicKey',\n          },\n          {\n            name: 'ts',\n            type: 'i64',\n          },\n          {\n            name: 'locked',\n            type: 'bool',\n          },\n        ],\n      },\n    },\n    {\n      name: 'RewardVendorKind',\n      type: {\n        kind: 'enum',\n        variants: [\n          {\n            name: 'Unlocked',\n          },\n          {\n            name: 'Locked',\n            fields: [\n              {\n                name: 'start_ts',\n                type: 'i64',\n              },\n              {\n                name: 'end_ts',\n                type: 'i64',\n              },\n              {\n                name: 'period_count',\n                type: 'u64',\n              },\n            ],\n          },\n        ],\n      },\n    },\n  ],\n  errors: [\n    {\n      code: 100,\n      name: 'RewardQAlreadyInitialized',\n      msg: 'The given reward queue has already been initialized.',\n    },\n    {\n      code: 101,\n      name: 'InvalidNonce',\n      msg: \"The nonce given doesn't derive a valid program address.\",\n    },\n    {\n      code: 102,\n      name: 'InvalidPoolMintAuthority',\n      msg: 'Invalid pool mint authority',\n    },\n    {\n      code: 103,\n      name: 'InvalidMemberSigner',\n      msg: \"Member signer doesn't match the derived address.\",\n    },\n    {\n      code: 104,\n      name: 'InvalidVaultDeposit',\n      msg: 'The given vault owner must match the signing depositor.',\n    },\n    {\n      code: 105,\n      name: 'InvalidDepositor',\n      msg: \"The signing depositor doesn't match either of the balance accounts\",\n    },\n    {\n      code: 106,\n      name: 'InvalidVault',\n      msg: 'The vault given does not match the vault expected.',\n    },\n    {\n      code: 107,\n      name: 'InvalidVaultOwner',\n      msg: 'Invalid vault owner.',\n    },\n    {\n      code: 108,\n      name: 'Unknown',\n      msg: 'An unknown error has occured.',\n    },\n    {\n      code: 109,\n      name: 'UnstakeTimelock',\n      msg: 'The unstake timelock has not yet expired.',\n    },\n    {\n      code: 110,\n      name: 'InsufficientReward',\n      msg: 'Reward vendors must have at least one token unit per pool token',\n    },\n    {\n      code: 111,\n      name: 'InvalidExpiry',\n      msg: 'Reward expiry must be after the current clock timestamp.',\n    },\n    {\n      code: 112,\n      name: 'VendorExpired',\n      msg: 'The reward vendor has been expired.',\n    },\n    {\n      code: 113,\n      name: 'CursorAlreadyProcessed',\n      msg: 'This reward has already been processed.',\n    },\n    {\n      code: 114,\n      name: 'NotStakedDuringDrop',\n      msg: 'The account was not staked at the time of this reward.',\n    },\n    {\n      code: 115,\n      name: 'VendorNotYetExpired',\n      msg: 'The vendor is not yet eligible for expiry.',\n    },\n    {\n      code: 116,\n      name: 'RewardsNeedsProcessing',\n      msg: 'Please collect your reward before otherwise using the program.',\n    },\n    {\n      code: 117,\n      name: 'ExpectedLockedVendor',\n      msg: 'Locked reward vendor expected but an unlocked vendor was given.',\n    },\n    {\n      code: 118,\n      name: 'ExpectedUnlockedVendor',\n      msg: 'Unlocked reward vendor expected but a locked vendor was given.',\n    },\n    {\n      code: 119,\n      name: 'InvalidVestingSigner',\n      msg: 'Locked deposit from an invalid deposit authority.',\n    },\n    {\n      code: 120,\n      name: 'UnrealizedReward',\n      msg: 'Locked rewards cannot be realized until one unstaked all tokens.',\n    },\n    {\n      code: 121,\n      name: 'InvalidBeneficiary',\n      msg: \"The beneficiary doesn't match.\",\n    },\n    {\n      code: 122,\n      name: 'InvalidRealizorMetadata',\n      msg: 'The given member account does not match the realizor metadata.',\n    },\n    {\n      code: 123,\n      name: 'InvalidVestingSchedule',\n      msg: 'Invalid vesting schedule for the locked reward.',\n    },\n    {\n      code: 124,\n      name: 'InvalidProgramAuthority',\n      msg: 'Please specify the correct authority for this program.',\n    },\n  ],\n};\n\nexport default idl;\n","import { Idl } from '@project-serum/anchor';\n\nconst idl: Idl = {\n  version: '0.0.0',\n  name: 'multisig',\n  instructions: [\n    {\n      name: 'createMultisig',\n      accounts: [\n        {\n          name: 'multisig',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'owners',\n          type: {\n            vec: 'publicKey',\n          },\n        },\n        {\n          name: 'threshold',\n          type: 'u64',\n        },\n        {\n          name: 'nonce',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'createTransaction',\n      accounts: [\n        {\n          name: 'multisig',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'transaction',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'proposer',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'pid',\n          type: 'publicKey',\n        },\n        {\n          name: 'accs',\n          type: {\n            vec: {\n              defined: 'TransactionAccount',\n            },\n          },\n        },\n        {\n          name: 'data',\n          type: 'bytes',\n        },\n      ],\n    },\n    {\n      name: 'approve',\n      accounts: [\n        {\n          name: 'multisig',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'transaction',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'owner',\n          isMut: false,\n          isSigner: true,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'setOwners',\n      accounts: [\n        {\n          name: 'multisig',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'multisigSigner',\n          isMut: false,\n          isSigner: true,\n        },\n      ],\n      args: [\n        {\n          name: 'owners',\n          type: {\n            vec: 'publicKey',\n          },\n        },\n      ],\n    },\n    {\n      name: 'changeThreshold',\n      accounts: [\n        {\n          name: 'multisig',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'multisigSigner',\n          isMut: false,\n          isSigner: true,\n        },\n      ],\n      args: [\n        {\n          name: 'threshold',\n          type: 'u64',\n        },\n      ],\n    },\n    {\n      name: 'executeTransaction',\n      accounts: [\n        {\n          name: 'multisig',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'multisigSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'transaction',\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n  ],\n  accounts: [\n    {\n      name: 'Multisig',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'owners',\n            type: {\n              vec: 'publicKey',\n            },\n          },\n          {\n            name: 'threshold',\n            type: 'u64',\n          },\n          {\n            name: 'nonce',\n            type: 'u8',\n          },\n          {\n            name: 'ownerSetSeqno',\n            type: 'u32',\n          },\n        ],\n      },\n    },\n    {\n      name: 'Transaction',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'multisig',\n            type: 'publicKey',\n          },\n          {\n            name: 'programId',\n            type: 'publicKey',\n          },\n          {\n            name: 'accounts',\n            type: {\n              vec: {\n                defined: 'TransactionAccount',\n              },\n            },\n          },\n          {\n            name: 'data',\n            type: 'bytes',\n          },\n          {\n            name: 'signers',\n            type: {\n              vec: 'bool',\n            },\n          },\n          {\n            name: 'didExecute',\n            type: 'bool',\n          },\n          {\n            name: 'ownerSetSeqno',\n            type: 'u32',\n          },\n        ],\n      },\n    },\n  ],\n  types: [\n    {\n      name: 'TransactionAccount',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'pubkey',\n            type: 'publicKey',\n          },\n          {\n            name: 'isSigner',\n            type: 'bool',\n          },\n          {\n            name: 'isWritable',\n            type: 'bool',\n          },\n        ],\n      },\n    },\n  ],\n  errors: [\n    {\n      code: 100,\n      name: 'InvalidOwner',\n      msg: 'The given owner is not part of this multisig.',\n    },\n    {\n      code: 101,\n      name: 'NotEnoughSigners',\n      msg: 'Not enough owners signed this transaction.',\n    },\n    {\n      code: 102,\n      name: 'TransactionAlreadySigned',\n      msg: 'Cannot delete a transaction that has been signed by an owner.',\n    },\n    {\n      code: 103,\n      name: 'Overflow',\n      msg: 'Overflow when adding.',\n    },\n    {\n      code: 104,\n      name: 'UnableToDelete',\n      msg: 'Cannot delete a transaction the owner did not create.',\n    },\n    {\n      code: 105,\n      name: 'AlreadyExecuted',\n      msg: 'The given transaction has already been executed.',\n    },\n    {\n      code: 106,\n      name: 'InvalidThreshold',\n      msg: 'Threshold must be less than or equal to the number of owners.',\n    },\n  ],\n};\n\nexport default idl;\n","import React, {\n  PropsWithChildren,\n  ReactElement,\n  ReactNode,\n  useMemo,\n  useContext,\n} from 'react';\nimport { useSelector } from 'react-redux';\nimport { Connection, ConfirmOptions } from '@solana/web3.js';\n// @ts-ignore\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { Provider } from '@project-serum/common';\nimport { Program } from '@project-serum/anchor';\nimport { State as StoreState } from '../../store/reducer';\nimport LockupIdl from '../../idl/lockup';\nimport RegistryIdl from '../../idl/registry';\nimport MultisigIdl from '../../idl/multisig';\n\nexport function useWallet(): WalletContextValues {\n  const w = useContext(WalletContext);\n  if (!w) {\n    throw new Error('Missing wallet context');\n  }\n  return w;\n}\n\nconst WalletContext = React.createContext<null | WalletContextValues>(null);\n\ntype WalletContextValues = {\n  wallet: Wallet;\n  lockupClient: Program;\n  registryClient: Program;\n  multisigClient: Program;\n};\n\nexport default function WalletProvider(\n  props: PropsWithChildren<ReactNode>,\n): ReactElement {\n  const { walletProvider, network } = useSelector((state: StoreState) => {\n    return {\n      walletProvider: state.common.walletProvider,\n      network: state.common.network,\n    };\n  });\n\n  const {\n    wallet,\n    lockupClient,\n    registryClient,\n    multisigClient,\n  } = useMemo(() => {\n    const opts: ConfirmOptions = {\n      preflightCommitment: 'recent',\n      commitment: 'recent',\n    };\n    const connection = new Connection(network.url, opts.preflightCommitment);\n    const wallet = new Wallet(walletProvider, network.url);\n    const provider = new Provider(connection, wallet, opts);\n\n    const lockupClient = new Program(\n      LockupIdl,\n      network.lockupProgramId,\n      provider,\n    );\n    const registryClient = new Program(\n      RegistryIdl,\n      network.registryProgramId,\n      provider,\n    );\n\n    const multisigClient = new Program(\n      MultisigIdl,\n      network.multisigProgramId,\n      provider,\n    );\n\n    return {\n      wallet,\n      lockupClient,\n      registryClient,\n      multisigClient,\n    };\n  }, [walletProvider, network]);\n\n  return (\n    <WalletContext.Provider\n      value={{ wallet, lockupClient, registryClient, multisigClient }}\n    >\n      {props.children}\n    </WalletContext.Provider>\n  );\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DexInstructions = exports.decodeInstruction = exports.encodeInstruction = exports.INSTRUCTION_LAYOUT = exports.NEW_ORDER_V3_OWNER_INDEX = exports.NEW_ORDER_V3_OPEN_ORDERS_INDEX = exports.NEW_ORDER_OWNER_INDEX = exports.NEW_ORDER_OPEN_ORDERS_INDEX = exports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = exports.SETTLE_FUNDS_BASE_WALLET_INDEX = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst token_instructions_1 = require(\"./token-instructions\");\n// NOTE: Update these if the position of arguments for the settleFunds instruction changes\nexports.SETTLE_FUNDS_BASE_WALLET_INDEX = 5;\nexports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = 6;\n// NOTE: Update these if the position of arguments for the newOrder instruction changes\nexports.NEW_ORDER_OPEN_ORDERS_INDEX = 1;\nexports.NEW_ORDER_OWNER_INDEX = 4;\n// NOTE: Update these if the position of arguments for the newOrder instruction changes\nexports.NEW_ORDER_V3_OPEN_ORDERS_INDEX = 1;\nexports.NEW_ORDER_V3_OWNER_INDEX = 7;\nexports.INSTRUCTION_LAYOUT = new layout_1.VersionedLayout(0, buffer_layout_1.union(buffer_layout_1.u32('instruction')));\nexports.INSTRUCTION_LAYOUT.inner.addVariant(0, buffer_layout_1.struct([\n    layout_1.u64('baseLotSize'),\n    layout_1.u64('quoteLotSize'),\n    buffer_layout_1.u16('feeRateBps'),\n    layout_1.u64('vaultSignerNonce'),\n    layout_1.u64('quoteDustThreshold'),\n]), 'initializeMarket');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(1, buffer_layout_1.struct([\n    layout_1.sideLayout('side'),\n    layout_1.u64('limitPrice'),\n    layout_1.u64('maxQuantity'),\n    layout_1.orderTypeLayout('orderType'),\n    layout_1.u64('clientId'),\n]), 'newOrder');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(2, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'matchOrders');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(3, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'consumeEvents');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(4, buffer_layout_1.struct([\n    layout_1.sideLayout('side'),\n    layout_1.u128('orderId'),\n    layout_1.publicKeyLayout('openOrders'),\n    buffer_layout_1.u8('openOrdersSlot'),\n]), 'cancelOrder');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(5, buffer_layout_1.struct([]), 'settleFunds');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(6, buffer_layout_1.struct([layout_1.u64('clientId')]), 'cancelOrderByClientId');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(10, buffer_layout_1.struct([\n    layout_1.sideLayout('side'),\n    layout_1.u64('limitPrice'),\n    layout_1.u64('maxBaseQuantity'),\n    layout_1.u64('maxQuoteQuantity'),\n    layout_1.selfTradeBehaviorLayout('selfTradeBehavior'),\n    layout_1.orderTypeLayout('orderType'),\n    layout_1.u64('clientId'),\n    buffer_layout_1.u16('limit'),\n]), 'newOrderV3');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(11, buffer_layout_1.struct([layout_1.sideLayout('side'), layout_1.u128('orderId')]), 'cancelOrderV2');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(12, buffer_layout_1.struct([layout_1.u64('clientId')]), 'cancelOrderByClientIdV2');\nfunction encodeInstruction(instruction) {\n    const b = Buffer.alloc(100);\n    return b.slice(0, exports.INSTRUCTION_LAYOUT.encode(instruction, b));\n}\nexports.encodeInstruction = encodeInstruction;\nfunction decodeInstruction(message) {\n    return exports.INSTRUCTION_LAYOUT.decode(message);\n}\nexports.decodeInstruction = decodeInstruction;\nclass DexInstructions {\n    static initializeMarket({ market, requestQueue, eventQueue, bids, asks, baseVault, quoteVault, baseMint, quoteMint, baseLotSize, quoteLotSize, feeRateBps, vaultSignerNonce, quoteDustThreshold, programId, }) {\n        let rentSysvar = new web3_js_1.PublicKey('SysvarRent111111111111111111111111111111111');\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: baseVault, isSigner: false, isWritable: true },\n                { pubkey: quoteVault, isSigner: false, isWritable: true },\n                { pubkey: baseMint, isSigner: false, isWritable: false },\n                { pubkey: quoteMint, isSigner: false, isWritable: false },\n                { pubkey: rentSysvar, isSigner: false, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({\n                initializeMarket: {\n                    baseLotSize,\n                    quoteLotSize,\n                    feeRateBps,\n                    vaultSignerNonce,\n                    quoteDustThreshold,\n                },\n            }),\n        });\n    }\n    static newOrder({ market, openOrders, payer, owner, requestQueue, baseVault, quoteVault, side, limitPrice, maxQuantity, orderType, clientId, programId, feeDiscountPubkey = null, }) {\n        const keys = [\n            { pubkey: market, isSigner: false, isWritable: true },\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: requestQueue, isSigner: false, isWritable: true },\n            { pubkey: payer, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: baseVault, isSigner: false, isWritable: true },\n            { pubkey: quoteVault, isSigner: false, isWritable: true },\n            { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n            { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n        ];\n        if (feeDiscountPubkey) {\n            keys.push({\n                pubkey: feeDiscountPubkey,\n                isSigner: false,\n                isWritable: false,\n            });\n        }\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                newOrder: clientId\n                    ? { side, limitPrice, maxQuantity, orderType, clientId }\n                    : { side, limitPrice, maxQuantity, orderType },\n            }),\n        });\n    }\n    static newOrderV3({ market, openOrders, payer, owner, requestQueue, eventQueue, bids, asks, baseVault, quoteVault, side, limitPrice, maxBaseQuantity, maxQuoteQuantity, orderType, clientId, programId, selfTradeBehavior, feeDiscountPubkey = null, }) {\n        const keys = [\n            { pubkey: market, isSigner: false, isWritable: true },\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: requestQueue, isSigner: false, isWritable: true },\n            { pubkey: eventQueue, isSigner: false, isWritable: true },\n            { pubkey: bids, isSigner: false, isWritable: true },\n            { pubkey: asks, isSigner: false, isWritable: true },\n            { pubkey: payer, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: baseVault, isSigner: false, isWritable: true },\n            { pubkey: quoteVault, isSigner: false, isWritable: true },\n            { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n            { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n        ];\n        if (feeDiscountPubkey) {\n            keys.push({\n                pubkey: feeDiscountPubkey,\n                isSigner: false,\n                isWritable: false,\n            });\n        }\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                newOrderV3: {\n                    side,\n                    limitPrice,\n                    maxBaseQuantity,\n                    maxQuoteQuantity,\n                    selfTradeBehavior,\n                    orderType,\n                    clientId,\n                    limit: 65535,\n                },\n            }),\n        });\n    }\n    static matchOrders({ market, requestQueue, eventQueue, bids, asks, baseVault, quoteVault, limit, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: baseVault, isSigner: false, isWritable: true },\n                { pubkey: quoteVault, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({ matchOrders: { limit } }),\n        });\n    }\n    static consumeEvents({ market, eventQueue, openOrdersAccounts, limit, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                ...openOrdersAccounts.map((account) => ({\n                    pubkey: account,\n                    isSigner: false,\n                    isWritable: true,\n                })),\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({ consumeEvents: { limit } }),\n        });\n    }\n    static cancelOrder({ market, openOrders, owner, requestQueue, side, orderId, openOrdersSlot, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrder: { side, orderId, openOrders, openOrdersSlot },\n            }),\n        });\n    }\n    static cancelOrderV2({ market, bids, asks, eventQueue, openOrders, owner, side, orderId, openOrdersSlot, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrderV2: { side, orderId },\n            }),\n        });\n    }\n    static cancelOrderByClientId({ market, openOrders, owner, requestQueue, clientId, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrderByClientId: { clientId },\n            }),\n        });\n    }\n    static cancelOrderByClientIdV2({ market, openOrders, owner, bids, asks, eventQueue, clientId, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrderByClientIdV2: { clientId },\n            }),\n        });\n    }\n    static settleFunds({ market, openOrders, owner, baseVault, quoteVault, baseWallet, quoteWallet, vaultSigner, programId, referrerQuoteWallet = null, }) {\n        const keys = [\n            { pubkey: market, isSigner: false, isWritable: true },\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: baseVault, isSigner: false, isWritable: true },\n            { pubkey: quoteVault, isSigner: false, isWritable: true },\n            { pubkey: baseWallet, isSigner: false, isWritable: true },\n            { pubkey: quoteWallet, isSigner: false, isWritable: true },\n            { pubkey: vaultSigner, isSigner: false, isWritable: false },\n            { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n        ];\n        if (referrerQuoteWallet) {\n            keys.push({\n                pubkey: referrerQuoteWallet,\n                isSigner: false,\n                isWritable: true,\n            });\n        }\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                settleFunds: {},\n            }),\n        });\n    }\n}\nexports.DexInstructions = DexInstructions;\n//# sourceMappingURL=instructions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EVENT_QUEUE_LAYOUT = exports.REQUEST_QUEUE_LAYOUT = exports.decodeEventQueue = exports.decodeRequestQueue = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst REQUEST_QUEUE_HEADER = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    buffer_layout_1.u32('head'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('count'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('nextSeqNum'),\n    layout_1.zeros(4),\n]);\nconst REQUEST_FLAGS = buffer_layout_1.bits(buffer_layout_1.u8(), false, 'requestFlags');\nREQUEST_FLAGS.addBoolean('newOrder');\nREQUEST_FLAGS.addBoolean('cancelOrder');\nREQUEST_FLAGS.addBoolean('bid');\nREQUEST_FLAGS.addBoolean('postOnly');\nREQUEST_FLAGS.addBoolean('ioc');\nconst REQUEST = buffer_layout_1.struct([\n    REQUEST_FLAGS,\n    buffer_layout_1.u8('openOrdersSlot'),\n    buffer_layout_1.u8('feeTier'),\n    buffer_layout_1.blob(5),\n    layout_1.u64('maxBaseSizeOrCancelId'),\n    layout_1.u64('nativeQuoteQuantityLocked'),\n    layout_1.u128('orderId'),\n    layout_1.publicKeyLayout('openOrders'),\n    layout_1.u64('clientOrderId'),\n]);\nconst EVENT_QUEUE_HEADER = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    buffer_layout_1.u32('head'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('count'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('seqNum'),\n    layout_1.zeros(4),\n]);\nconst EVENT_FLAGS = buffer_layout_1.bits(buffer_layout_1.u8(), false, 'eventFlags');\nEVENT_FLAGS.addBoolean('fill');\nEVENT_FLAGS.addBoolean('out');\nEVENT_FLAGS.addBoolean('bid');\nEVENT_FLAGS.addBoolean('maker');\nconst EVENT = buffer_layout_1.struct([\n    EVENT_FLAGS,\n    buffer_layout_1.u8('openOrdersSlot'),\n    buffer_layout_1.u8('feeTier'),\n    buffer_layout_1.blob(5),\n    layout_1.u64('nativeQuantityReleased'),\n    layout_1.u64('nativeQuantityPaid'),\n    layout_1.u64('nativeFeeOrRebate'),\n    layout_1.u128('orderId'),\n    layout_1.publicKeyLayout('openOrders'),\n    layout_1.u64('clientOrderId'),\n]);\nfunction decodeQueue(headerLayout, nodeLayout, buffer, history) {\n    const header = headerLayout.decode(buffer);\n    const allocLen = Math.floor((buffer.length - headerLayout.span) / nodeLayout.span);\n    const nodes = [];\n    if (history) {\n        for (let i = 0; i < Math.min(history, allocLen); ++i) {\n            const nodeIndex = (header.head + header.count + allocLen - 1 - i) % allocLen;\n            nodes.push(nodeLayout.decode(buffer, headerLayout.span + nodeIndex * nodeLayout.span));\n        }\n    }\n    else {\n        for (let i = 0; i < header.count; ++i) {\n            const nodeIndex = (header.head + i) % allocLen;\n            nodes.push(nodeLayout.decode(buffer, headerLayout.span + nodeIndex * nodeLayout.span));\n        }\n    }\n    return { header, nodes };\n}\nfunction decodeRequestQueue(buffer, history) {\n    const { header, nodes } = decodeQueue(REQUEST_QUEUE_HEADER, REQUEST, buffer, history);\n    if (!header.accountFlags.initialized || !header.accountFlags.requestQueue) {\n        throw new Error('Invalid requests queue');\n    }\n    return nodes;\n}\nexports.decodeRequestQueue = decodeRequestQueue;\nfunction decodeEventQueue(buffer, history) {\n    const { header, nodes } = decodeQueue(EVENT_QUEUE_HEADER, EVENT, buffer, history);\n    if (!header.accountFlags.initialized || !header.accountFlags.eventQueue) {\n        throw new Error('Invalid events queue');\n    }\n    return nodes;\n}\nexports.decodeEventQueue = decodeEventQueue;\nexports.REQUEST_QUEUE_LAYOUT = {\n    HEADER: REQUEST_QUEUE_HEADER,\n    NODE: REQUEST,\n};\nexports.EVENT_QUEUE_LAYOUT = {\n    HEADER: EVENT_QUEUE_HEADER,\n    NODE: EVENT,\n};\n//# sourceMappingURL=queue.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFeeTier = exports.getFeeRates = exports.supportsSrmFeeDiscounts = void 0;\nconst tokens_and_markets_1 = require(\"./tokens_and_markets\");\nfunction supportsSrmFeeDiscounts(programId) {\n    return tokens_and_markets_1.getLayoutVersion(programId) > 1;\n}\nexports.supportsSrmFeeDiscounts = supportsSrmFeeDiscounts;\nfunction getFeeRates(feeTier) {\n    if (feeTier === 1) {\n        // SRM2\n        return { taker: 0.002, maker: -0.0003 };\n    }\n    else if (feeTier === 2) {\n        // SRM3\n        return { taker: 0.0018, maker: -0.0003 };\n    }\n    else if (feeTier === 3) {\n        // SRM4\n        return { taker: 0.0016, maker: -0.0003 };\n    }\n    else if (feeTier === 4) {\n        // SRM5\n        return { taker: 0.0014, maker: -0.0003 };\n    }\n    else if (feeTier === 5) {\n        // SRM6\n        return { taker: 0.0012, maker: -0.0003 };\n    }\n    else if (feeTier === 6) {\n        // MSRM\n        return { taker: 0.001, maker: -0.0005 };\n    }\n    // Base\n    return { taker: 0.0022, maker: -0.0003 };\n}\nexports.getFeeRates = getFeeRates;\nfunction getFeeTier(msrmBalance, srmBalance) {\n    if (msrmBalance >= 1) {\n        return 6;\n    }\n    else if (srmBalance >= 1000000) {\n        return 5;\n    }\n    else if (srmBalance >= 100000) {\n        return 4;\n    }\n    else if (srmBalance >= 10000) {\n        return 3;\n    }\n    else if (srmBalance >= 1000) {\n        return 2;\n    }\n    else if (srmBalance >= 100) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexports.getFeeTier = getFeeTier;\n//# sourceMappingURL=fees.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.simulateTransaction = void 0;\n/** Copy of Connection.simulateTransaction that takes a commitment parameter. */\nasync function simulateTransaction(connection, transaction, commitment) {\n    // @ts-ignore\n    transaction.recentBlockhash = await connection._recentBlockhash(\n    // @ts-ignore\n    connection._disableBlockhashCaching);\n    const signData = transaction.serializeMessage();\n    // @ts-ignore\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config = { encoding: 'base64', commitment };\n    const args = [encodedTransaction, config];\n    // @ts-ignore\n    const res = await connection._rpcRequest('simulateTransaction', args);\n    if (res.error) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n    }\n    return res.result;\n}\nexports.simulateTransaction = simulateTransaction;\n//# sourceMappingURL=simulate-transaction.js.map","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport BN from 'bn.js';\nimport { useSnackbar } from 'notistack';\nimport {\n  Account,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_CLOCK_PUBKEY,\n} from '@solana/web3.js';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport FormControl from '@material-ui/core/FormControl';\nimport Typography from '@material-ui/core/Typography';\nimport { u64 } from '@solana/spl-token';\nimport { TokenInstructions } from '@project-serum/serum';\nimport { useWallet } from '../components/common/WalletProvider';\nimport { ViewTransactionOnExplorerButton } from '../components/common/Notification';\nimport { State as StoreState, ProgramAccount } from '../store/reducer';\nimport { ActionType } from '../store/actions';\nimport * as skin from '../skin';\nimport { toDisplay, toDisplayLabel } from '../utils/tokens';\nimport { memberSigner, registrarSigner } from '../utils/registry';\n\nexport default function Stake() {\n  const { registryClient } = useWallet();\n  const dispatch = useDispatch();\n  const { member, memberAccount, registrarAccount, registrar } = useSelector(\n    (state: StoreState) => {\n      const registrarAccount =\n        state.accounts[state.registry.registrar.toString()];\n      return {\n        member: state.registry.member,\n        memberAccount: state.registry.member\n          ? state.accounts[state.registry.member.toString()]\n          : undefined,\n        registrarAccount: registrarAccount,\n        registrar: state.registry.registrar,\n      };\n    },\n  );\n\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const createPoolTokens = async (amount: number, isLocked: boolean) => {\n    enqueueSnackbar(\n      `Staking ${toDisplayLabel(registrarAccount.poolMint)} Pool tokens`,\n      {\n        variant: 'info',\n      },\n    );\n\n    const tx = await registryClient.rpc.stake(new u64(amount), isLocked, {\n      accounts: {\n        registrar,\n        rewardEventQ: registrarAccount.rewardEventQ,\n        poolMint: registrarAccount.poolMint,\n        member,\n        beneficiary: registryClient.provider.wallet.publicKey,\n        balances: memberAccount.balances,\n        balancesLocked: memberAccount.balancesLocked,\n        memberSigner: (\n          await memberSigner(registryClient.programId, registrar, member!)\n        ).publicKey,\n        registrarSigner: (\n          await registrarSigner(registryClient.programId, registrar)\n        ).publicKey,\n        clock: SYSVAR_CLOCK_PUBKEY,\n        tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n      },\n    });\n    closeSnackbar();\n    enqueueSnackbar(`Staking complete`, {\n      variant: 'success',\n      action: <ViewTransactionOnExplorerButton signature={tx} />,\n    });\n  };\n\n  const redeemPoolTokens = async (amount: number, isLocked: boolean) => {\n    enqueueSnackbar(\n      `Unstaking ${amount} ${toDisplayLabel(\n        registrarAccount.poolMint,\n      )} Pool tokens`,\n      {\n        variant: 'info',\n      },\n    );\n\n    const pendingWithdrawal = new Account();\n    const tx = await registryClient.rpc.startUnstake(\n      new u64(amount),\n      isLocked,\n      {\n        accounts: {\n          registrar,\n          rewardEventQ: registrarAccount.rewardEventQ,\n          poolMint: registrarAccount.poolMint,\n\n          pendingWithdrawal: pendingWithdrawal.publicKey,\n          member,\n          beneficiary: registryClient.provider.wallet.publicKey,\n          balances: memberAccount.balances,\n          balancesLocked: memberAccount.balancesLocked,\n\n          memberSigner: (\n            await memberSigner(registryClient.programId, registrar, member!)\n          ).publicKey,\n\n          tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n          clock: SYSVAR_CLOCK_PUBKEY,\n          rent: SYSVAR_RENT_PUBKEY,\n        },\n        signers: [pendingWithdrawal],\n        instructions: [\n          await registryClient.account.pendingWithdrawal.createInstruction(\n            pendingWithdrawal,\n          ),\n        ],\n      },\n    );\n    const pwAccount = await registryClient.account.pendingWithdrawal(\n      pendingWithdrawal.publicKey,\n    );\n    dispatch({\n      type: ActionType.RegistryCreatePendingWithdrawal,\n      item: {\n        pendingWithdrawal: {\n          publicKey: pendingWithdrawal.publicKey,\n          account: pwAccount,\n        },\n      },\n    });\n    closeSnackbar();\n    enqueueSnackbar(`Stake transfer initiated`, {\n      variant: 'success',\n      action: <ViewTransactionOnExplorerButton signature={tx} />,\n    });\n  };\n\n  const createPool = async (shares: number, isLocked: boolean) => {\n    if (shares > 0) {\n      createPoolTokens(shares, isLocked).catch(err => {\n        console.error(err);\n        enqueueSnackbar(`Error staking: ${err.toString()}`, {\n          variant: 'error',\n        });\n      });\n    }\n  };\n  const redeemPool = async (shares: number, isLocked: boolean) => {\n    if (shares > 0) {\n      redeemPoolTokens(shares, isLocked).catch(err => {\n        console.error(err);\n        enqueueSnackbar(`Error unstaking: ${err.toString()}`, {\n          variant: 'error',\n        });\n      });\n    }\n  };\n\n  return (\n    <div style={{ width: '100%' }}>\n      <div style={{ display: 'flex', width: '100%' }}>\n        <div style={{ flex: 1, marginTop: '24px', marginBottom: '24px' }}>\n          <PoolCard\n            title={'Stake Pool'}\n            create={createPool}\n            redeem={redeemPool}\n          />\n        </div>\n        <RedemptionList\n          style={{\n            marginBottom: '24px',\n          }}\n        />\n      </div>\n      <AllPendingTransfers />\n    </div>\n  );\n}\n\ntype PoolCardProps = {\n  title: string;\n  create: (shares: number, isLocked: boolean) => void;\n  redeem: (shares: number, isLocked: boolean) => void;\n};\n\nfunction PoolCard(props: PoolCardProps) {\n  const { title, create, redeem } = props;\n  const [poolAmount, setPoolAmount] = useState<null | number>(null);\n  const [isLocked, setIsLocked] = useState(false);\n  const { poolTokenMint, member, registrarAccount, mint } = useSelector(\n    (state: StoreState) => {\n      const registrarAccount =\n        state.accounts[state.registry.registrar.toString()];\n      const poolTokenMint = {\n        publicKey: registrarAccount.poolMint,\n        account: state.accounts[registrarAccount.poolMint.toString()],\n      };\n      return {\n        poolTokenMint,\n        member: state.registry.member,\n        registrarAccount,\n        mint: {\n          publicKey: registrarAccount.mint,\n          account: state.accounts[registrarAccount.mint.toString()],\n        },\n      };\n    },\n  );\n\n  const pricePerShare = toDisplay(\n    registrarAccount.stakeRate,\n    mint.account.decimals,\n  );\n\n  const cost = poolAmount\n    ? toDisplay(\n        registrarAccount.stakeRate.mul(new BN(poolAmount)),\n        mint.account.decimals,\n      )\n    : 0;\n  return (\n    <Card\n      style={{\n        marginBottom: '24px',\n      }}\n    >\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <CardHeader\n          title={title}\n          subheader={poolTokenMint.publicKey.toString()}\n        />\n        <div\n          style={{\n            paddingRight: '16px',\n            display: 'flex',\n            justifyContent: 'center',\n            flexDirection: 'column',\n          }}\n        >\n          <Typography color=\"textSecondary\"></Typography>\n        </div>\n      </div>\n      <CardContent>\n        <div\n          style={{\n            marginBottom: '16px',\n          }}\n        >\n          <Typography>\n            Please enter the amount of pool tokens you would like to purchase in\n            the form below. Upon pressing <b>stake</b> you will create new pool\n            tokens at a fixed price, adding to the amount of pool tokens\n            outstanding.\n          </Typography>\n          <br />\n          <Typography>\n            Unstaking works similarly, except one must incur an unbonding period\n            where funds will not be able to be retrieved until the unbonding\n            period ends. At the end of the unbonding period, click the blue\n            checkbox next to your pending transfer. If the checkbox is grey,\n            your unbonding period has not yet completed.\n          </Typography>\n          <br />\n          <Typography style={{ fontWeight: 'bold' }}>\n            Total pool tokens outstanding\n          </Typography>\n          <Typography>{poolTokenMint.account.supply.toString()}</Typography>\n          <Typography style={{ fontWeight: 'bold' }}>\n            Price per pool token\n          </Typography>\n          <Typography>{pricePerShare.toString()}</Typography>\n          <Typography style={{ fontWeight: 'bold' }}>\n            Your total cost\n          </Typography>\n          <Typography>\n            {cost} {toDisplayLabel(mint.publicKey)}\n          </Typography>\n          <Typography style={{ fontWeight: 'bold' }}>\n            Unbonding period (days)\n          </Typography>\n          <Typography>\n            {(\n              registrarAccount.withdrawalTimelock /\n              (60 * 60 * 24.0)\n            ).toString()}\n          </Typography>\n        </div>\n        <div>\n          <div style={{ marginBottom: '10px' }}>\n            <FormControl>\n              <TextField\n                style={{ width: '100%' }}\n                label=\"Pool tokens\"\n                type=\"number\"\n                variant=\"outlined\"\n                onChange={e => setPoolAmount(parseInt(e.target.value))}\n              />\n            </FormControl>\n          </div>\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <div>\n              <Button\n                disabled={member === undefined}\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => create(poolAmount as number, isLocked)}\n              >\n                Stake\n              </Button>\n              <Button\n                disabled={member === undefined}\n                color=\"secondary\"\n                variant=\"contained\"\n                style={{ marginLeft: '10px' }}\n                onClick={() => redeem(poolAmount as number, isLocked)}\n              >\n                Unstake\n              </Button>\n            </div>\n            <div>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={isLocked}\n                    onChange={() => setIsLocked(!isLocked)}\n                  />\n                }\n                labelPlacement={'start'}\n                label=\"Locked balances\"\n              />\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\ntype RedemptionListProps = {\n  style: any;\n};\n\nfunction RedemptionList(props: RedemptionListProps) {\n  const { registryClient } = useWallet();\n  const dispatch = useDispatch();\n  const { member, registrar, mint, pendingWithdrawals } = useSelector(\n    (state: StoreState) => {\n      const member = state.registry.member\n        ? {\n            publicKey: state.registry.member,\n            account: state.accounts[state.registry.member.toString()],\n          }\n        : undefined;\n      const registrar = {\n        publicKey: state.registry.registrar!,\n        account: state.accounts[state.registry.registrar.toString()],\n      };\n      const mint = {\n        publicKey: registrar.account.mint,\n        account: state.accounts[registrar.account.mint.toString()],\n      };\n      const pendingWithdrawals =\n        state.registry.pendingWithdrawals === null\n          ? null\n          : state.registry.pendingWithdrawals.map(pw => {\n              return {\n                publicKey: pw,\n                account: state.accounts[pw.toString()],\n              };\n            });\n      return {\n        member,\n        registrar,\n        mint,\n        pendingWithdrawals,\n      };\n    },\n  );\n\n  useEffect(() => {\n    if (!member) {\n      return;\n    }\n    if (pendingWithdrawals !== null) {\n      return;\n    }\n\n    // Only grab pending withdrawals for the current member account.\n    const filter = Buffer.concat([\n      registrar.publicKey.toBuffer(),\n      member.publicKey.toBuffer(),\n    ]);\n    registryClient.account.pendingWithdrawal\n      .all(filter)\n      .then(pendingWithdrawals => {\n        dispatch({\n          type: ActionType.RegistrySetPendingWithdrawals,\n          item: {\n            pendingWithdrawals,\n          },\n        });\n      });\n  }, [\n    dispatch,\n    registrar,\n    member,\n    pendingWithdrawals,\n    registryClient.account.pendingWithdrawal,\n  ]);\n\n  return (\n    <div style={props.style}>\n      <Card\n        style={{\n          marginLeft: '20px',\n          marginTop: '24px',\n          width: '294px',\n        }}\n      >\n        <CardContent\n          style={{\n            paddingLeft: 0,\n            paddingRight: 0,\n            paddingBottom: 0,\n            paddingTop: 0,\n          }}\n        >\n          <div\n            style={{\n              marginLeft: '24px',\n              marginTop: '24px',\n              marginRight: '24px',\n              borderBottom: 'solid 1pt #ccc',\n              paddingBottom: '12px',\n            }}\n          >\n            <Typography style={{}}>Your Pending Transfers</Typography>\n            <Typography style={{ fontSize: '12px' }} color=\"textSecondary\">\n              Click the checkmark to complete a transfer on or after the \"end\"\n              date.\n            </Typography>\n          </div>\n          <div style={{ paddingLeft: '24px', paddingRight: '24px' }}>\n            {member && pendingWithdrawals === null ? (\n              <div style={{ paddingTop: '24px', marginBottom: '24px' }}>\n                <CircularProgress\n                  style={{\n                    display: 'block',\n                    marginLeft: 'auto',\n                    marginRight: 'auto',\n                  }}\n                />\n              </div>\n            ) : pendingWithdrawals !== null && pendingWithdrawals.length > 0 ? (\n              pendingWithdrawals.map((pw, idx) => {\n                return (\n                  <PendingStakeListItem\n                    key={pw.publicKey.toString()}\n                    isLast={idx === pendingWithdrawals.length - 1}\n                    registrar={registrar}\n                    pw={pw}\n                    member={member!}\n                    mint={mint}\n                  />\n                );\n              })\n            ) : (\n              <div\n                style={{\n                  paddingBottom: '24px',\n                  paddingTop: '12px',\n                }}\n              >\n                <Typography color=\"textSecondary\" style={{ fontSize: '14px' }}>\n                  None found\n                </Typography>\n              </div>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\ntype PendingStakeListItemProps = {\n  isLast?: boolean;\n  registrar: ProgramAccount;\n  pw: ProgramAccount;\n  member: ProgramAccount;\n  mint: ProgramAccount;\n};\n\nfunction PendingStakeListItem(props: PendingStakeListItemProps) {\n  const { isLast, pw, member, registrar, mint } = props;\n  const sptLabel = (() => {\n    const isLocked = pw.account.locked;\n    const l = isLocked ? '(locked)' : '';\n    return `${toDisplay(\n      pw.account.amount,\n      mint.account.decimals,\n    )} ${toDisplayLabel(mint.publicKey)} ${l}`;\n  })();\n  return (\n    <div\n      style={{\n        paddingBottom: !isLast ? '12px' : '24px',\n        paddingTop: '12px',\n        borderBottom: 'solid 1pt #ccc',\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          overflow: 'hidden',\n        }}\n      >\n        <div>\n          <Typography\n            style={{\n              whiteSpace: 'pre',\n              maxWidth: '195px',\n              overflow: 'hidden',\n              fontWeight: 'bold',\n              fontSize: '14px',\n            }}\n          >\n            {`${sptLabel}`}\n          </Typography>\n        </div>\n        <div>\n          <PendingWithdrawalButton\n            registrar={registrar}\n            member={member}\n            pendingWithdrawal={pw}\n          />\n        </div>\n      </div>\n      <Typography style={{ fontSize: '14px' }}>\n        {`Start: ${new Date(\n          pw.account.startTs.toNumber() * 1000,\n        ).toLocaleString()}`}\n      </Typography>\n      <Typography style={{ fontSize: '14px' }}>\n        {`End:   ${new Date(\n          pw.account.endTs.toNumber() * 1000,\n        ).toLocaleString()}`}\n      </Typography>\n      <Typography\n        color=\"textSecondary\"\n        style={{\n          fontSize: '14px',\n          overflow: 'hidden',\n        }}\n      >\n        {pw.account.pool.toString()}\n      </Typography>\n    </div>\n  );\n}\n\ntype PendingWithdrawalButtonProps = {\n  registrar: ProgramAccount;\n  pendingWithdrawal: ProgramAccount;\n  member: ProgramAccount;\n};\n\nfunction PendingWithdrawalButton(props: PendingWithdrawalButtonProps) {\n  const { pendingWithdrawal, member, registrar } = props;\n  const { registryClient } = useWallet();\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const dispatch = useDispatch();\n\n  const endPendingWithdrawal = async () => {\n    enqueueSnackbar(`Completing redemption`, {\n      variant: 'info',\n    });\n    const balances = pendingWithdrawal.account.locked\n      ? member.account.balancesLocked\n      : member.account.balances;\n    const tx = await registryClient.rpc.endUnstake({\n      accounts: {\n        registrar: registrar.publicKey,\n        member: member.publicKey,\n        beneficiary: registryClient.provider.wallet.publicKey,\n        pendingWithdrawal: pendingWithdrawal.publicKey,\n        vault: balances.vault,\n        vaultPw: balances.vaultPw,\n        memberSigner: (\n          await memberSigner(\n            registryClient.programId,\n            registrar.publicKey,\n            member.publicKey,\n          )\n        ).publicKey,\n        clock: SYSVAR_CLOCK_PUBKEY,\n        tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n      },\n    });\n\n    const updatedPendingWithdrawal = {\n      publicKey: pendingWithdrawal.publicKey,\n      account: {\n        ...pendingWithdrawal.account,\n        burned: true,\n      },\n    };\n\n    dispatch({\n      type: ActionType.RegistryUpdatePendingWithdrawal,\n      item: {\n        pendingWithdrawal: updatedPendingWithdrawal,\n      },\n    });\n\n    closeSnackbar();\n    enqueueSnackbar(`Stake transfer completed`, {\n      variant: 'success',\n      action: <ViewTransactionOnExplorerButton signature={tx} />,\n    });\n  };\n\n  let disabled = false;\n  let color = skin.instance().ready;\n  let onClick = async () =>\n    endPendingWithdrawal().catch(err => {\n      console.error(`Error completing transfer: ${err.toString()}`);\n      enqueueSnackbar(\n        `Error completing transfer. Wait for the transfer's timelock to end and try again.`,\n        {\n          variant: 'error',\n        },\n      );\n    });\n  if (pendingWithdrawal.account.burned) {\n    disabled = true;\n    color = skin.instance().active;\n    onClick = async () => {};\n  }\n\n  if (pendingWithdrawal.account.endTs.toNumber() > Date.now() / 1000) {\n    disabled = true;\n    color = skin.instance().notReady;\n    onClick = async () => {};\n  }\n\n  return (\n    <div\n      onClick={onClick}\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n      }}\n    >\n      <IconButton disabled={disabled} style={{ width: '25px', height: '25px' }}>\n        <CheckCircleIcon style={{ color, fontSize: '20px' }} />\n      </IconButton>\n    </div>\n  );\n}\n\nfunction AllPendingTransfers() {\n  const { registryClient } = useWallet();\n  const { registrar, registrarAccount, mintAccount } = useSelector(\n    (state: StoreState) => {\n      const registrarAccount =\n        state.accounts[state.registry.registrar.toString()];\n      return {\n        registrar: state.registry.registrar,\n        registrarAccount,\n        mintAccount: state.accounts[registrarAccount.mint.toString()],\n      };\n    },\n  );\n  const [pendingTransfers, setPendingTransfers] = useState<null | any>(null);\n  useEffect(() => {\n    const fetchAll = async () => {\n      let transfers = await registryClient.account.pendingWithdrawal.all(\n        registrar.toBuffer(),\n      );\n      transfers = transfers\n        .filter((pw: any) => pw.account.burned === false)\n        .sort((a, b) => {\n          if (a.account.startTs < b.account.startTs) {\n            return 1;\n          } else if (a.account.startTs > b.account.startTs) {\n            return -1;\n          } else {\n            return 0;\n          }\n        });\n      setPendingTransfers(transfers);\n    };\n    fetchAll();\n  }, [registryClient, registrar]);\n\n  return (\n    <Card style={{ maxHeight: '900px', overflow: 'auto' }}>\n      <Typography\n        variant=\"h5\"\n        style={{ padding: '16px', borderBottom: 'solid 1pt #ccc' }}\n      >\n        All pending transfers\n      </Typography>\n      {pendingTransfers !== null ? (\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Member Account</TableCell>\n              <TableCell>Amount</TableCell>\n              <TableCell>Pool</TableCell>\n              <TableCell>Locked</TableCell>\n              <TableCell>Start</TableCell>\n              <TableCell>End</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {pendingTransfers.map((pw: any) => (\n              <TableRow>\n                <TableCell>{pw.account.member.toString()}</TableCell>\n                <TableCell>\n                  {toDisplay(\n                    pw.account.amount.toString(),\n                    mintAccount.decimals,\n                  )}\n                </TableCell>\n                <TableCell>\n                  {pw.account.amount.div(registrarAccount.stakeRate).toString()}\n                </TableCell>\n                <TableCell>{pw.account.locked.toString()}</TableCell>\n                <TableCell>\n                  {new Date(pw.account.startTs.toNumber() * 1000).toString()}\n                </TableCell>\n                <TableCell>\n                  {new Date(pw.account.endTs.toNumber() * 1000).toString()}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      ) : (\n        <div style={{ padding: '24px' }}>\n          <CircularProgress\n            style={{\n              display: 'block',\n              marginLeft: 'auto',\n              marginRight: 'auto',\n            }}\n          />\n        </div>\n      )}\n    </Card>\n  );\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rustEnum = exports.str = exports.vecU8 = exports.tagged = exports.vec = exports.bool = exports.option = exports.publicKey = exports.i128 = exports.u128 = exports.i64 = exports.u64 = exports.struct = exports.u32 = exports.u8 = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nvar buffer_layout_2 = require(\"buffer-layout\");\nObject.defineProperty(exports, \"u8\", { enumerable: true, get: function () { return buffer_layout_2.u8; } });\nObject.defineProperty(exports, \"u32\", { enumerable: true, get: function () { return buffer_layout_2.u32; } });\nObject.defineProperty(exports, \"struct\", { enumerable: true, get: function () { return buffer_layout_2.struct; } });\nclass BNLayout extends buffer_layout_1.Layout {\n    constructor(span, signed, property) {\n        super(span, property);\n        this.blob = buffer_layout_1.blob(span);\n        this.signed = signed;\n    }\n    decode(b, offset = 0) {\n        const num = new bn_js_1.default(this.blob.decode(b, offset), 10, 'le');\n        if (this.signed) {\n            return num.fromTwos(this.span * 8).clone();\n        }\n        return num;\n    }\n    encode(src, b, offset = 0) {\n        if (this.signed) {\n            src = src.toTwos(this.span * 8);\n        }\n        return this.blob.encode(src.toArrayLike(Buffer, 'le', this.span), b, offset);\n    }\n}\nfunction u64(property) {\n    return new BNLayout(8, false, property);\n}\nexports.u64 = u64;\nfunction i64(property) {\n    return new BNLayout(8, true, property);\n}\nexports.i64 = i64;\nfunction u128(property) {\n    return new BNLayout(16, false, property);\n}\nexports.u128 = u128;\nfunction i128(property) {\n    return new BNLayout(16, true, property);\n}\nexports.i128 = i128;\nclass WrappedLayout extends buffer_layout_1.Layout {\n    constructor(layout, decoder, encoder, property) {\n        super(layout.span, property);\n        this.layout = layout;\n        this.decoder = decoder;\n        this.encoder = encoder;\n    }\n    decode(b, offset) {\n        return this.decoder(this.layout.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return this.layout.encode(this.encoder(src), b, offset);\n    }\n    getSpan(b, offset) {\n        return this.layout.getSpan(b, offset);\n    }\n}\nfunction publicKey(property) {\n    return new WrappedLayout(buffer_layout_1.blob(32), (b) => new web3_js_1.PublicKey(b), (key) => key.toBuffer(), property);\n}\nexports.publicKey = publicKey;\nclass OptionLayout extends buffer_layout_1.Layout {\n    constructor(layout, property) {\n        super(-1, property);\n        this.layout = layout;\n        this.discriminator = buffer_layout_1.u8();\n    }\n    encode(src, b, offset = 0) {\n        if (src === null || src === undefined) {\n            return this.discriminator.encode(0, b, offset);\n        }\n        this.discriminator.encode(1, b, offset);\n        return this.layout.encode(src, b, offset + 1) + 1;\n    }\n    decode(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return null;\n        }\n        else if (discriminator === 1) {\n            return this.layout.decode(b, offset + 1);\n        }\n        throw new Error('Invalid option ' + this.property);\n    }\n    getSpan(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return 1;\n        }\n        else if (discriminator === 1) {\n            return this.layout.getSpan(b, offset + 1) + 1;\n        }\n        throw new Error('Invalid option ' + this.property);\n    }\n}\nfunction option(layout, property) {\n    return new OptionLayout(layout, property);\n}\nexports.option = option;\nfunction bool(property) {\n    return new WrappedLayout(buffer_layout_1.u8(), decodeBool, encodeBool, property);\n}\nexports.bool = bool;\nfunction decodeBool(value) {\n    if (value === 0) {\n        return false;\n    }\n    else if (value === 1) {\n        return true;\n    }\n    throw new Error('Invalid bool: ' + value);\n}\nfunction encodeBool(value) {\n    return value ? 1 : 0;\n}\nfunction vec(elementLayout, property) {\n    const length = buffer_layout_1.u32('length');\n    const layout = buffer_layout_1.struct([\n        length,\n        buffer_layout_1.seq(elementLayout, buffer_layout_1.offset(length, -length.span), 'values'),\n    ]);\n    return new WrappedLayout(layout, ({ values }) => values, values => ({ values }), property);\n}\nexports.vec = vec;\nfunction tagged(tag, layout, property) {\n    const wrappedLayout = buffer_layout_1.struct([\n        u64('tag'),\n        layout.replicate('data'),\n    ]);\n    function decodeTag({ tag: receivedTag, data }) {\n        if (!receivedTag.eq(tag)) {\n            throw new Error('Invalid tag, expected: ' +\n                tag.toString('hex') +\n                ', got: ' +\n                receivedTag.toString('hex'));\n        }\n        return data;\n    }\n    return new WrappedLayout(wrappedLayout, decodeTag, data => ({ tag, data }), property);\n}\nexports.tagged = tagged;\nfunction vecU8(property) {\n    const length = buffer_layout_1.u32('length');\n    const layout = buffer_layout_1.struct([\n        length,\n        buffer_layout_1.blob(buffer_layout_1.offset(length, -length.span), 'data'),\n    ]);\n    return new WrappedLayout(layout, ({ data }) => data, data => ({ data }), property);\n}\nexports.vecU8 = vecU8;\nfunction str(property) {\n    return new WrappedLayout(vecU8(), data => data.toString('utf-8'), s => Buffer.from(s, 'utf-8'), property);\n}\nexports.str = str;\nfunction rustEnum(variants, property) {\n    const unionLayout = buffer_layout_1.union(buffer_layout_1.u8(), property);\n    variants.forEach((variant, index) => unionLayout.addVariant(index, variant, variant.property));\n    return unionLayout;\n}\nexports.rustEnum = rustEnum;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMintDecimals = exports.Orderbook = exports.ORDERBOOK_LAYOUT = exports.OpenOrders = exports._OPEN_ORDERS_LAYOUT_V2 = exports._OPEN_ORDERS_LAYOUT_V1 = exports.Market = exports._MARKET_STATE_LAYOUT_V2 = exports._MARKET_STAT_LAYOUT_V1 = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst slab_1 = require(\"./slab\");\nconst instructions_1 = require(\"./instructions\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst queue_1 = require(\"./queue\");\nconst buffer_1 = require(\"buffer\");\nconst fees_1 = require(\"./fees\");\nconst token_instructions_1 = require(\"./token-instructions\");\nconst tokens_and_markets_1 = require(\"./tokens_and_markets\");\nexports._MARKET_STAT_LAYOUT_V1 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('ownAddress'),\n    layout_1.u64('vaultSignerNonce'),\n    layout_1.publicKeyLayout('baseMint'),\n    layout_1.publicKeyLayout('quoteMint'),\n    layout_1.publicKeyLayout('baseVault'),\n    layout_1.u64('baseDepositsTotal'),\n    layout_1.u64('baseFeesAccrued'),\n    layout_1.publicKeyLayout('quoteVault'),\n    layout_1.u64('quoteDepositsTotal'),\n    layout_1.u64('quoteFeesAccrued'),\n    layout_1.u64('quoteDustThreshold'),\n    layout_1.publicKeyLayout('requestQueue'),\n    layout_1.publicKeyLayout('eventQueue'),\n    layout_1.publicKeyLayout('bids'),\n    layout_1.publicKeyLayout('asks'),\n    layout_1.u64('baseLotSize'),\n    layout_1.u64('quoteLotSize'),\n    layout_1.u64('feeRateBps'),\n    buffer_layout_1.blob(7),\n]);\nexports._MARKET_STATE_LAYOUT_V2 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('ownAddress'),\n    layout_1.u64('vaultSignerNonce'),\n    layout_1.publicKeyLayout('baseMint'),\n    layout_1.publicKeyLayout('quoteMint'),\n    layout_1.publicKeyLayout('baseVault'),\n    layout_1.u64('baseDepositsTotal'),\n    layout_1.u64('baseFeesAccrued'),\n    layout_1.publicKeyLayout('quoteVault'),\n    layout_1.u64('quoteDepositsTotal'),\n    layout_1.u64('quoteFeesAccrued'),\n    layout_1.u64('quoteDustThreshold'),\n    layout_1.publicKeyLayout('requestQueue'),\n    layout_1.publicKeyLayout('eventQueue'),\n    layout_1.publicKeyLayout('bids'),\n    layout_1.publicKeyLayout('asks'),\n    layout_1.u64('baseLotSize'),\n    layout_1.u64('quoteLotSize'),\n    layout_1.u64('feeRateBps'),\n    layout_1.u64('referrerRebatesAccrued'),\n    buffer_layout_1.blob(7),\n]);\nclass Market {\n    constructor(decoded, baseMintDecimals, quoteMintDecimals, options = {}, programId) {\n        const { skipPreflight = false, commitment = 'recent' } = options;\n        if (!decoded.accountFlags.initialized || !decoded.accountFlags.market) {\n            throw new Error('Invalid market state');\n        }\n        this._decoded = decoded;\n        this._baseSplTokenDecimals = baseMintDecimals;\n        this._quoteSplTokenDecimals = quoteMintDecimals;\n        this._skipPreflight = skipPreflight;\n        this._commitment = commitment;\n        this._programId = programId;\n        this._openOrdersAccountsCache = {};\n        this._feeDiscountKeysCache = {};\n    }\n    static getLayout(programId) {\n        if (tokens_and_markets_1.getLayoutVersion(programId) === 1) {\n            return exports._MARKET_STAT_LAYOUT_V1;\n        }\n        return exports._MARKET_STATE_LAYOUT_V2;\n    }\n    static async load(connection, address, options = {}, programId) {\n        const { owner, data } = throwIfNull(await connection.getAccountInfo(address), 'Market not found');\n        if (!owner.equals(programId)) {\n            throw new Error('Address not owned by program: ' + owner.toBase58());\n        }\n        const decoded = this.getLayout(programId).decode(data);\n        if (!decoded.accountFlags.initialized ||\n            !decoded.accountFlags.market ||\n            !decoded.ownAddress.equals(address)) {\n            throw new Error('Invalid market');\n        }\n        const [baseMintDecimals, quoteMintDecimals] = await Promise.all([\n            getMintDecimals(connection, decoded.baseMint),\n            getMintDecimals(connection, decoded.quoteMint),\n        ]);\n        return new Market(decoded, baseMintDecimals, quoteMintDecimals, options, programId);\n    }\n    get programId() {\n        return this._programId;\n    }\n    get address() {\n        return this._decoded.ownAddress;\n    }\n    get publicKey() {\n        return this.address;\n    }\n    get baseMintAddress() {\n        return this._decoded.baseMint;\n    }\n    get quoteMintAddress() {\n        return this._decoded.quoteMint;\n    }\n    get bidsAddress() {\n        return this._decoded.bids;\n    }\n    get asksAddress() {\n        return this._decoded.asks;\n    }\n    async loadBids(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.bids));\n        return Orderbook.decode(this, data);\n    }\n    async loadAsks(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.asks));\n        return Orderbook.decode(this, data);\n    }\n    async loadOrdersForOwner(connection, ownerAddress, cacheDurationMs = 0) {\n        const [bids, asks, openOrdersAccounts] = await Promise.all([\n            this.loadBids(connection),\n            this.loadAsks(connection),\n            this.findOpenOrdersAccountsForOwner(connection, ownerAddress, cacheDurationMs),\n        ]);\n        return this.filterForOpenOrders(bids, asks, openOrdersAccounts);\n    }\n    filterForOpenOrders(bids, asks, openOrdersAccounts) {\n        return [...bids, ...asks].filter((order) => openOrdersAccounts.some((openOrders) => order.openOrdersAddress.equals(openOrders.address)));\n    }\n    async findBaseTokenAccountsForOwner(connection, ownerAddress, includeUnwrappedSol = false) {\n        if (this.baseMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) && includeUnwrappedSol) {\n            const [wrapped, unwrapped] = await Promise.all([\n                this.findBaseTokenAccountsForOwner(connection, ownerAddress, false),\n                connection.getAccountInfo(ownerAddress),\n            ]);\n            if (unwrapped !== null) {\n                return [{ pubkey: ownerAddress, account: unwrapped }, ...wrapped];\n            }\n            return wrapped;\n        }\n        return await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, this.baseMintAddress);\n    }\n    async getTokenAccountsByOwnerForMint(connection, ownerAddress, mintAddress) {\n        return (await connection.getTokenAccountsByOwner(ownerAddress, {\n            mint: mintAddress,\n        })).value;\n    }\n    async findQuoteTokenAccountsForOwner(connection, ownerAddress, includeUnwrappedSol = false) {\n        if (this.quoteMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) && includeUnwrappedSol) {\n            const [wrapped, unwrapped] = await Promise.all([\n                this.findQuoteTokenAccountsForOwner(connection, ownerAddress, false),\n                connection.getAccountInfo(ownerAddress),\n            ]);\n            if (unwrapped !== null) {\n                return [{ pubkey: ownerAddress, account: unwrapped }, ...wrapped];\n            }\n            return wrapped;\n        }\n        return await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, this.quoteMintAddress);\n    }\n    async findOpenOrdersAccountsForOwner(connection, ownerAddress, cacheDurationMs = 0) {\n        const strOwner = ownerAddress.toBase58();\n        const now = new Date().getTime();\n        if (strOwner in this._openOrdersAccountsCache &&\n            now - this._openOrdersAccountsCache[strOwner].ts < cacheDurationMs) {\n            return this._openOrdersAccountsCache[strOwner].accounts;\n        }\n        const openOrdersAccountsForOwner = await OpenOrders.findForMarketAndOwner(connection, this.address, ownerAddress, this._programId);\n        this._openOrdersAccountsCache[strOwner] = {\n            accounts: openOrdersAccountsForOwner,\n            ts: now,\n        };\n        return openOrdersAccountsForOwner;\n    }\n    async placeOrder(connection, { owner, payer, side, price, size, orderType = 'limit', clientId, openOrdersAddressKey, openOrdersAccount, feeDiscountPubkey, }) {\n        const { transaction, signers, } = await this.makePlaceOrderTransaction(connection, {\n            owner,\n            payer,\n            side,\n            price,\n            size,\n            orderType,\n            clientId,\n            openOrdersAddressKey,\n            openOrdersAccount,\n            feeDiscountPubkey,\n        });\n        return await this._sendTransaction(connection, transaction, [\n            owner,\n            ...signers,\n        ]);\n    }\n    getSplTokenBalanceFromAccountInfo(accountInfo, decimals) {\n        return divideBnToNumber(new bn_js_1.default(accountInfo.data.slice(64, 72), 10, 'le'), new bn_js_1.default(10).pow(new bn_js_1.default(decimals)));\n    }\n    get supportsSrmFeeDiscounts() {\n        return fees_1.supportsSrmFeeDiscounts(this._programId);\n    }\n    get supportsReferralFees() {\n        return tokens_and_markets_1.getLayoutVersion(this._programId) > 1;\n    }\n    get usesRequestQueue() {\n        return tokens_and_markets_1.getLayoutVersion(this._programId) <= 2;\n    }\n    async findFeeDiscountKeys(connection, ownerAddress, cacheDurationMs = 0) {\n        let sortedAccounts = [];\n        const now = new Date().getTime();\n        const strOwner = ownerAddress.toBase58();\n        if (strOwner in this._feeDiscountKeysCache &&\n            now - this._feeDiscountKeysCache[strOwner].ts < cacheDurationMs) {\n            return this._feeDiscountKeysCache[strOwner].accounts;\n        }\n        if (this.supportsSrmFeeDiscounts) {\n            // Fee discounts based on (M)SRM holdings supported in newer versions\n            const msrmAccounts = (await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, token_instructions_1.MSRM_MINT)).map(({ pubkey, account }) => {\n                const balance = this.getSplTokenBalanceFromAccountInfo(account, token_instructions_1.MSRM_DECIMALS);\n                return {\n                    pubkey,\n                    mint: token_instructions_1.MSRM_MINT,\n                    balance,\n                    feeTier: fees_1.getFeeTier(balance, 0),\n                };\n            });\n            const srmAccounts = (await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, token_instructions_1.SRM_MINT)).map(({ pubkey, account }) => {\n                const balance = this.getSplTokenBalanceFromAccountInfo(account, token_instructions_1.SRM_DECIMALS);\n                return {\n                    pubkey,\n                    mint: token_instructions_1.SRM_MINT,\n                    balance,\n                    feeTier: fees_1.getFeeTier(0, balance),\n                };\n            });\n            sortedAccounts = msrmAccounts.concat(srmAccounts).sort((a, b) => {\n                if (a.feeTier > b.feeTier) {\n                    return -1;\n                }\n                else if (a.feeTier < b.feeTier) {\n                    return 1;\n                }\n                else {\n                    if (a.balance > b.balance) {\n                        return -1;\n                    }\n                    else if (a.balance < b.balance) {\n                        return 1;\n                    }\n                    else {\n                        return 0;\n                    }\n                }\n            });\n        }\n        this._feeDiscountKeysCache[strOwner] = {\n            accounts: sortedAccounts,\n            ts: now,\n        };\n        return sortedAccounts;\n    }\n    async findBestFeeDiscountKey(connection, ownerAddress, cacheDurationMs = 30000) {\n        const accounts = await this.findFeeDiscountKeys(connection, ownerAddress, cacheDurationMs);\n        if (accounts.length > 0) {\n            return {\n                pubkey: accounts[0].pubkey,\n                feeTier: accounts[0].feeTier,\n            };\n        }\n        return {\n            pubkey: null,\n            feeTier: 0,\n        };\n    }\n    async makePlaceOrderTransaction(connection, { owner, payer, side, price, size, orderType = 'limit', clientId, openOrdersAddressKey, openOrdersAccount, feeDiscountPubkey = undefined, }, cacheDurationMs = 0, feeDiscountPubkeyCacheDurationMs = 0) {\n        var _a, _b;\n        // @ts-ignore\n        const ownerAddress = (_a = owner.publicKey) !== null && _a !== void 0 ? _a : owner;\n        const openOrdersAccounts = await this.findOpenOrdersAccountsForOwner(connection, ownerAddress, cacheDurationMs);\n        const transaction = new web3_js_1.Transaction();\n        const signers = [];\n        // Fetch an SRM fee discount key if the market supports discounts and it is not supplied\n        let useFeeDiscountPubkey;\n        if (feeDiscountPubkey) {\n            useFeeDiscountPubkey = feeDiscountPubkey;\n        }\n        else if (feeDiscountPubkey === undefined &&\n            this.supportsSrmFeeDiscounts) {\n            useFeeDiscountPubkey = (await this.findBestFeeDiscountKey(connection, ownerAddress, feeDiscountPubkeyCacheDurationMs)).pubkey;\n        }\n        else {\n            useFeeDiscountPubkey = null;\n        }\n        let openOrdersAddress;\n        if (openOrdersAccounts.length === 0) {\n            let account;\n            if (openOrdersAccount) {\n                account = openOrdersAccount;\n            }\n            else {\n                account = new web3_js_1.Account();\n            }\n            transaction.add(await OpenOrders.makeCreateAccountTransaction(connection, this.address, ownerAddress, account.publicKey, this._programId));\n            openOrdersAddress = account.publicKey;\n            signers.push(account);\n            // refresh the cache of open order accounts on next fetch\n            this._openOrdersAccountsCache[ownerAddress.toBase58()].ts = 0;\n        }\n        else if (openOrdersAccount) {\n            openOrdersAddress = openOrdersAccount.publicKey;\n        }\n        else if (openOrdersAddressKey) {\n            openOrdersAddress = openOrdersAddressKey;\n        }\n        else {\n            openOrdersAddress = openOrdersAccounts[0].address;\n        }\n        let wrappedSolAccount = null;\n        if (payer.equals(ownerAddress)) {\n            if ((side === 'buy' && this.quoteMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT)) ||\n                (side === 'sell' && this.baseMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT))) {\n                wrappedSolAccount = new web3_js_1.Account();\n                let lamports;\n                if (side === 'buy') {\n                    lamports = Math.round(price * size * 1.01 * web3_js_1.LAMPORTS_PER_SOL);\n                    if (openOrdersAccounts.length > 0) {\n                        lamports -= openOrdersAccounts[0].quoteTokenFree.toNumber();\n                    }\n                }\n                else {\n                    lamports = Math.round(size * web3_js_1.LAMPORTS_PER_SOL);\n                    if (openOrdersAccounts.length > 0) {\n                        lamports -= openOrdersAccounts[0].baseTokenFree.toNumber();\n                    }\n                }\n                lamports = Math.max(lamports, 0) + 1e7;\n                transaction.add(web3_js_1.SystemProgram.createAccount({\n                    fromPubkey: ownerAddress,\n                    newAccountPubkey: wrappedSolAccount.publicKey,\n                    lamports,\n                    space: 165,\n                    programId: token_instructions_1.TOKEN_PROGRAM_ID,\n                }));\n                transaction.add(token_instructions_1.initializeAccount({\n                    account: wrappedSolAccount.publicKey,\n                    mint: token_instructions_1.WRAPPED_SOL_MINT,\n                    owner: ownerAddress,\n                }));\n                signers.push(wrappedSolAccount);\n            }\n            else {\n                throw new Error('Invalid payer account');\n            }\n        }\n        const placeOrderInstruction = this.makePlaceOrderInstruction(connection, {\n            owner,\n            payer: (_b = wrappedSolAccount === null || wrappedSolAccount === void 0 ? void 0 : wrappedSolAccount.publicKey) !== null && _b !== void 0 ? _b : payer,\n            side,\n            price,\n            size,\n            orderType,\n            clientId,\n            openOrdersAddressKey: openOrdersAddress,\n            feeDiscountPubkey: useFeeDiscountPubkey,\n        });\n        transaction.add(placeOrderInstruction);\n        if (wrappedSolAccount) {\n            transaction.add(token_instructions_1.closeAccount({\n                source: wrappedSolAccount.publicKey,\n                destination: ownerAddress,\n                owner: ownerAddress,\n            }));\n        }\n        return { transaction, signers, payer: owner };\n    }\n    makePlaceOrderInstruction(connection, { owner, payer, side, price, size, orderType = 'limit', clientId, openOrdersAddressKey, openOrdersAccount, feeDiscountPubkey = null, selfTradeBehavior = 'decrementTake', }) {\n        var _a;\n        // @ts-ignore\n        const ownerAddress = (_a = owner.publicKey) !== null && _a !== void 0 ? _a : owner;\n        if (this.baseSizeNumberToLots(size).lte(new bn_js_1.default(0))) {\n            throw new Error('size too small');\n        }\n        if (this.priceNumberToLots(price).lte(new bn_js_1.default(0))) {\n            throw new Error('invalid price');\n        }\n        if (!this.supportsSrmFeeDiscounts) {\n            feeDiscountPubkey = null;\n        }\n        if (this.usesRequestQueue) {\n            return instructions_1.DexInstructions.newOrder({\n                market: this.address,\n                requestQueue: this._decoded.requestQueue,\n                baseVault: this._decoded.baseVault,\n                quoteVault: this._decoded.quoteVault,\n                openOrders: openOrdersAccount\n                    ? openOrdersAccount.publicKey\n                    : openOrdersAddressKey,\n                owner: ownerAddress,\n                payer,\n                side,\n                limitPrice: this.priceNumberToLots(price),\n                maxQuantity: this.baseSizeNumberToLots(size),\n                orderType,\n                clientId,\n                programId: this._programId,\n                feeDiscountPubkey,\n            });\n        }\n        else {\n            return instructions_1.DexInstructions.newOrderV3({\n                market: this.address,\n                bids: this._decoded.bids,\n                asks: this._decoded.asks,\n                requestQueue: this._decoded.requestQueue,\n                eventQueue: this._decoded.eventQueue,\n                baseVault: this._decoded.baseVault,\n                quoteVault: this._decoded.quoteVault,\n                openOrders: openOrdersAccount\n                    ? openOrdersAccount.publicKey\n                    : openOrdersAddressKey,\n                owner: ownerAddress,\n                payer,\n                side,\n                limitPrice: this.priceNumberToLots(price),\n                maxBaseQuantity: this.baseSizeNumberToLots(size),\n                maxQuoteQuantity: new bn_js_1.default(this._decoded.quoteLotSize.toNumber()).mul(this.baseSizeNumberToLots(size).mul(this.priceNumberToLots(price))),\n                orderType,\n                clientId,\n                programId: this._programId,\n                selfTradeBehavior,\n                feeDiscountPubkey,\n            });\n        }\n    }\n    async _sendTransaction(connection, transaction, signers) {\n        const signature = await connection.sendTransaction(transaction, signers, {\n            skipPreflight: this._skipPreflight,\n        });\n        const { value } = await connection.confirmTransaction(signature, this._commitment);\n        if (value === null || value === void 0 ? void 0 : value.err) {\n            throw new Error(JSON.stringify(value.err));\n        }\n        return signature;\n    }\n    async cancelOrderByClientId(connection, owner, openOrders, clientId) {\n        const transaction = await this.makeCancelOrderByClientIdTransaction(connection, owner.publicKey, openOrders, clientId);\n        return await this._sendTransaction(connection, transaction, [owner]);\n    }\n    async makeCancelOrderByClientIdTransaction(connection, owner, openOrders, clientId) {\n        const transaction = new web3_js_1.Transaction();\n        if (this.usesRequestQueue) {\n            transaction.add(instructions_1.DexInstructions.cancelOrderByClientId({\n                market: this.address,\n                owner,\n                openOrders,\n                requestQueue: this._decoded.requestQueue,\n                clientId,\n                programId: this._programId,\n            }));\n        }\n        else {\n            transaction.add(instructions_1.DexInstructions.cancelOrderByClientIdV2({\n                market: this.address,\n                openOrders,\n                owner,\n                bids: this._decoded.bids,\n                asks: this._decoded.asks,\n                eventQueue: this._decoded.eventQueue,\n                clientId,\n                programId: this._programId,\n            }));\n        }\n        return transaction;\n    }\n    async cancelOrder(connection, owner, order) {\n        const transaction = await this.makeCancelOrderTransaction(connection, owner.publicKey, order);\n        return await this._sendTransaction(connection, transaction, [owner]);\n    }\n    async makeCancelOrderTransaction(connection, owner, order) {\n        const transaction = new web3_js_1.Transaction();\n        transaction.add(this.makeCancelOrderInstruction(connection, owner, order));\n        return transaction;\n    }\n    makeCancelOrderInstruction(connection, owner, order) {\n        if (this.usesRequestQueue) {\n            return instructions_1.DexInstructions.cancelOrder({\n                market: this.address,\n                owner,\n                openOrders: order.openOrdersAddress,\n                requestQueue: this._decoded.requestQueue,\n                side: order.side,\n                orderId: order.orderId,\n                openOrdersSlot: order.openOrdersSlot,\n                programId: this._programId,\n            });\n        }\n        else {\n            return instructions_1.DexInstructions.cancelOrderV2({\n                market: this.address,\n                owner,\n                openOrders: order.openOrdersAddress,\n                bids: this._decoded.bids,\n                asks: this._decoded.asks,\n                eventQueue: this._decoded.eventQueue,\n                side: order.side,\n                orderId: order.orderId,\n                openOrdersSlot: order.openOrdersSlot,\n                programId: this._programId,\n            });\n        }\n    }\n    async settleFunds(connection, owner, openOrders, baseWallet, quoteWallet, referrerQuoteWallet = null) {\n        if (!openOrders.owner.equals(owner.publicKey)) {\n            throw new Error('Invalid open orders account');\n        }\n        if (referrerQuoteWallet && !this.supportsReferralFees) {\n            throw new Error('This program ID does not support referrerQuoteWallet');\n        }\n        const { transaction, signers } = await this.makeSettleFundsTransaction(connection, openOrders, baseWallet, quoteWallet, referrerQuoteWallet);\n        return await this._sendTransaction(connection, transaction, [\n            owner,\n            ...signers,\n        ]);\n    }\n    async makeSettleFundsTransaction(connection, openOrders, baseWallet, quoteWallet, referrerQuoteWallet = null) {\n        // @ts-ignore\n        const vaultSigner = await web3_js_1.PublicKey.createProgramAddress([\n            this.address.toBuffer(),\n            this._decoded.vaultSignerNonce.toArrayLike(buffer_1.Buffer, 'le', 8),\n        ], this._programId);\n        const transaction = new web3_js_1.Transaction();\n        const signers = [];\n        let wrappedSolAccount = null;\n        if ((this.baseMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) &&\n            baseWallet.equals(openOrders.owner)) ||\n            (this.quoteMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) &&\n                quoteWallet.equals(openOrders.owner))) {\n            wrappedSolAccount = new web3_js_1.Account();\n            transaction.add(web3_js_1.SystemProgram.createAccount({\n                fromPubkey: openOrders.owner,\n                newAccountPubkey: wrappedSolAccount.publicKey,\n                lamports: await connection.getMinimumBalanceForRentExemption(165),\n                space: 165,\n                programId: token_instructions_1.TOKEN_PROGRAM_ID,\n            }));\n            transaction.add(token_instructions_1.initializeAccount({\n                account: wrappedSolAccount.publicKey,\n                mint: token_instructions_1.WRAPPED_SOL_MINT,\n                owner: openOrders.owner,\n            }));\n            signers.push(wrappedSolAccount);\n        }\n        transaction.add(instructions_1.DexInstructions.settleFunds({\n            market: this.address,\n            openOrders: openOrders.address,\n            owner: openOrders.owner,\n            baseVault: this._decoded.baseVault,\n            quoteVault: this._decoded.quoteVault,\n            baseWallet: baseWallet.equals(openOrders.owner) && wrappedSolAccount\n                ? wrappedSolAccount.publicKey\n                : baseWallet,\n            quoteWallet: quoteWallet.equals(openOrders.owner) && wrappedSolAccount\n                ? wrappedSolAccount.publicKey\n                : quoteWallet,\n            vaultSigner,\n            programId: this._programId,\n            referrerQuoteWallet,\n        }));\n        if (wrappedSolAccount) {\n            transaction.add(token_instructions_1.closeAccount({\n                source: wrappedSolAccount.publicKey,\n                destination: openOrders.owner,\n                owner: openOrders.owner,\n            }));\n        }\n        return { transaction, signers, payer: openOrders.owner };\n    }\n    async matchOrders(connection, feePayer, limit) {\n        const tx = this.makeMatchOrdersTransaction(limit);\n        return await this._sendTransaction(connection, tx, [feePayer]);\n    }\n    makeMatchOrdersTransaction(limit) {\n        const tx = new web3_js_1.Transaction();\n        tx.add(instructions_1.DexInstructions.matchOrders({\n            market: this.address,\n            requestQueue: this._decoded.requestQueue,\n            eventQueue: this._decoded.eventQueue,\n            bids: this._decoded.bids,\n            asks: this._decoded.asks,\n            baseVault: this._decoded.baseVault,\n            quoteVault: this._decoded.quoteVault,\n            limit,\n            programId: this._programId,\n        }));\n        return tx;\n    }\n    async loadRequestQueue(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.requestQueue));\n        return queue_1.decodeRequestQueue(data);\n    }\n    async loadEventQueue(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.eventQueue));\n        return queue_1.decodeEventQueue(data);\n    }\n    async loadFills(connection, limit = 100) {\n        // TODO: once there's a separate source of fills use that instead\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.eventQueue));\n        const events = queue_1.decodeEventQueue(data, limit);\n        return events\n            .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\n            .map(this.parseFillEvent.bind(this));\n    }\n    parseFillEvent(event) {\n        let size, price, side, priceBeforeFees;\n        if (event.eventFlags.bid) {\n            side = 'buy';\n            priceBeforeFees = event.eventFlags.maker\n                ? event.nativeQuantityPaid.add(event.nativeFeeOrRebate)\n                : event.nativeQuantityPaid.sub(event.nativeFeeOrRebate);\n            price = divideBnToNumber(priceBeforeFees.mul(this._baseSplTokenMultiplier), this._quoteSplTokenMultiplier.mul(event.nativeQuantityReleased));\n            size = divideBnToNumber(event.nativeQuantityReleased, this._baseSplTokenMultiplier);\n        }\n        else {\n            side = 'sell';\n            priceBeforeFees = event.eventFlags.maker\n                ? event.nativeQuantityReleased.sub(event.nativeFeeOrRebate)\n                : event.nativeQuantityReleased.add(event.nativeFeeOrRebate);\n            price = divideBnToNumber(priceBeforeFees.mul(this._baseSplTokenMultiplier), this._quoteSplTokenMultiplier.mul(event.nativeQuantityPaid));\n            size = divideBnToNumber(event.nativeQuantityPaid, this._baseSplTokenMultiplier);\n        }\n        return {\n            ...event,\n            side,\n            price,\n            feeCost: this.quoteSplSizeToNumber(event.nativeFeeOrRebate) *\n                (event.eventFlags.maker ? -1 : 1),\n            size,\n        };\n    }\n    get _baseSplTokenMultiplier() {\n        return new bn_js_1.default(10).pow(new bn_js_1.default(this._baseSplTokenDecimals));\n    }\n    get _quoteSplTokenMultiplier() {\n        return new bn_js_1.default(10).pow(new bn_js_1.default(this._quoteSplTokenDecimals));\n    }\n    priceLotsToNumber(price) {\n        return divideBnToNumber(price.mul(this._decoded.quoteLotSize).mul(this._baseSplTokenMultiplier), this._decoded.baseLotSize.mul(this._quoteSplTokenMultiplier));\n    }\n    priceNumberToLots(price) {\n        return new bn_js_1.default(Math.round((price *\n            Math.pow(10, this._quoteSplTokenDecimals) *\n            this._decoded.baseLotSize.toNumber()) /\n            (Math.pow(10, this._baseSplTokenDecimals) *\n                this._decoded.quoteLotSize.toNumber())));\n    }\n    baseSplSizeToNumber(size) {\n        return divideBnToNumber(size, this._baseSplTokenMultiplier);\n    }\n    quoteSplSizeToNumber(size) {\n        return divideBnToNumber(size, this._quoteSplTokenMultiplier);\n    }\n    baseSizeLotsToNumber(size) {\n        return divideBnToNumber(size.mul(this._decoded.baseLotSize), this._baseSplTokenMultiplier);\n    }\n    baseSizeNumberToLots(size) {\n        const native = new bn_js_1.default(Math.round(size * Math.pow(10, this._baseSplTokenDecimals)));\n        // rounds down to the nearest lot size\n        return native.div(this._decoded.baseLotSize);\n    }\n    quoteSizeLotsToNumber(size) {\n        return divideBnToNumber(size.mul(this._decoded.quoteLotSize), this._quoteSplTokenMultiplier);\n    }\n    quoteSizeNumberToLots(size) {\n        const native = new bn_js_1.default(Math.round(size * Math.pow(10, this._quoteSplTokenDecimals)));\n        // rounds down to the nearest lot size\n        return native.div(this._decoded.quoteLotSize);\n    }\n    get minOrderSize() {\n        return this.baseSizeLotsToNumber(new bn_js_1.default(1));\n    }\n    get tickSize() {\n        return this.priceLotsToNumber(new bn_js_1.default(1));\n    }\n}\nexports.Market = Market;\nexports._OPEN_ORDERS_LAYOUT_V1 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('market'),\n    layout_1.publicKeyLayout('owner'),\n    // These are in spl-token (i.e. not lot) units\n    layout_1.u64('baseTokenFree'),\n    layout_1.u64('baseTokenTotal'),\n    layout_1.u64('quoteTokenFree'),\n    layout_1.u64('quoteTokenTotal'),\n    layout_1.u128('freeSlotBits'),\n    layout_1.u128('isBidBits'),\n    buffer_layout_1.seq(layout_1.u128(), 128, 'orders'),\n    buffer_layout_1.seq(layout_1.u64(), 128, 'clientIds'),\n    buffer_layout_1.blob(7),\n]);\nexports._OPEN_ORDERS_LAYOUT_V2 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('market'),\n    layout_1.publicKeyLayout('owner'),\n    // These are in spl-token (i.e. not lot) units\n    layout_1.u64('baseTokenFree'),\n    layout_1.u64('baseTokenTotal'),\n    layout_1.u64('quoteTokenFree'),\n    layout_1.u64('quoteTokenTotal'),\n    layout_1.u128('freeSlotBits'),\n    layout_1.u128('isBidBits'),\n    buffer_layout_1.seq(layout_1.u128(), 128, 'orders'),\n    buffer_layout_1.seq(layout_1.u64(), 128, 'clientIds'),\n    layout_1.u64('referrerRebatesAccrued'),\n    buffer_layout_1.blob(7),\n]);\nclass OpenOrders {\n    constructor(address, decoded, programId) {\n        this.address = address;\n        this._programId = programId;\n        Object.assign(this, decoded);\n    }\n    static getLayout(programId) {\n        if (tokens_and_markets_1.getLayoutVersion(programId) === 1) {\n            return exports._OPEN_ORDERS_LAYOUT_V1;\n        }\n        return exports._OPEN_ORDERS_LAYOUT_V2;\n    }\n    static async findForOwner(connection, ownerAddress, programId) {\n        const filters = [\n            {\n                memcmp: {\n                    offset: this.getLayout(programId).offsetOf('owner'),\n                    bytes: ownerAddress.toBase58(),\n                },\n            },\n            {\n                dataSize: this.getLayout(programId).span,\n            },\n        ];\n        const accounts = await getFilteredProgramAccounts(connection, programId, filters);\n        return accounts.map(({ publicKey, accountInfo }) => OpenOrders.fromAccountInfo(publicKey, accountInfo, programId));\n    }\n    static async findForMarketAndOwner(connection, marketAddress, ownerAddress, programId) {\n        const filters = [\n            {\n                memcmp: {\n                    offset: this.getLayout(programId).offsetOf('market'),\n                    bytes: marketAddress.toBase58(),\n                },\n            },\n            {\n                memcmp: {\n                    offset: this.getLayout(programId).offsetOf('owner'),\n                    bytes: ownerAddress.toBase58(),\n                },\n            },\n            {\n                dataSize: this.getLayout(programId).span,\n            },\n        ];\n        const accounts = await getFilteredProgramAccounts(connection, programId, filters);\n        return accounts.map(({ publicKey, accountInfo }) => OpenOrders.fromAccountInfo(publicKey, accountInfo, programId));\n    }\n    static async load(connection, address, programId) {\n        const accountInfo = await connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error('Open orders account not found');\n        }\n        return OpenOrders.fromAccountInfo(address, accountInfo, programId);\n    }\n    static fromAccountInfo(address, accountInfo, programId) {\n        const { owner, data } = accountInfo;\n        if (!owner.equals(programId)) {\n            throw new Error('Address not owned by program');\n        }\n        const decoded = this.getLayout(programId).decode(data);\n        if (!decoded.accountFlags.initialized || !decoded.accountFlags.openOrders) {\n            throw new Error('Invalid open orders account');\n        }\n        return new OpenOrders(address, decoded, programId);\n    }\n    static async makeCreateAccountTransaction(connection, marketAddress, ownerAddress, newAccountAddress, programId) {\n        return web3_js_1.SystemProgram.createAccount({\n            fromPubkey: ownerAddress,\n            newAccountPubkey: newAccountAddress,\n            lamports: await connection.getMinimumBalanceForRentExemption(this.getLayout(programId).span),\n            space: this.getLayout(programId).span,\n            programId,\n        });\n    }\n    get publicKey() {\n        return this.address;\n    }\n}\nexports.OpenOrders = OpenOrders;\nexports.ORDERBOOK_LAYOUT = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    slab_1.SLAB_LAYOUT.replicate('slab'),\n    buffer_layout_1.blob(7),\n]);\nclass Orderbook {\n    constructor(market, accountFlags, slab) {\n        if (!accountFlags.initialized || !(accountFlags.bids ^ accountFlags.asks)) {\n            throw new Error('Invalid orderbook');\n        }\n        this.market = market;\n        this.isBids = accountFlags.bids;\n        this.slab = slab;\n    }\n    static get LAYOUT() {\n        return exports.ORDERBOOK_LAYOUT;\n    }\n    static decode(market, buffer) {\n        const { accountFlags, slab } = exports.ORDERBOOK_LAYOUT.decode(buffer);\n        return new Orderbook(market, accountFlags, slab);\n    }\n    getL2(depth) {\n        const descending = this.isBids;\n        const levels = []; // (price, size)\n        for (const { key, quantity } of this.slab.items(descending)) {\n            const price = getPriceFromKey(key);\n            if (levels.length > 0 && levels[levels.length - 1][0].eq(price)) {\n                levels[levels.length - 1][1].iadd(quantity);\n            }\n            else if (levels.length === depth) {\n                break;\n            }\n            else {\n                levels.push([price, quantity]);\n            }\n        }\n        return levels.map(([priceLots, sizeLots]) => [\n            this.market.priceLotsToNumber(priceLots),\n            this.market.baseSizeLotsToNumber(sizeLots),\n            priceLots,\n            sizeLots,\n        ]);\n    }\n    [Symbol.iterator]() {\n        return this.items(false);\n    }\n    *items(descending = false) {\n        for (const { key, ownerSlot, owner, quantity, feeTier, clientOrderId, } of this.slab.items(descending)) {\n            const price = getPriceFromKey(key);\n            yield {\n                orderId: key,\n                clientId: clientOrderId,\n                openOrdersAddress: owner,\n                openOrdersSlot: ownerSlot,\n                feeTier,\n                price: this.market.priceLotsToNumber(price),\n                priceLots: price,\n                size: this.market.baseSizeLotsToNumber(quantity),\n                sizeLots: quantity,\n                side: (this.isBids ? 'buy' : 'sell'),\n            };\n        }\n    }\n}\nexports.Orderbook = Orderbook;\nfunction getPriceFromKey(key) {\n    return key.ushrn(64);\n}\nfunction divideBnToNumber(numerator, denominator) {\n    const quotient = numerator.div(denominator).toNumber();\n    const rem = numerator.umod(denominator);\n    const gcd = rem.gcd(denominator);\n    return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\n}\nconst MINT_LAYOUT = buffer_layout_1.struct([buffer_layout_1.blob(44), buffer_layout_1.u8('decimals'), buffer_layout_1.blob(37)]);\nasync function getMintDecimals(connection, mint) {\n    if (mint.equals(token_instructions_1.WRAPPED_SOL_MINT)) {\n        return 9;\n    }\n    const { data } = throwIfNull(await connection.getAccountInfo(mint), 'mint not found');\n    const { decimals } = MINT_LAYOUT.decode(data);\n    return decimals;\n}\nexports.getMintDecimals = getMintDecimals;\nasync function getFilteredProgramAccounts(connection, programId, filters) {\n    // @ts-ignore\n    const resp = await connection._rpcRequest('getProgramAccounts', [\n        programId.toBase58(),\n        {\n            commitment: connection.commitment,\n            filters,\n            encoding: 'base64',\n        },\n    ]);\n    if (resp.error) {\n        throw new Error(resp.error.message);\n    }\n    return resp.result.map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\n        publicKey: new web3_js_1.PublicKey(pubkey),\n        accountInfo: {\n            data: buffer_1.Buffer.from(data[0], 'base64'),\n            executable,\n            owner: new web3_js_1.PublicKey(owner),\n            lamports,\n        },\n    }));\n}\nfunction throwIfNull(value, message = 'account not found') {\n    if (value === null) {\n        throw new Error(message);\n    }\n    return value;\n}\n//# sourceMappingURL=market.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenInstructions = exports.EVENT_QUEUE_LAYOUT = exports.REQUEST_QUEUE_LAYOUT = exports.decodeRequestQueue = exports.decodeEventQueue = exports.getLayoutVersion = exports.MARKETS = exports.TOKEN_MINTS = exports.supportsSrmFeeDiscounts = exports.getFeeRates = exports.getFeeTier = exports.NEW_ORDER_V3_OWNER_INDEX = exports.NEW_ORDER_V3_OPEN_ORDERS_INDEX = exports.NEW_ORDER_OWNER_INDEX = exports.NEW_ORDER_OPEN_ORDERS_INDEX = exports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = exports.SETTLE_FUNDS_BASE_WALLET_INDEX = exports.decodeInstruction = exports.DexInstructions = exports.OpenOrders = exports.Orderbook = exports.Market = void 0;\nvar market_1 = require(\"./market\");\nObject.defineProperty(exports, \"Market\", { enumerable: true, get: function () { return market_1.Market; } });\nObject.defineProperty(exports, \"Orderbook\", { enumerable: true, get: function () { return market_1.Orderbook; } });\nObject.defineProperty(exports, \"OpenOrders\", { enumerable: true, get: function () { return market_1.OpenOrders; } });\nvar instructions_1 = require(\"./instructions\");\nObject.defineProperty(exports, \"DexInstructions\", { enumerable: true, get: function () { return instructions_1.DexInstructions; } });\nObject.defineProperty(exports, \"decodeInstruction\", { enumerable: true, get: function () { return instructions_1.decodeInstruction; } });\nObject.defineProperty(exports, \"SETTLE_FUNDS_BASE_WALLET_INDEX\", { enumerable: true, get: function () { return instructions_1.SETTLE_FUNDS_BASE_WALLET_INDEX; } });\nObject.defineProperty(exports, \"SETTLE_FUNDS_QUOTE_WALLET_INDEX\", { enumerable: true, get: function () { return instructions_1.SETTLE_FUNDS_QUOTE_WALLET_INDEX; } });\nObject.defineProperty(exports, \"NEW_ORDER_OPEN_ORDERS_INDEX\", { enumerable: true, get: function () { return instructions_1.NEW_ORDER_OPEN_ORDERS_INDEX; } });\nObject.defineProperty(exports, \"NEW_ORDER_OWNER_INDEX\", { enumerable: true, get: function () { return instructions_1.NEW_ORDER_OWNER_INDEX; } });\nObject.defineProperty(exports, \"NEW_ORDER_V3_OPEN_ORDERS_INDEX\", { enumerable: true, get: function () { return instructions_1.NEW_ORDER_V3_OPEN_ORDERS_INDEX; } });\nObject.defineProperty(exports, \"NEW_ORDER_V3_OWNER_INDEX\", { enumerable: true, get: function () { return instructions_1.NEW_ORDER_V3_OWNER_INDEX; } });\nvar fees_1 = require(\"./fees\");\nObject.defineProperty(exports, \"getFeeTier\", { enumerable: true, get: function () { return fees_1.getFeeTier; } });\nObject.defineProperty(exports, \"getFeeRates\", { enumerable: true, get: function () { return fees_1.getFeeRates; } });\nObject.defineProperty(exports, \"supportsSrmFeeDiscounts\", { enumerable: true, get: function () { return fees_1.supportsSrmFeeDiscounts; } });\nvar tokens_and_markets_1 = require(\"./tokens_and_markets\");\nObject.defineProperty(exports, \"TOKEN_MINTS\", { enumerable: true, get: function () { return tokens_and_markets_1.TOKEN_MINTS; } });\nObject.defineProperty(exports, \"MARKETS\", { enumerable: true, get: function () { return tokens_and_markets_1.MARKETS; } });\nObject.defineProperty(exports, \"getLayoutVersion\", { enumerable: true, get: function () { return tokens_and_markets_1.getLayoutVersion; } });\nvar queue_1 = require(\"./queue\");\nObject.defineProperty(exports, \"decodeEventQueue\", { enumerable: true, get: function () { return queue_1.decodeEventQueue; } });\nObject.defineProperty(exports, \"decodeRequestQueue\", { enumerable: true, get: function () { return queue_1.decodeRequestQueue; } });\nObject.defineProperty(exports, \"REQUEST_QUEUE_LAYOUT\", { enumerable: true, get: function () { return queue_1.REQUEST_QUEUE_LAYOUT; } });\nObject.defineProperty(exports, \"EVENT_QUEUE_LAYOUT\", { enumerable: true, get: function () { return queue_1.EVENT_QUEUE_LAYOUT; } });\nexports.TokenInstructions = __importStar(require(\"./token-instructions\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Slab = exports.SLAB_LAYOUT = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst SLAB_HEADER_LAYOUT = buffer_layout_1.struct([\n    // Number of modified slab nodes\n    buffer_layout_1.u32('bumpIndex'),\n    layout_1.zeros(4),\n    // Linked list of unused nodes\n    buffer_layout_1.u32('freeListLen'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('freeListHead'),\n    buffer_layout_1.u32('root'),\n    buffer_layout_1.u32('leafCount'),\n    layout_1.zeros(4),\n], 'header');\nconst SLAB_NODE_LAYOUT = buffer_layout_1.union(buffer_layout_1.u32('tag'), buffer_layout_1.blob(68), 'node');\nSLAB_NODE_LAYOUT.addVariant(0, buffer_layout_1.struct([]), 'uninitialized');\nSLAB_NODE_LAYOUT.addVariant(1, buffer_layout_1.struct([\n    // Only the first prefixLen high-order bits of key are meaningful\n    buffer_layout_1.u32('prefixLen'),\n    layout_1.u128('key'),\n    buffer_layout_1.seq(buffer_layout_1.u32(), 2, 'children'),\n]), 'innerNode');\nSLAB_NODE_LAYOUT.addVariant(2, buffer_layout_1.struct([\n    buffer_layout_1.u8('ownerSlot'),\n    buffer_layout_1.u8('feeTier'),\n    buffer_layout_1.blob(2),\n    layout_1.u128('key'),\n    layout_1.publicKeyLayout('owner'),\n    layout_1.u64('quantity'),\n    layout_1.u64('clientOrderId'),\n]), 'leafNode');\nSLAB_NODE_LAYOUT.addVariant(3, buffer_layout_1.struct([buffer_layout_1.u32('next')]), 'freeNode');\nSLAB_NODE_LAYOUT.addVariant(4, buffer_layout_1.struct([]), 'lastFreeNode');\nexports.SLAB_LAYOUT = buffer_layout_1.struct([\n    SLAB_HEADER_LAYOUT,\n    buffer_layout_1.seq(SLAB_NODE_LAYOUT, buffer_layout_1.offset(SLAB_HEADER_LAYOUT.layoutFor('bumpIndex'), SLAB_HEADER_LAYOUT.offsetOf('bumpIndex') - SLAB_HEADER_LAYOUT.span), 'nodes'),\n]);\nclass Slab {\n    constructor(header, nodes) {\n        this.header = header;\n        this.nodes = nodes;\n    }\n    static decode(buffer) {\n        return exports.SLAB_LAYOUT.decode(buffer);\n    }\n    get(searchKey) {\n        if (this.header.leafCount === 0) {\n            return null;\n        }\n        if (!(searchKey instanceof bn_js_1.default)) {\n            searchKey = new bn_js_1.default(searchKey);\n        }\n        let index = this.header.root;\n        while (true) {\n            const { leafNode, innerNode } = this.nodes[index];\n            if (leafNode) {\n                if (leafNode.key.eq(searchKey)) {\n                    return leafNode;\n                }\n                return null;\n            }\n            else if (innerNode) {\n                if (!innerNode.key\n                    .xor(searchKey)\n                    .iushrn(128 - innerNode.prefixLen)\n                    .isZero()) {\n                    return null;\n                }\n                index =\n                    innerNode.children[searchKey.testn(128 - innerNode.prefixLen - 1) ? 1 : 0];\n            }\n            else {\n                throw new Error('Invalid slab');\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this.items(false);\n    }\n    *items(descending = false) {\n        if (this.header.leafCount === 0) {\n            return;\n        }\n        const stack = [this.header.root];\n        while (stack.length > 0) {\n            const index = stack.pop();\n            const { leafNode, innerNode } = this.nodes[index];\n            if (leafNode) {\n                yield leafNode;\n            }\n            else if (innerNode) {\n                if (descending) {\n                    stack.push(innerNode.children[0], innerNode.children[1]);\n                }\n                else {\n                    stack.push(innerNode.children[1], innerNode.children[0]);\n                }\n            }\n        }\n    }\n}\nexports.Slab = Slab;\nlayout_1.setLayoutDecoder(exports.SLAB_LAYOUT, ({ header, nodes }) => new Slab(header, nodes));\n//# sourceMappingURL=slab.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeWallet = exports.Provider = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst simulate_transaction_1 = require(\"./simulate-transaction\");\nclass Provider {\n    constructor(connection, wallet, opts) {\n        this.connection = connection;\n        this.wallet = wallet;\n        this.opts = opts;\n    }\n    static defaultOptions() {\n        return {\n            preflightCommitment: 'recent',\n            commitment: 'recent',\n        };\n    }\n    static local(url, opts) {\n        opts = opts || Provider.defaultOptions();\n        const connection = new web3_js_1.Connection(url || 'http://localhost:8899', opts.preflightCommitment);\n        const wallet = NodeWallet.local();\n        return new Provider(connection, wallet, opts);\n    }\n    async send(tx, signers, opts) {\n        var _a;\n        if (signers === undefined) {\n            signers = [];\n        }\n        if (opts === undefined) {\n            opts = this.opts;\n        }\n        const signerKps = signers.filter(s => s !== undefined);\n        const signerPubkeys = [this.wallet.publicKey].concat(signerKps.map(s => s.publicKey));\n        tx.setSigners(...signerPubkeys);\n        tx.recentBlockhash = (await this.connection.getRecentBlockhash(opts.preflightCommitment)).blockhash;\n        await this.wallet.signTransaction(tx);\n        signerKps.forEach(kp => {\n            tx.partialSign(kp);\n        });\n        const rawTx = tx.serialize();\n        try {\n            const txId = await web3_js_1.sendAndConfirmRawTransaction(this.connection, rawTx, opts);\n            return txId;\n        }\n        catch (err) {\n            console.error('Transaction failed. Simulating for logs...');\n            const r = await simulate_transaction_1.simulateTransaction(this.connection, tx, (_a = opts.commitment) !== null && _a !== void 0 ? _a : 'recent');\n            console.error(r);\n            throw err;\n        }\n    }\n    async sendAll(reqs, opts) {\n        var _a;\n        if (opts === undefined) {\n            opts = this.opts;\n        }\n        const blockhash = await this.connection.getRecentBlockhash(opts.preflightCommitment);\n        let txs = reqs.map(r => {\n            let tx = r.tx;\n            let signers = r.signers;\n            if (signers === undefined) {\n                signers = [];\n            }\n            const signerKps = signers.filter(s => s !== undefined);\n            const signerPubkeys = [this.wallet.publicKey].concat(signerKps.map(s => s.publicKey));\n            tx.setSigners(...signerPubkeys);\n            tx.recentBlockhash = blockhash.blockhash;\n            signerKps.forEach(kp => {\n                tx.partialSign(kp);\n            });\n            return tx;\n        });\n        const signedTxs = await this.wallet.signAllTransactions(txs);\n        const sigs = [];\n        for (let k = 0; k < txs.length; k += 1) {\n            const tx = signedTxs[k];\n            const rawTx = tx.serialize();\n            try {\n                sigs.push(await web3_js_1.sendAndConfirmRawTransaction(this.connection, rawTx, opts));\n            }\n            catch (err) {\n                console.error('Transaction failed. Simulating for logs...');\n                const r = await simulate_transaction_1.simulateTransaction(this.connection, tx, (_a = opts.commitment) !== null && _a !== void 0 ? _a : 'recent');\n                console.error(r);\n                throw err;\n            }\n        }\n        return sigs;\n    }\n}\nexports.Provider = Provider;\nclass NodeWallet {\n    constructor(payer) {\n        this.payer = payer;\n    }\n    static local() {\n        const payer = new web3_js_1.Account(Buffer.from(JSON.parse(require('fs').readFileSync(require('os').homedir() + '/.config/solana/id.json', {\n            encoding: 'utf-8',\n        }))));\n        return new NodeWallet(payer);\n    }\n    async signTransaction(tx) {\n        tx.partialSign(this.payer);\n        return tx;\n    }\n    async signAllTransactions(txs) {\n        return txs.map(t => {\n            t.partialSign(this.payer);\n            return t;\n        });\n    }\n    get publicKey() {\n        return this.payer.publicKey;\n    }\n}\nexports.NodeWallet = NodeWallet;\n//# sourceMappingURL=provider.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getOwnedAccountsFilters = exports.parseMintData = exports.parseTokenAccountData = exports.MINT_LAYOUT = exports.ACCOUNT_LAYOUT = exports.getOwnedTokenAccounts = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst serum_1 = require(\"@project-serum/serum\");\nconst bs58 = __importStar(require(\"bs58\"));\nconst BufferLayout = __importStar(require(\"buffer-layout\"));\nasync function getOwnedTokenAccounts(connection, publicKey) {\n    let filters = getOwnedAccountsFilters(publicKey);\n    // @ts-ignore\n    let resp = await connection._rpcRequest('getProgramAccounts', [\n        serum_1.TokenInstructions.TOKEN_PROGRAM_ID.toBase58(),\n        {\n            commitment: connection.commitment,\n            filters,\n        },\n    ]);\n    if (resp.error) {\n        throw new Error('failed to get token accounts owned by ' +\n            publicKey.toBase58() +\n            ': ' +\n            resp.error.message);\n    }\n    return (resp.result\n        // @ts-ignore\n        .map(({ pubkey, account: { data } }) => {\n        data = bs58.decode(data);\n        return {\n            publicKey: new web3_js_1.PublicKey(pubkey),\n            account: parseTokenAccountData(data),\n        };\n    }));\n}\nexports.getOwnedTokenAccounts = getOwnedTokenAccounts;\n// todo: remove\nexports.ACCOUNT_LAYOUT = BufferLayout.struct([\n    BufferLayout.blob(32, 'mint'),\n    BufferLayout.blob(32, 'owner'),\n    BufferLayout.nu64('amount'),\n    BufferLayout.blob(93),\n]);\nexports.MINT_LAYOUT = BufferLayout.struct([\n    BufferLayout.blob(44),\n    BufferLayout.u8('decimals'),\n    BufferLayout.blob(37),\n]);\nfunction parseTokenAccountData(data) {\n    // @ts-ignore\n    let { mint, owner, amount } = exports.ACCOUNT_LAYOUT.decode(data);\n    return {\n        mint: new web3_js_1.PublicKey(mint),\n        owner: new web3_js_1.PublicKey(owner),\n        amount,\n    };\n}\nexports.parseTokenAccountData = parseTokenAccountData;\n// @ts-ignore\nfunction parseMintData(data) {\n    // @ts-ignore\n    let { decimals } = exports.MINT_LAYOUT.decode(data);\n    return { decimals };\n}\nexports.parseMintData = parseMintData;\n// @ts-ignore\nfunction getOwnedAccountsFilters(publicKey) {\n    return [\n        {\n            memcmp: {\n                // @ts-ignore\n                offset: exports.ACCOUNT_LAYOUT.offsetOf('owner'),\n                bytes: publicKey.toBase58(),\n            },\n        },\n        {\n            dataSize: exports.ACCOUNT_LAYOUT.span,\n        },\n    ];\n}\nexports.getOwnedAccountsFilters = getOwnedAccountsFilters;\n//# sourceMappingURL=token.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetMultipleAccountsAndContextRpcResult = exports.getMultipleSolanaAccounts = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst superstruct_1 = require(\"superstruct\");\nconst assert_1 = __importDefault(require(\"assert\"));\nasync function getMultipleSolanaAccounts(connection, publicKeys) {\n    const args = [publicKeys.map(k => k.toBase58()), { commitment: 'recent' }];\n    // @ts-ignore\n    const unsafeRes = await connection._rpcRequest('getMultipleAccounts', args);\n    const res = exports.GetMultipleAccountsAndContextRpcResult(unsafeRes);\n    if (res.error) {\n        throw new Error('failed to get info about accounts ' +\n            publicKeys.map(k => k.toBase58()).join(', ') +\n            ': ' +\n            res.error.message);\n    }\n    assert_1.default(typeof res.result !== 'undefined');\n    const accounts = [];\n    for (const account of res.result.value) {\n        let value = null;\n        if (res.result.value) {\n            const { executable, owner, lamports, data } = account;\n            assert_1.default(data[1] === 'base64');\n            value = {\n                executable,\n                owner: new web3_js_1.PublicKey(owner),\n                lamports,\n                data: Buffer.from(data[0], 'base64'),\n            };\n        }\n        if (value === null) {\n            throw new Error('Invalid response');\n        }\n        accounts.push(value);\n    }\n    return accounts.map((account, idx) => {\n        return {\n            publicKey: publicKeys[idx],\n            account,\n        };\n    });\n}\nexports.getMultipleSolanaAccounts = getMultipleSolanaAccounts;\nfunction jsonRpcResult(resultDescription) {\n    const jsonRpcVersion = superstruct_1.struct.literal('2.0');\n    return superstruct_1.struct.union([\n        superstruct_1.struct({\n            jsonrpc: jsonRpcVersion,\n            id: 'string',\n            error: 'any',\n        }),\n        superstruct_1.struct({\n            jsonrpc: jsonRpcVersion,\n            id: 'string',\n            error: 'null?',\n            result: resultDescription,\n        }),\n    ]);\n}\nfunction jsonRpcResultAndContext(resultDescription) {\n    return jsonRpcResult({\n        context: superstruct_1.struct({\n            slot: 'number',\n        }),\n        value: resultDescription,\n    });\n}\nconst AccountInfoResult = superstruct_1.struct({\n    executable: 'boolean',\n    owner: 'string',\n    lamports: 'number',\n    data: 'any',\n    rentEpoch: 'number?',\n});\nexports.GetMultipleAccountsAndContextRpcResult = jsonRpcResultAndContext(superstruct_1.struct.array([superstruct_1.struct.union(['null', AccountInfoResult])]));\n//# sourceMappingURL=connection.js.map","import { PublicKey } from '@solana/web3.js';\nimport { AccountInfo as TokenAccount } from '@solana/spl-token';\nimport { ProgramAccount as CommonProgramAccount } from '@project-serum/common';\nimport { Action, ActionType } from './actions';\nimport { networks, Network } from './config';\n\nexport enum BootstrapState {\n  NeedsBootstrap,\n  IsBootstrapping,\n  Bootstrapped,\n}\n\nexport default function reducer(\n  state: State = initialState,\n  action: Action,\n): State {\n  let newState = {\n    common: { ...state.common },\n    lockup: { ...state.lockup },\n    registry: { ...state.registry },\n    accounts: { ...state.accounts },\n  };\n  switch (action.type) {\n    // Common.\n    case ActionType.CommonAppWillBootstrap:\n      newState.common.bootstrapState = BootstrapState.IsBootstrapping;\n      newState.common.bootstrapTrigger = false;\n      return newState;\n    case ActionType.CommonAppDidBootstrap:\n      newState.common.bootstrapState = BootstrapState.Bootstrapped;\n      return newState;\n    case ActionType.CommonWalletSetProvider:\n      newState.common.walletProvider = action.item.walletProvider;\n      return newState;\n    case ActionType.CommonWalletDidConnect:\n      newState.common.isWalletConnected = true;\n      return newState;\n    case ActionType.CommonWalletDidDisconnect:\n      newState.common.isWalletConnected = false;\n      return newState;\n    case ActionType.CommonSetNetwork:\n      if (newState.common.network.label !== action.item.network.label) {\n        newState.common.network = action.item.network;\n        newState.common.bootstrapState = BootstrapState.NeedsBootstrap;\n        newState.common.shutdownTrigger = true;\n        const network = networks[action.item.networkKey];\n        newState.registry.registrar = Object.values(network.registrars)[0];\n      }\n      return newState;\n    case ActionType.CommonTriggerBootstrap:\n      newState.common.bootstrapState = BootstrapState.NeedsBootstrap;\n      newState.common.bootstrapTrigger = true;\n      return newState;\n    case ActionType.CommonTriggerShutdown:\n      newState.common.bootstrapState = BootstrapState.NeedsBootstrap;\n      newState.common.shutdownTrigger = true;\n      return newState;\n    case ActionType.CommonDidShutdown:\n      // Reset everything except network and registrar.\n      let s = {\n        ...initialState,\n      };\n      s.common.network = newState.common.network;\n      s.registry.registrar = newState.registry.registrar;\n      return s;\n    case ActionType.CommonOwnedTokenAccountsSet:\n      newState.common.ownedTokenAccounts = action.item.ownedTokenAccounts;\n      return newState;\n\n    case ActionType.CommonOwnedTokenAccountsUpdate:\n      newState.common.ownedTokenAccounts = newState.common.ownedTokenAccounts.map(\n        programAccount => {\n          if (programAccount.publicKey.equals(action.item.account.publicKey)) {\n            return action.item.account;\n          } else {\n            return programAccount;\n          }\n        },\n      );\n      return newState;\n\n    // Lockup.\n    case ActionType.LockupSetVestings:\n      newState.lockup.vestings = action.item.vestingAccounts;\n      return newState;\n    case ActionType.LockupUpdateVesting:\n      newState.accounts[action.item.vesting.publicKey.toString()] =\n        action.item.vesting.account;\n      return newState;\n    case ActionType.LockupCreateVesting:\n      newState.lockup.vestings.unshift(action.item.vesting.publicKey);\n      newState.accounts[action.item.vesting.publicKey.toString()] =\n        action.item.vesting.account;\n      return newState;\n\n    // Registry.\n    case ActionType.RegistrySetMember:\n      // This should only be called on member creation. All other member\n      // member switches should route through `RegistrySetMember`.\n      newState.registry.member = action.item.member;\n      return newState;\n    case ActionType.RegistrySetRegistrar:\n      newState.registry.registrar = action.item.registrar;\n      newState.registry.member = action.item.member;\n      newState.registry.pendingWithdrawals = null;\n      return newState;\n    case ActionType.RegistrySetPendingWithdrawals:\n      action.item.pendingWithdrawals.forEach((pw: any) => {\n        newState.accounts[pw.publicKey.toString()] = pw.account;\n      });\n      newState.registry.pendingWithdrawals = action.item.pendingWithdrawals.map(\n        (pw: any) => pw.publicKey,\n      );\n      return newState;\n    case ActionType.RegistryCreatePendingWithdrawal:\n      newState.accounts[action.item.pendingWithdrawal.publicKey.toString()] =\n        action.item.pendingWithdrawal.account;\n      if (newState.registry.pendingWithdrawals === null) {\n        newState.registry.pendingWithdrawals = [];\n      }\n      newState.registry.pendingWithdrawals.unshift(\n        action.item.pendingWithdrawal.publicKey,\n      );\n      return newState;\n    case ActionType.RegistryUpdatePendingWithdrawal:\n      newState.accounts[action.item.pendingWithdrawal.publicKey.toString()] =\n        action.item.pendingWithdrawal.account;\n      return newState;\n    case ActionType.AccountAdd:\n      newState.accounts[action.item.account.publicKey.toString()] =\n        action.item.account.account;\n      return newState;\n    case ActionType.AccountUpdate:\n      newState.accounts[action.item.account.publicKey.toString()] =\n        action.item.account.account;\n      return newState;\n    default:\n      return newState;\n  }\n}\n\nexport type State = {\n  common: CommonState;\n  lockup: LockupState;\n  registry: RegistryState;\n  accounts: { [pubkey: string]: any };\n};\n\nexport type CommonState = {\n  walletProvider?: string;\n  isWalletConnected: boolean;\n  bootstrapTrigger: boolean;\n  bootstrapState: BootstrapState;\n  shutdownTrigger: boolean;\n  network: Network;\n  ownedTokenAccounts: ProgramAccount<TokenAccount>[];\n};\n\nexport type LockupState = {\n  vestings: PublicKey[];\n};\n\n// All state associated with a single instance of a staking registrar.\nexport type RegistryState = {\n  registrar: PublicKey;\n  member?: PublicKey;\n  pendingWithdrawals: PublicKey[] | null;\n};\n\nexport const initialState: State = {\n  common: {\n    bootstrapTrigger: false,\n    shutdownTrigger: false,\n    isWalletConnected: false,\n    walletProvider: 'https://www.sollet.io',\n    bootstrapState: BootstrapState.NeedsBootstrap,\n    network: networks.mainnet,\n    ownedTokenAccounts: [],\n  },\n  lockup: {\n    vestings: [],\n  },\n  registry: {\n    pendingWithdrawals: null,\n    registrar: networks.mainnet.registrars.srm,\n  },\n  accounts: {},\n};\n\nexport type AsyncData<T> = {\n  isReady: boolean;\n  data?: T;\n};\n\n// Re-export.\nexport type ProgramAccount<T = any> = CommonProgramAccount<T>;\n","import { createStore } from 'redux';\nimport reducer from './reducer';\n\nexport const store = createStore(reducer);\n","import React, {\n  PropsWithChildren,\n  ReactNode,\n  useEffect,\n  useCallback,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport { PublicKey } from '@solana/web3.js';\nimport {\n  token,\n  parseMintAccount,\n  parseTokenAccount,\n} from '@project-serum/common';\nimport * as anchor from '@project-serum/anchor';\nimport { State as StoreState, ProgramAccount } from '../../store/reducer';\nimport { ActionType } from '../../store/actions';\nimport { useWallet } from './WalletProvider';\nimport { memberSeed } from '../../utils/registry';\n\n// BootstrapProvider performs data fetching on application startup.\nexport default function BootstrapProvider(props: PropsWithChildren<ReactNode>) {\n  const { bootstrapTrigger, shutdownTrigger, network, registrar } = useSelector(\n    (state: StoreState) => {\n      return {\n        bootstrapTrigger: state.common.bootstrapTrigger,\n        shutdownTrigger: state.common.shutdownTrigger,\n        network: state.common.network,\n        registrar: state.registry.registrar,\n      };\n    },\n  );\n  const dispatch = useDispatch();\n  const { wallet, lockupClient, registryClient } = useWallet();\n  const { enqueueSnackbar } = useSnackbar();\n\n  // Entry point for bootstrapping all the data for the app.\n  const bootstrap = useCallback(async () => {\n    enqueueSnackbar(`Connecting to ${network.label}`, {\n      variant: 'info',\n      autoHideDuration: 2500,\n    });\n\n    dispatch({\n      type: ActionType.CommonAppWillBootstrap,\n      item: {},\n    });\n\n    let { registrars, members } = await refreshAccounts({\n      dispatch,\n      lockupClient,\n      registryClient,\n      network,\n      wallet,\n    });\n\n    // Temporary account store for the initial registrar switch.\n    const accountStore = Object.fromEntries(\n      new Map(registrars.map(r => [r.publicKey.toString(), r.account])),\n    );\n    members.forEach(m => {\n      accountStore[m.publicKey.toString()] = m.account;\n    });\n\n    await registrarSwitch(\n      registryClient,\n      accountStore,\n      dispatch,\n      registrar,\n      undefined,\n    );\n\n    dispatch({\n      type: ActionType.CommonAppDidBootstrap,\n      item: {},\n    });\n\n    enqueueSnackbar(`Connection established`, {\n      variant: 'success',\n      autoHideDuration: 2500,\n    });\n  }, [\n    dispatch,\n    enqueueSnackbar,\n    registryClient,\n    registrar,\n    lockupClient,\n    network,\n    wallet,\n  ]);\n\n  const shutdown = useCallback(async () => {\n    wallet.disconnect();\n    dispatch({\n      type: ActionType.CommonDidShutdown,\n      item: {},\n    });\n  }, [dispatch, wallet]);\n\n  useEffect(() => {\n    if (bootstrapTrigger) {\n      bootstrap().catch(err => {\n        console.error(err);\n        enqueueSnackbar(`Error bootstrapping application: ${err.toString()}`, {\n          variant: 'error',\n        });\n      });\n    }\n    if (shutdownTrigger) {\n      shutdown().catch(err => {\n        console.error(err);\n        enqueueSnackbar(`Error shutting down application: ${err.toString()}`, {\n          variant: 'error',\n        });\n      });\n    }\n  }, [bootstrapTrigger, bootstrap, shutdownTrigger, shutdown, enqueueSnackbar]);\n\n  return <>{props.children}</>;\n}\n\n// Fetches and populates the redux store with all accounts needed for the app to start.\nexport async function refreshAccounts({\n  dispatch,\n  lockupClient,\n  registryClient,\n  network,\n  wallet,\n}: any) {\n  // Fetch all staking instances.\n  const fetchRegistrars = async (): Promise<ProgramAccount[]> => {\n    const registrarAddresses: PublicKey[] = Object.values(network.registrars);\n\n    // All registrars.\n    const registrars: ProgramAccount[] = (\n      await anchor.utils.getMultipleAccounts(\n        registryClient.provider.connection,\n        registrarAddresses,\n      )\n    ).map(raw => {\n      const account = registryClient.coder.accounts.decode(\n        'Registrar',\n        raw!.account.data,\n      );\n      return {\n        publicKey: raw!.publicKey,\n        account,\n      };\n    });\n\n    // Mint for each registrar.\n    const mints: ProgramAccount[] = (\n      await anchor.utils.getMultipleAccounts(\n        registryClient.provider.connection,\n        registrars.map(r => r.account.mint),\n      )\n    ).map(raw => {\n      const account = parseMintAccount(raw!.account.data);\n      return {\n        publicKey: raw!.publicKey,\n        account,\n      };\n    });\n\n    // Reward queues for each registrar.\n    const rewardQs = (\n      await anchor.utils.getMultipleAccounts(\n        registryClient.provider.connection,\n        registrars.map(r => r.account.rewardEventQ),\n      )\n    ).map(raw => {\n      const account = registryClient.coder.accounts.decode(\n        'RewardQueue',\n        raw!.account.data,\n      );\n      return {\n        publicKey: raw!.publicKey,\n        account,\n      };\n    });\n\n    // Add all the accounts to the store.\n    registrars\n      .concat(mints)\n      .concat(rewardQs)\n      .forEach(r => {\n        dispatch({\n          type: ActionType.AccountAdd,\n          item: {\n            account: r,\n          },\n        });\n      });\n    return registrars;\n  };\n\n  // Fetch the stake accounts for each staking instance (for the connected wallet).\n  const fetchMembers = async (\n    registrars: ProgramAccount[],\n  ): Promise<ProgramAccount[]> => {\n    const members = await Promise.all(\n      registrars\n        .map((r: ProgramAccount) => r.publicKey)\n        .map((r: PublicKey) =>\n          memberSeed(r)\n            .then(seed =>\n              PublicKey.createWithSeed(\n                wallet.publicKey,\n                seed,\n                registryClient.programId,\n              ),\n            )\n            .then(member => {\n              return {\n                memberPublicKey: member,\n                registrar: r,\n              };\n            }),\n        ),\n    );\n    const memberAddresses: PublicKey[] = members.map(m => m.memberPublicKey);\n    const memberAccounts: ProgramAccount[] = (\n      await anchor.utils.getMultipleAccounts(\n        registryClient.provider.connection,\n        memberAddresses,\n      )\n    )\n      .filter(raw => raw !== null)\n      .map((raw: any) => {\n        const account = registryClient.coder.accounts.decode(\n          'Member',\n          raw!.account.data,\n        );\n        return {\n          publicKey: raw!.publicKey,\n          account,\n        };\n      });\n\n    // Get all accounts for all of our member accounts.\n    //\n    // Note: As the number of registrars grows, we'll probably want to move\n    //       this fetch to be an on demand query, rather than on application\n    //       bootstrap.\n    await Promise.all(\n      memberAccounts.map(memberAccount => {\n        return fetchAndDispatchMemberAccounts(\n          memberAccount,\n          dispatch,\n          registryClient.provider.connection,\n        );\n      }),\n    );\n\n    // Add all the member accounts to the store. Must be done *after* the\n    // active member's vaults.\n    memberAccounts.forEach(m => {\n      dispatch({\n        type: ActionType.AccountAdd,\n        item: {\n          account: m,\n        },\n      });\n    });\n\n    return memberAccounts;\n  };\n\n  // All mints for each staking instance (pool token and the token being staked).\n  const fetchMints = async (registrars: ProgramAccount[]) => {\n    const mintAddresses = registrars\n      .map(r => r.account.mint)\n      .concat(registrars.map(r => r.account.poolMint));\n    const mints = (\n      await anchor.utils.getMultipleAccounts(\n        registryClient.provider.connection,\n        mintAddresses,\n      )\n    ).map(raw => {\n      const account = parseMintAccount(raw!.account.data);\n      return {\n        publicKey: raw!.publicKey,\n        account,\n      };\n    });\n    mints.forEach(m => {\n      dispatch({\n        type: ActionType.AccountAdd,\n        item: {\n          account: m,\n        },\n      });\n    });\n  };\n\n  // All token accounts owned by the current user.\n  const fetchOwnedTokenAccounts = async () => {\n    const ownedTokenAccounts = await token.getOwnedTokenAccounts(\n      lockupClient.provider.connection,\n      wallet.publicKey,\n    );\n    dispatch({\n      type: ActionType.CommonOwnedTokenAccountsSet,\n      item: {\n        ownedTokenAccounts,\n      },\n    });\n  };\n\n  // All vesting accounts owned by the current user.\n  const fetchVestingAccounts = async () => {\n    const vestingAccounts = await lockupClient.account.vesting.all(\n      wallet.publicKey.toBuffer(),\n    );\n    vestingAccounts.forEach((account: any) => {\n      dispatch({\n        type: ActionType.AccountAdd,\n        item: {\n          account,\n        },\n      });\n    });\n    dispatch({\n      type: ActionType.LockupSetVestings,\n      item: {\n        vestingAccounts: vestingAccounts.map(\n          (v: ProgramAccount) => v.publicKey,\n        ),\n      },\n    });\n  };\n\n  const registrars = await fetchRegistrars();\n  const members = await fetchMembers(registrars);\n  await fetchMints(registrars);\n  await fetchOwnedTokenAccounts();\n  await fetchVestingAccounts();\n\n  return { registrars, members };\n}\n\nexport async function registrarSwitch(\n  registryClient: any,\n  accounts: any,\n  dispatch: any,\n  newRegistrar: PublicKey,\n  oldRegistrar?: PublicKey,\n) {\n  const oldMember = await (async (): Promise<ProgramAccount | undefined> => {\n    if (oldRegistrar === undefined) {\n      return undefined;\n    }\n    const oldMember = await PublicKey.createWithSeed(\n      registryClient.provider.wallet.publicKey,\n      await memberSeed(oldRegistrar),\n      registryClient.programId,\n    );\n    const oldMemberAccount = accounts[oldMember.toString()];\n    return oldMemberAccount !== undefined\n      ? {\n          publicKey: oldMember,\n          account: oldMemberAccount,\n        }\n      : undefined;\n  })();\n\n  const newMember = await (async (): Promise<ProgramAccount | undefined> => {\n    const newMember = await PublicKey.createWithSeed(\n      registryClient.provider.wallet.publicKey,\n      await memberSeed(newRegistrar),\n      registryClient.programId,\n    );\n    const newMemberAccount = accounts[newMember.toString()];\n    return newMemberAccount\n      ? {\n          publicKey: newMember,\n          account: newMemberAccount,\n        }\n      : undefined;\n  })();\n\n  await subscribeRegistrar(\n    registryClient,\n    accounts,\n    dispatch,\n    newRegistrar,\n    oldRegistrar,\n  );\n  if (newMember) {\n    unsubscribeMember(registryClient, oldMember);\n    subscribeMember(newMember, registryClient, dispatch);\n  }\n\n  // Perform the UI update.\n  dispatch({\n    type: ActionType.RegistrySetRegistrar,\n    item: {\n      registrar: newRegistrar,\n      member: newMember ? newMember.publicKey : undefined,\n    },\n  });\n}\n\nexport async function subscribeRegistrar(\n  registryClient: any,\n  accounts: any,\n  dispatch: any,\n  newRegistrar: PublicKey,\n  oldRegistrar?: PublicKey,\n) {\n  if (oldRegistrar) {\n    const oldRegistrarAccount = accounts[oldRegistrar.toString()];\n    registryClient.account.rewardQueue.unsubscribe(\n      oldRegistrarAccount.rewardEventQ,\n    );\n    // TODO: unsubscribe from the staking pool subscription.\n  }\n\n  const newRegistrarAccount = accounts[newRegistrar.toString()];\n\n  // Reward event queue sub.\n  const conn = registryClient.account.rewardQueue.subscribe(\n    newRegistrarAccount.rewardEventQ,\n  );\n  conn.on('change', (account: any) => {\n    dispatch({\n      type: ActionType.AccountUpdate,\n      item: {\n        account: {\n          publicKey: newRegistrarAccount.rewardEventQ,\n          account,\n        },\n      },\n    });\n  });\n\n  // Staking pool token sub.\n  // TODO: track these connections somewhere more organized.\n  registryClient.provider.connection.onAccountChange(\n    newRegistrarAccount.poolMint,\n    (acc: any) => {\n      const poolMint = parseMintAccount(acc.data);\n      dispatch({\n        type: ActionType.AccountUpdate,\n        item: {\n          account: {\n            publicKey: newRegistrarAccount.poolMint,\n            account: poolMint,\n          },\n        },\n      });\n    },\n    'recent',\n  );\n}\n\nexport function subscribeMember(\n  newMember: ProgramAccount,\n  registryClient: any,\n  dispatch: any,\n) {\n  // Subscribe to all member account updates.\n  registryClient.account.member\n    .subscribe(newMember.publicKey)\n    .on('change', (account: any) => {\n      dispatch({\n        type: ActionType.AccountUpdate,\n        item: {\n          account: {\n            publicKey: newMember.publicKey,\n            account,\n          },\n        },\n      });\n    });\n\n  // Subscription function, updating the redux store on every change\n  // to a token account.\n  //\n  // TODO: should track these subscriptions for unsubscribing on demand.\n  const createVaultSubscription = (address: PublicKey) => {\n    registryClient.provider.connection.onAccountChange(\n      address,\n      (acc: any) => {\n        const tokenAccount = parseTokenAccount(acc.data);\n        dispatch({\n          type: ActionType.AccountUpdate,\n          item: {\n            account: {\n              publicKey: address,\n              account: tokenAccount,\n            },\n          },\n        });\n      },\n      'recent',\n    );\n  };\n\n  // Subscribe to all the member's token vaults.\n  createVaultSubscription(newMember.account.balances.vault);\n  createVaultSubscription(newMember.account.balances.vaultStake);\n  createVaultSubscription(newMember.account.balances.vaultPw);\n  createVaultSubscription(newMember.account.balances.spt);\n  createVaultSubscription(newMember.account.balancesLocked.vault);\n  createVaultSubscription(newMember.account.balancesLocked.vaultStake);\n  createVaultSubscription(newMember.account.balancesLocked.vaultPw);\n  createVaultSubscription(newMember.account.balancesLocked.spt);\n}\n\nfunction unsubscribeMember(registryClient: any, newMember?: ProgramAccount) {\n  // todo\n}\n\n// Fetches all accounts for a member account and populates the store with them.\nexport async function fetchAndDispatchMemberAccounts(\n  memberAccount: ProgramAccount,\n  dispatch: any,\n  connection: any,\n) {\n  let accounts = (\n    await anchor.utils.getMultipleAccounts(connection, [\n      memberAccount.account.balances.vault,\n      memberAccount.account.balances.vaultStake,\n      memberAccount.account.balances.vaultPw,\n      memberAccount.account.balances.spt,\n      memberAccount.account.balancesLocked.vault,\n      memberAccount.account.balancesLocked.vaultStake,\n      memberAccount.account.balancesLocked.vaultPw,\n      memberAccount.account.balancesLocked.spt,\n    ])\n  )\n    .filter(raw => raw !== null)\n    .map((raw: any) => {\n      return {\n        publicKey: raw.publicKey,\n        account: parseTokenAccount(raw.account.data),\n      };\n    });\n  accounts.forEach(account => {\n    dispatch({\n      type: ActionType.AccountAdd,\n      item: {\n        account,\n      },\n    });\n  });\n}\n","import React, { useState, useEffect, ReactElement } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { useSnackbar } from 'notistack';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Select from '@material-ui/core/Select';\nimport Menu from '@material-ui/core/Menu';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport Button from '@material-ui/core/Button';\nimport PersonIcon from '@material-ui/icons/Person';\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { refreshAccounts } from './BootstrapProvider';\nimport { networks } from '../../store/config';\nimport {\n  State as StoreState,\n  ProgramAccount,\n  BootstrapState,\n} from '../../store/reducer';\nimport { ActionType } from '../../store/actions';\nimport { useWallet } from './WalletProvider';\n\ntype HeaderProps = {\n  isAppReady: boolean;\n  member?: ProgramAccount;\n};\n\nexport default function Header(props: HeaderProps) {\n  const { isAppReady } = props;\n  const { network } = useSelector((state: StoreState) => {\n    return {\n      network: state.common.network,\n      isAppReady:\n        state.common.isWalletConnected &&\n        state.common.bootstrapState === BootstrapState.Bootstrapped,\n    };\n  });\n  const dispatch = useDispatch();\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const { wallet, registryClient, lockupClient } = useWallet();\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  return (\n    <AppBar\n      position=\"static\"\n      style={{\n        background: '#ffffff',\n        color: '#272727',\n        boxShadow: 'none',\n        borderBottom: 'solid 1pt #ccc',\n      }}\n    >\n      <Toolbar>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            width: '100%',\n          }}\n        >\n          <div style={{ display: 'flex' }}>\n            <SerumLogoButton />\n            <BarButton label=\"Stake\" hrefClient=\"/stake\" />\n            <BarButton label=\"Lockup\" hrefClient=\"/lockup\" />\n            {/*<BarButton label=\"Multisig\" hrefClient=\"/multisig\" />*/}\n            <BarButton label=\"Trade\" href=\"https://dex.projectserum.com\" />\n            <BarButton label=\"Swap\" href=\"https://swap.projectserum.com\" />\n            {network.srmFaucet && (\n              <BarButton\n                label=\"Faucet\"\n                href=\"https://www.spl-token-ui.com/#/token-faucets\"\n              />\n            )}\n          </div>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              onClick={() => {\n                setIsRefreshing(true);\n                enqueueSnackbar(`Refreshing`, {\n                  variant: 'info',\n                });\n                refreshAccounts({\n                  dispatch,\n                  lockupClient,\n                  registryClient,\n                  network,\n                  wallet,\n                })\n                  .then(() => {\n                    setIsRefreshing(false);\n                    closeSnackbar();\n                  })\n                  .catch(err => {\n                    setIsRefreshing(false);\n                    closeSnackbar();\n                    enqueueSnackbar(`There was a problem refreshing: ${err}`, {\n                      variant: 'error',\n                      autoHideDuration: 2500,\n                    });\n                  });\n              }}\n              style={{\n                display: isAppReady ? 'block' : 'none',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                marginRight: '10px',\n              }}\n            >\n              {isRefreshing ? (\n                <div\n                  style={{\n                    marginTop: '8px',\n                    padding: '10px',\n                  }}\n                >\n                  <CircularProgress style={{ width: '24px', height: '24px' }} />\n                </div>\n              ) : (\n                <div>\n                  <IconButton>\n                    <RefreshIcon />\n                  </IconButton>\n                </div>\n              )}\n            </div>\n            <NetworkSelector />\n            <WalletConnectButton\n              style={{\n                display: isAppReady ? 'none' : '',\n              }}\n            />\n            {isAppReady && <UserSelector />}\n          </div>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nfunction SerumLogoButton() {\n  const history = useHistory();\n  return (\n    <div style={{ display: 'flex' }} onClick={() => history.push('/')}>\n      <Button color=\"inherit\">\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n          }}\n        >\n          <img\n            style={{\n              display: 'block',\n              height: '35px',\n            }}\n            alt=\"Logo\"\n            src=\"http://dex.projectserum.com/static/media/logo.49174c73.svg\"\n          />\n        </div>\n      </Button>\n    </div>\n  );\n}\n\ntype BarButtonProps = {\n  label: string;\n  hrefClient?: string;\n  href?: string;\n};\n\nfunction BarButton(props: BarButtonProps) {\n  const history = useHistory();\n  const { label, href, hrefClient } = props;\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n      }}\n      onClick={() => hrefClient && history.push(hrefClient)}\n    >\n      <Link\n        style={{ color: 'inherit', textDecoration: 'none' }}\n        href={href}\n        target=\"_blank\"\n      >\n        <Button color=\"inherit\">\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n              flexDirection: 'column',\n            }}\n          >\n            <Typography style={{ fontSize: '15px' }}>{label}</Typography>\n          </div>\n        </Button>\n      </Link>\n    </div>\n  );\n}\n\nfunction NetworkSelector() {\n  const network = useSelector((state: StoreState) => {\n    return state.common.network;\n  });\n  const dispatch = useDispatch();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div\n      style={{\n        marginRight: '10px',\n        fontSize: '15px',\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n      }}\n    >\n      <Button\n        color=\"inherit\"\n        onClick={e =>\n          setAnchorEl(\n            // @ts-ignore\n            e.currentTarget,\n          )\n        }\n      >\n        <BubbleChartIcon />\n        <Typography style={{ marginLeft: '5px', fontSize: '15px' }}>\n          {network.label}\n        </Typography>\n      </Button>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        style={{\n          marginLeft: '12px',\n          color: 'white',\n        }}\n      >\n        {Object.keys(networks).map((n: string) => (\n          <MenuItem\n            key={n}\n            onClick={() => {\n              handleClose();\n              dispatch({\n                type: ActionType.CommonSetNetwork,\n                item: {\n                  network: networks[n],\n                  networkKey: n,\n                },\n              });\n            }}\n          >\n            <Typography>{networks[n].label}</Typography>\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n\nfunction UserSelector() {\n  const { wallet } = useWallet();\n\n  return (\n    <Select\n      displayEmpty\n      renderValue={() => {\n        return (\n          <Typography style={{ overflow: 'hidden' }}>\n            {wallet.publicKey.toString()}\n          </Typography>\n        );\n      }}\n      style={{\n        marginLeft: '12px',\n        width: '150px',\n      }}\n      onChange={e => {\n        if (e.target.value === 'disconnect') {\n          wallet.disconnect();\n        }\n      }}\n    >\n      <MenuItem value=\"disconnect\">\n        <IconButton color=\"inherit\">\n          <ExitToAppIcon />\n          <Typography style={{ marginLeft: '15px' }}>Disconnect</Typography>\n        </IconButton>\n      </MenuItem>\n    </Select>\n  );\n}\n\ntype WalletConnectButtonProps = {\n  style?: any;\n};\n\nexport function WalletConnectButton(\n  props: WalletConnectButtonProps,\n): ReactElement {\n  const { showDisconnect } = useSelector((state: StoreState) => {\n    return {\n      showDisconnect: state.common.isWalletConnected,\n    };\n  });\n  const dispatch = useDispatch();\n  const { wallet, lockupClient } = useWallet();\n  const { enqueueSnackbar } = useSnackbar();\n\n  // Wallet connection event listeners.\n  useEffect(() => {\n    wallet.on('disconnect', () => {\n      enqueueSnackbar('Disconnected from wallet', {\n        variant: 'info',\n        autoHideDuration: 2500,\n      });\n      dispatch({\n        type: ActionType.CommonWalletDidDisconnect,\n        item: {},\n      });\n      dispatch({\n        type: ActionType.CommonTriggerShutdown,\n        item: {},\n      });\n    });\n    wallet.on('connect', async () => {\n      dispatch({\n        type: ActionType.CommonWalletDidConnect,\n        item: {},\n      });\n      dispatch({\n        type: ActionType.CommonTriggerBootstrap,\n        item: {},\n      });\n    });\n  }, [wallet, dispatch, enqueueSnackbar, lockupClient.provider.connection]);\n\n  return showDisconnect ? (\n    <Button\n      style={props.style}\n      color=\"inherit\"\n      onClick={() => wallet.disconnect()}\n    >\n      <ExitToAppIcon />\n      <Typography style={{ marginLeft: '5px', fontSize: '15px' }}>\n        Disconnect\n      </Typography>\n    </Button>\n  ) : (\n    <Button\n      style={props.style}\n      color=\"inherit\"\n      onClick={() => wallet.connect()}\n    >\n      <PersonIcon />\n      <Typography style={{ marginLeft: '5px', fontSize: '15px' }}>\n        Connect wallet\n      </Typography>\n    </Button>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Brightness1Icon from '@material-ui/icons/Brightness1';\nimport Link from '@material-ui/core/Link';\nimport { State as StoreState } from '../../store/reducer';\n\nexport default function Footer() {\n  const [envDisplay, setEnvDisplay] = useState(false);\n  const { isDisconnected } = useSelector((state: StoreState) => {\n    return {\n      isDisconnected: !state.common.isWalletConnected,\n    };\n  });\n  return (\n    <div\n      style={{\n        zIndex: 99,\n        position: 'fixed',\n        width: '100%',\n        bottom: 0,\n        textAlign: 'center',\n        height: '30px',\n        backgroundColor: '#fbfbfb',\n        borderTop: 'solid 1pt #ccc',\n        display: 'flex',\n        justifyContent: 'space-between',\n        paddingLeft: '10px',\n        paddingRight: '10px',\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          position: 'absolute',\n          bottom: '40px',\n          left: '10px',\n          borderRadius: '4px',\n          background: '#272727',\n        }}\n        onClick={() => {\n          setEnvDisplay(!envDisplay);\n        }}\n      >\n        <IconButton\n          style={{\n            paddingLeft: '10px',\n            paddingRight: '10px',\n            paddingTop: 0,\n            paddingBottom: 0,\n            color: 'inherit',\n            display: 'flex',\n            justifyContent: 'center',\n            flexDirection: 'column',\n          }}\n        >\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n              flexDirection: 'column',\n              marginRight: '10px',\n            }}\n          >\n            <Brightness1Icon\n              style={{\n                color: isDisconnected ? '#ccc' : 'rgb(60, 195, 215)',\n                fontSize: '12px',\n              }}\n            />\n          </div>\n          <Typography\n            style={{ color: '#fff', fontSize: '14px', fontWeight: 'bold' }}\n          >\n            {'Environment'}\n          </Typography>\n        </IconButton>\n      </div>\n      <div style={{ marginLeft: 'auto', marginRight: 'auto', display: 'flex' }}>\n        <FooterButton\n          href={\n            'https://github.com/project-serum/anchor/blob/master/examples/lockup/docs/staking.md'\n          }\n          label={'Technical Documentation'}\n        />\n        <FooterButton\n          href={'https://github.com/project-serum/awesome-serum'}\n          label={'Developer Resources'}\n        />\n        <FooterButton\n          href={'https://discord.com/channels/739225212658122886'}\n          label={'Discord'}\n        />\n        <FooterButton href={'https://t.me/ProjectSerum'} label={'Telegram'} />\n        <FooterButton\n          href={'https://github.com/project-serum'}\n          label={'GitHub'}\n        />\n        <FooterButton\n          href={'https://solanabeach.io/'}\n          label={'Solana Network'}\n          isEnd={true}\n        />\n      </div>\n      {envDisplay && (\n        <div\n          style={{\n            overflowY: 'scroll',\n            position: 'fixed',\n            bottom: '30px',\n            right: 0,\n            width: '500px',\n            height: '400px',\n            borderTopLeftRadius: '4px',\n            boxShadow: 'rgba(0, 0, 0, 0.05) 0px 0px 25px 0px',\n            background: '#fff',\n          }}\n        >\n          <NetworkEnvironment />\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction NetworkEnvironment() {\n  let { network, registrar, registrarAddress } = useSelector(\n    (state: StoreState) => {\n      return {\n        network: state.common.network,\n        registrar: state.accounts[state.registry.registrar.toString()],\n        registrarAddress: state.registry.registrar,\n      };\n    },\n  );\n  return (\n    <div style={{ textAlign: 'left' }}>\n      <Typography\n        style={{\n          paddingLeft: '10px',\n          marginTop: '20px',\n          fontSize: '14px',\n          fontWeight: 'bold',\n        }}\n      >\n        Programs and Global Accounts\n      </Typography>\n      <ul>\n        <li>\n          SRM Faucet:{' '}\n          {network.srmFaucet ? network.srmFaucet.toString() : 'None'}\n        </li>\n        <li>\n          MSRM Faucet:{' '}\n          {network.msrmFaucet ? network.msrmFaucet.toString() : 'None'}\n        </li>\n        <li>Registry Program: {network.registryProgramId.toString()}</li>\n        <li>Lockup Program: {network.lockupProgramId.toString()}</li>\n      </ul>\n      <Typography\n        style={{\n          paddingLeft: '10px',\n          marginTop: '20px',\n          fontSize: '14px',\n          fontWeight: 'bold',\n        }}\n      >\n        Stake Registrar\n      </Typography>\n      <ul>\n        <li>Address: {registrarAddress.toString()}</li>\n        {Object.keys(registrar).map(field => {\n          return (\n            <li>\n              {field}: {registrar[field].toString()}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\ntype FooterButtonProps = {\n  label: string;\n  href: string;\n  isEnd?: boolean;\n};\n\nfunction FooterButton(props: FooterButtonProps) {\n  const { label, href, isEnd } = props;\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        marginRight: isEnd ? '' : '15px',\n      }}\n    >\n      <Link href={href} target=\"_blank\" color=\"inherit\">\n        <Typography style={{ fontSize: '14px' }}>{label}</Typography>\n      </Link>\n    </div>\n  );\n}\n","import React, { useState, PropsWithChildren } from 'react';\nimport { useSelector } from 'react-redux';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Button from '@material-ui/core/Button';\nimport { State as StoreState, BootstrapState } from '../../store/reducer';\nimport Header from './Header';\nimport Footer from './Footer';\n\ntype Props = {};\n\nexport default function Layout(props: PropsWithChildren<Props>) {\n  const { isAppReady } = useSelector((state: StoreState) => {\n    return {\n      isAppReady:\n        state.common.isWalletConnected &&\n        state.common.bootstrapState === BootstrapState.Bootstrapped,\n    };\n  });\n  const [refresh, setRefresh] = useState(false);\n  return (\n    <div\n      style={{\n        display: 'flex',\n        minHeight: '100vh',\n        flexDirection: 'column',\n        backgroundColor: 'rgb(251, 251, 251)',\n      }}\n    >\n      <div\n        style={{\n          position: 'fixed',\n          width: '100%',\n          zIndex: 99,\n        }}\n      >\n        <RiskBar />\n        <Header isAppReady={isAppReady} />\n      </div>\n      <div\n        style={{\n          width: '100%',\n          marginTop: '94px',\n          flex: 1,\n          display: 'flex',\n          marginBottom: '30px', // Compensates for the fixed position footer.\n        }}\n      >\n        {window.localStorage.getItem('consent') ? (\n          !isAppReady ? (\n            <DisconnectedSplash />\n          ) : (\n            <div style={{ width: '100%' }}>{props.children}</div>\n          )\n        ) : (\n          <RiskDisclosureForm\n            onConsent={() => {\n              window.localStorage.setItem('consent', 'true');\n              setRefresh(!refresh);\n            }}\n          />\n        )}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nfunction RiskBar() {\n  return (\n    <div\n      style={{\n        color: '#fff',\n        backgroundColor: 'rgb(39, 39, 39)',\n        height: '30px',\n        textAlign: 'center',\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          flexDirection: 'column',\n          height: '100%',\n        }}\n      >\n        <Typography style={{ fontSize: '14px' }}>\n          Stake is unaudited software. Use at your own risk.\n        </Typography>\n      </div>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nfunction RiskDisclosureForm({ onConsent }: { onConsent: () => void }) {\n  return (\n    <div\n      style={{\n        flex: '1',\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        textAlign: 'center',\n      }}\n    >\n      <div style={{ width: '100%', display: 'flex' }}>\n        <div\n          style={{ display: 'flex', marginLeft: 'auto', marginRight: 'auto' }}\n        >\n          <Typography\n            style={{ marginBottom: '16px', maxWidth: '1000px' }}\n            color=\"textSecondary\"\n            variant=\"h4\"\n          >\n            No statement or warranty is provided in relation to the utility of\n            this program, the safety of its code or its suitability for your\n            use, and by using it, you agree to bear any risk associated with\n            such potential vulnerabilities, including, but not limited to the\n            potential loss of tokens.\n          </Typography>\n        </div>\n      </div>\n      <div style={{ display: 'flex', marginLeft: 'auto', marginRight: 'auto' }}>\n        <Button variant=\"contained\" color=\"primary\" onClick={onConsent}>\n          I agree\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nfunction DisconnectedSplash() {\n  const classes = useStyles();\n  const { network, isDisconnected } = useSelector((state: StoreState) => {\n    return {\n      network: state.common.network,\n      isDisconnected: !state.common.isWalletConnected,\n    };\n  });\n  return (\n    <div\n      style={{\n        flex: '1',\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        textAlign: 'center',\n      }}\n    >\n      <div style={{ width: '100%', display: 'flex' }}>\n        {isDisconnected ? (\n          <div\n            style={{ display: 'flex', marginLeft: 'auto', marginRight: 'auto' }}\n          >\n            <Typography\n              style={{ marginLeft: '24px' }}\n              color=\"textSecondary\"\n              variant=\"h4\"\n            >\n              Disconnected\n            </Typography>\n          </div>\n        ) : (\n          <div style={{ width: '100%' }}>\n            <div style={{ width: '100%' }} className={classes.root}>\n              <div>\n                <Typography variant=\"h5\">\n                  {`Connecting to ${network.label}...`}\n                </Typography>\n              </div>\n              <div\n                style={{\n                  marginLeft: 'auto',\n                  marginRight: 'auto',\n                  width: '300px',\n                }}\n              >\n                <LinearProgress style={{ width: '100%' }} />\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport BN from 'bn.js';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { PublicKey } from '@solana/web3.js';\nimport { State as StoreState } from '../../store/reducer';\nimport { toDisplay } from '../../utils/tokens';\n\ntype Props = {\n  style?: any;\n  mint?: PublicKey | null;\n  decimals?: number;\n  variant?: 'outlined' | 'standard';\n  onChange: (from: PublicKey, maxAmount: BN) => void;\n};\n\nexport default function OwnedTokenAccountsSelect(p: Props) {\n  const { mint, decimals, variant, onChange, style } = p;\n  const ownedTokenAccounts = useSelector((state: StoreState) => {\n    if (!mint) {\n      return [];\n    }\n    return state.common.ownedTokenAccounts.filter(\n      ota => ota.account.mint.toString() === mint.toString(),\n    );\n  });\n\n  const [fromAccount, setFromAccount] = useState('');\n\n  return (\n    <Select\n      style={style}\n      variant={variant}\n      fullWidth\n      value={fromAccount}\n      onChange={e => {\n        const pk = e.target.value as string;\n        setFromAccount(pk);\n        const pubkey = new PublicKey(pk);\n        const token = ownedTokenAccounts\n          .filter(ota => ota.publicKey.equals(pubkey))\n          .pop();\n        onChange(pubkey, new BN(token!.account.amount));\n      }}\n    >\n      {ownedTokenAccounts.length === 0 ? (\n        <MenuItem value={''}>No token accounts found</MenuItem>\n      ) : (\n        ownedTokenAccounts.map(ownedTokenAccount => {\n          return (\n            <MenuItem value={ownedTokenAccount.publicKey.toString()}>\n              <div\n                style={{\n                  width: '100%',\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  overflow: 'hidden',\n                }}\n              >\n                <div>{`${ownedTokenAccount.publicKey}`}</div>\n                {decimals && (\n                  <div style={{ float: 'right', color: '#ccc' }}>{`${toDisplay(\n                    ownedTokenAccount.account.amount,\n                    decimals ?? 0,\n                  )}`}</div>\n                )}\n              </div>\n            </MenuItem>\n          );\n        })\n      )}\n    </Select>\n  );\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { TokenInfo } from '@solana/spl-token-registry';\nimport { useTokenInfos } from '../../utils/tokens';\nimport { State as StoreState, ProgramAccount } from '../../store/reducer';\nimport { Network } from '../../store/config';\nimport * as bootstrap from './BootstrapProvider';\nimport { useWallet } from './WalletProvider';\n\nexport function activeRegistrar(\n  state: StoreState,\n): { label: string; programAccount: any } {\n  const registrars = Object.keys(state.common.network.registrars)\n    .map(registrar => {\n      let entry: [string, ProgramAccount] = [\n        registrar,\n        {\n          publicKey: state.common.network.registrars[registrar],\n          account:\n            state.accounts[\n              state.common.network.registrars[registrar].toString()\n            ],\n        },\n      ];\n      return entry;\n    })\n    .filter(r => r[1].account !== undefined);\n  const selectedRegistrar: any = registrars\n    .filter(([r, acc]) => acc.publicKey.equals(state.registry.registrar))\n    .map(([r, acc]) => {\n      return {\n        label: r,\n        programAccount: acc,\n      };\n    })\n    .pop();\n\n  return selectedRegistrar;\n}\n\nexport default function RegistrarSelect() {\n  const { registryClient } = useWallet();\n  const { registrars, selectedRegistrar, accounts, network } = useSelector(\n    (state: StoreState) => {\n      const registrars = Object.keys(state.common.network.registrars)\n        .map(registrar => {\n          let entry: [string, ProgramAccount] = [\n            registrar,\n            {\n              publicKey: state.common.network.registrars[registrar],\n              account:\n                state.accounts[\n                  state.common.network.registrars[registrar].toString()\n                ],\n            },\n          ];\n          return entry;\n        })\n        .filter(r => r[1].account !== undefined);\n      const selectedRegistrar: any = registrars\n        .filter(([r, acc]) => acc.publicKey.equals(state.registry.registrar))\n        .map(([r, acc]) => {\n          return {\n            label: r,\n            programAccount: acc,\n          };\n        })\n        .pop();\n      return {\n        network: state.common.network,\n        accounts: state.accounts,\n        registrars,\n        selectedRegistrar,\n      };\n    },\n  );\n  const dispatch = useDispatch();\n  const tokenInfos = useTokenInfos();\n\n  return (\n    <Select\n      style={{ width: '294px', height: '36px' }}\n      variant={'outlined'}\n      fullWidth\n      value={selectedRegistrar.label}\n      onChange={async e => {\n        const registrar: ProgramAccount = registrars\n          .filter(([r, acc]) => r === e.target.value)\n          .map(([r, acc]) => acc)\n          .pop()!;\n\n        bootstrap.registrarSwitch(\n          registryClient,\n          accounts,\n          dispatch,\n          registrar!.publicKey, // New.\n          selectedRegistrar.programAccount.publicKey, // Old.\n        );\n      }}\n    >\n      {registrars.length === 0 ? (\n        <MenuItem value={'_loading'}>Loading registrars...</MenuItem>\n      ) : (\n        registrars.map(([label, registrar]) => {\n          return (\n            <MenuItem key={label} value={label}>\n              <div style={{ display: 'flex' }}>\n                <div\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    justifyContent: 'center',\n                  }}\n                >\n                  {getImage(tokenInfos.get(registrar.account.mint.toString()))}\n                </div>\n                <div\n                  style={{\n                    overflow: 'hidden',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    justifyContent: 'center',\n                  }}\n                >\n                  {`${registrarToDisplayLabel(registrar, network)}`}\n                </div>\n              </div>\n            </MenuItem>\n          );\n        })\n      )}\n    </Select>\n  );\n}\n\nfunction registrarToDisplayLabel(\n  registrar: ProgramAccount,\n  network: Network,\n): string {\n  const entry = Object.keys(network.registrars)\n    .filter(r => network.registrars[r].equals(registrar.publicKey))\n    .pop();\n  if (entry !== undefined) {\n    return entry.toUpperCase();\n  }\n  return registrar.publicKey.toString();\n}\n\nexport function getImage(token?: TokenInfo, style?: any) {\n  if (token) {\n    return (\n      <img\n        alt=\"Token Icon\"\n        style={style ?? { marginRight: '10px', height: '25px' }}\n        src={token.logoURI}\n      />\n    );\n  } else {\n    return <div style={{ marginLeft: '32px' }}></div>;\n  }\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { State as StoreState } from '../store/reducer';\nimport { toDisplay, toDisplayLabel } from '../utils/tokens';\n\nexport default function Me() {\n  const { member } = useSelector((state: StoreState) => {\n    return {\n      member: state.registry.member,\n    };\n  });\n\n  return (\n    <div style={{ display: 'flex', width: '100%' }}>\n      <div style={{ flex: 1, marginTop: '24px', marginBottom: '24px' }}>\n        {member && <MemberBalancesCard />}\n      </div>\n    </div>\n  );\n}\n\n// Assumes a member and all vaults is available in the store.\nfunction MemberBalancesCard() {\n  const {\n    mint,\n    registrar,\n    vault,\n    vaultStake,\n    vaultPw,\n    spt,\n    lockedVault,\n    lockedVaultStake,\n    lockedVaultPw,\n    lockedSpt,\n  } = useSelector((state: StoreState) => {\n    const member = state.accounts[state.registry.member!.toString()];\n    const registrar = state.accounts[state.registry.registrar.toString()];\n    return {\n      registrar,\n      mint: state.accounts[registrar.mint.toString()],\n      vault: state.accounts[member.balances.vault],\n      vaultStake: state.accounts[member.balances.vaultStake],\n      vaultPw: state.accounts[member.balances.vaultPw],\n      spt: state.accounts[member.balances.spt],\n      lockedVault: state.accounts[member.balancesLocked.vault],\n      lockedVaultStake: state.accounts[member.balancesLocked.vaultStake],\n      lockedVaultPw: state.accounts[member.balancesLocked.vaultPw],\n      lockedSpt: state.accounts[member.balancesLocked.spt],\n    };\n  });\n  const tables = [\n    {\n      title: 'Main Balances',\n      description: 'Balances deposited directly from the connected wallet.',\n      rows: [\n        {\n          token: toDisplayLabel(registrar.mint),\n          balance: toDisplay(vault.amount, mint.decimals),\n          stake: toDisplay(vaultStake.amount, mint.decimals),\n          pending: toDisplay(vaultPw.amount, mint.decimals),\n          spt: toDisplay(spt.amount, 0),\n        },\n      ],\n    },\n    {\n      title: 'Locked Balances',\n      description:\n        'Balances deposited from the lockup program. These funds are isolated from the Main Balances and may only be withdrawn back to the lockup program. At all times they are program controlled.',\n      rows: [\n        {\n          token: toDisplayLabel(registrar.mint),\n          balance: toDisplay(lockedVault.amount, mint.decimals),\n          stake: toDisplay(lockedVaultStake.amount, mint.decimals),\n          pending: toDisplay(lockedVaultPw.amount, mint.decimals),\n          spt: toDisplay(lockedSpt.amount, 0),\n        },\n      ],\n    },\n  ];\n  return (\n    <Card\n      style={{\n        marginBottom: '24px',\n      }}\n    >\n      <CardContent\n        style={{\n          marginTop: '24px',\n          position: 'relative',\n          paddingTop: 0,\n          paddingBottom: '16px',\n        }}\n      >\n        {tables.map(t => (\n          <BalanceTable\n            key={t.title}\n            title={t.title}\n            description={t.description}\n            rows={t.rows}\n          />\n        ))}\n      </CardContent>\n    </Card>\n  );\n}\n\ntype BalanceTableProps = {\n  title: string;\n  description: string;\n  rows:\n    | null\n    | {\n        token: string;\n        balance: string;\n        stake: string;\n        pending: string;\n        spt: string;\n      }[];\n};\n\nfunction BalanceTable(props: BalanceTableProps) {\n  const { title, rows, description } = props;\n  return (\n    <div style={{ marginBottom: '16px' }}>\n      <Typography style={{ fontWeight: 'bold' }}>{title}</Typography>\n      <Typography color=\"textSecondary\" style={{ fontSize: '14px' }}>\n        {description}\n      </Typography>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Token</TableCell>\n              <TableCell align=\"right\">Available</TableCell>\n              <TableCell align=\"right\">Pending</TableCell>\n              <TableCell align=\"right\">Staked</TableCell>\n              <TableCell align=\"right\">Pool</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows === null ? (\n              <CircularProgress />\n            ) : (\n              rows.map(row => (\n                <TableRow key={row.token}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.token}\n                  </TableCell>\n                  <TableCell align=\"right\">{row.balance}</TableCell>\n                  <TableCell align=\"right\">{row.pending}</TableCell>\n                  <TableCell align=\"right\">{row.stake}</TableCell>\n                  <TableCell align=\"right\">{row.spt}</TableCell>\n                </TableRow>\n              ))\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n","import { PublicKey, SYSVAR_CLOCK_PUBKEY } from '@solana/web3.js';\nimport * as anchor from '@project-serum/anchor';\nimport { simulateTransaction } from '@project-serum/common';\n\nexport async function vestingSigner(\n  programId: PublicKey,\n  vesting: PublicKey,\n): Promise<{ publicKey: PublicKey; nonce: number }> {\n  const [publicKey, nonce] = await anchor.web3.PublicKey.findProgramAddress(\n    [vesting.toBuffer()],\n    programId,\n  );\n  return {\n    publicKey,\n    nonce,\n  };\n}\n\n// Simulates the `availableForWithdrawal` instruction to funnel out a the\n// emitted log data (as a hack to get a return value).\nexport async function availableForWithdrawal(\n  lockupClient: anchor.Program,\n  vesting: PublicKey,\n): Promise<anchor.BN> {\n  let tx = lockupClient.transaction.availableForWithdrawal({\n    accounts: {\n      vesting,\n      clock: SYSVAR_CLOCK_PUBKEY,\n    },\n  });\n  tx.setSigners(...[lockupClient.provider.wallet.publicKey]);\n  let resp = await simulateTransaction(\n    lockupClient.provider.connection,\n    tx,\n    'recent',\n  );\n  if (resp.value.err) {\n    throw new Error(`RPC error: ${resp.value.err.toString()}`);\n  }\n  let log = resp.value.logs![1].slice('Program log: '.length);\n  return new anchor.BN(JSON.parse(log).result);\n}\n","import React, { useState } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport LockIcon from '@material-ui/icons/Lock';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { toDisplay } from '../../utils/tokens';\nimport { ProgramAccount } from '../../store/reducer';\nimport { Network } from '../../store/config';\n\ntype RewardsListProps = {\n  rewards: (RewardListItemViewModel | null)[];\n};\n\nexport default function RewardsList(props: RewardsListProps) {\n  const { rewards } = props;\n  return (\n    <List>\n      {rewards.length > 0 ? (\n        rewards.map(r =>\n          r === null ? (\n            <CircularProgress\n              style={{\n                display: 'block',\n                marginLeft: 'auto',\n                marginRight: 'auto',\n              }}\n            />\n          ) : (\n            <RewardListItem rli={r} />\n          ),\n        )\n      ) : (\n        <ListItem>\n          <ListItemText primary={'No rewards found'} />\n        </ListItem>\n      )}\n    </List>\n  );\n}\n\ntype RewardListItemProps = {\n  rli: RewardListItemViewModel;\n};\n\nfunction RewardListItem(props: RewardListItemProps) {\n  const { rli } = props;\n\n  const [open, setOpen] = useState(false);\n\n  const dateLabel = new Date(\n    rli.vendor!.account.startTs.toNumber() * 1000,\n  ).toLocaleString();\n  let fromLabel = `Dropped by ${rli.vendor.account.from.toString()} | ${dateLabel}`;\n  return (\n    <>\n      <ListItem button onClick={() => setOpen(open => !open)}>\n        <LockIcon\n          style={{\n            visibility: rli.reward.locked ? 'visible' : 'hidden',\n            marginRight: '16px',\n          }}\n        />\n        <ListItemText\n          primary={\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                color: rli.needsClaim ? '#54a15e' : '',\n              }}\n            >\n              <div>{`${toDisplay(\n                rli.vendor.account.total,\n                rli.mint!.account.decimals,\n              )} ${rli.mint!.publicKey}`}</div>\n            </div>\n          }\n          secondary={fromLabel}\n        />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        {rli.vendor === undefined ? (\n          <CircularProgress />\n        ) : (\n          <RewardListItemDetails vendor={rli.vendor!} />\n        )}\n      </Collapse>\n    </>\n  );\n}\n\ntype RewardListItemDetailsProps = {\n  vendor: ProgramAccount;\n};\n\nfunction RewardListItemDetails(props: RewardListItemDetailsProps) {\n  let { vendor } = props;\n\n  return (\n    <div\n      style={{\n        marginLeft: '56px',\n      }}\n    >\n      <div>Vendor</div>\n      <ul>\n        <li>Address {vendor.publicKey.toString()}</li>\n        <li>Vault: {vendor.account.vault.toString()}</li>\n        <li>Mint: {vendor.account.mint.toString()}</li>\n        <li>\n          Pool token supply snapshot:{' '}\n          {vendor.account.poolTokenSupply.toString()}\n        </li>\n        <li>\n          Expiry:{' '}\n          {new Date(\n            vendor.account.expiryTs.toNumber() * 1000,\n          ).toLocaleDateString()}\n        </li>\n        <li>Expiry receiver: {vendor.account.expiryReceiver.toString()}</li>\n        <li>Expired: {vendor.account.expired.toString()}</li>\n        <li>\n          Reward queue cursor: {vendor.account.rewardEventQCursor.toString()}\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport class RewardListItemViewModel {\n  constructor(\n    readonly reward: any,\n    readonly cursor: number,\n    readonly needsClaim: boolean,\n    readonly mint: ProgramAccount,\n    readonly vendor: ProgramAccount,\n  ) {}\n\n  static fromMessage(\n    ctx: Context,\n    event: any,\n    idx: number,\n  ): RewardListItemViewModel | null {\n    let cursor = ctx.rewardEventQueue!.account.tail + idx;\n    let needsClaim = false;\n\n    const vendor = ctx.accounts[event.vendor.toString()];\n\n    if (vendor === undefined) {\n      return null;\n    }\n\n    const mint = {\n      publicKey: vendor.mint,\n      account: ctx.accounts[vendor.mint.toString()],\n    };\n\n    if (ctx.member !== undefined) {\n      // Must own shares of the reward's target pool.\n      const sptAccount =\n        ctx.accounts[ctx.member.account.balances.spt.toString()];\n      const lockedSptAccount =\n        ctx.accounts[ctx.member.account.balancesLocked.spt.toString()];\n\n      const ownsPoolShares = sptAccount.amount + lockedSptAccount.amount > 0;\n\n      // Must not have claimed the reward yet.\n      const notYetClaimed = cursor >= ctx.member.account.rewardsCursor;\n\n      // Must have staked before the reward was dropped.\n      const isEligible = ctx.member.account.lastStakeTs < vendor.startTs;\n\n      // Must not have let the reward expire.\n      const expired = vendor.expired;\n\n      needsClaim = ownsPoolShares && notYetClaimed && isEligible && !expired;\n    }\n\n    const vendorProgramAccount = {\n      publicKey: event.vendor,\n      account: vendor,\n    };\n\n    return new RewardListItemViewModel(\n      event,\n      cursor,\n      needsClaim,\n      mint,\n      vendorProgramAccount,\n    );\n  }\n}\n\ntype Context = {\n  accounts: any;\n  rewardEventQueue: ProgramAccount;\n  member?: ProgramAccount;\n  network: Network;\n};\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport BN from 'bn.js';\nimport { useSnackbar } from 'notistack';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Tabs from '@material-ui/core/Tabs';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport * as serumCmn from '@project-serum/common';\nimport { TokenInstructions } from '@project-serum/serum';\nimport {\n  Account,\n  PublicKey,\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n} from '@solana/web3.js';\nimport { useWallet } from '../../components/common/WalletProvider';\nimport { State as StoreState } from '../../store/reducer';\nimport OwnedTokenAccountsSelect from '../common/OwnedTokenAccountsSelect';\nimport * as notification from '../common/Notification';\nimport { fromDisplay } from '../../utils/tokens';\nimport { Network } from '../../store/config';\nimport { activeRegistrar } from '../common/RegistrarSelect';\n\nexport default function DropRewardButton() {\n  const [showDialog, setShowDialog] = useState(false);\n  return (\n    <>\n      <div onClick={() => setShowDialog(true)}>\n        <Button variant=\"contained\" color=\"secondary\">\n          Drop Rewards\n        </Button>\n      </div>\n      <DropRewardDialog\n        open={showDialog}\n        onClose={() => setShowDialog(false)}\n      />\n    </>\n  );\n}\n\nenum RewardTypeViewModel {\n  Unlocked,\n  Locked,\n}\n\ntype DropRewardsDialogProps = {\n  open: boolean;\n  onClose: () => void;\n};\n\nfunction DropRewardDialog(props: DropRewardsDialogProps) {\n  const { open, onClose } = props;\n  const { selectedRegistrar } = useSelector((state: StoreState) => {\n    return {\n      selectedRegistrar: activeRegistrar(state),\n    };\n  });\n  const [rewardTypeTab, setRewardTypeTab] = useState(\n    RewardTypeViewModel.Unlocked,\n  );\n\n  return (\n    <Dialog open={open} onClose={onClose} fullWidth maxWidth=\"md\">\n      <DialogTitle>\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <Typography variant=\"h4\" component=\"h2\">\n            {`Drop Rewards on ${selectedRegistrar.label.toUpperCase()} Stakers`}\n          </Typography>\n        </div>\n      </DialogTitle>\n      <DialogContent>\n        <Tabs value={rewardTypeTab} onChange={(_e, t) => setRewardTypeTab(t)}>\n          <Tab value={RewardTypeViewModel.Unlocked} label=\"Unlocked\" />\n          <Tab value={RewardTypeViewModel.Locked} label=\"Locked\" />\n        </Tabs>\n        {rewardTypeTab === RewardTypeViewModel.Unlocked && (\n          <DropUnlockedForm onClose={onClose} />\n        )}\n        {rewardTypeTab === RewardTypeViewModel.Locked && (\n          <DropLockedForm onClose={onClose} />\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}\n\ntype DropUnlockedFormProps = {\n  onClose: () => void;\n};\n\nfunction DropUnlockedForm(props: DropUnlockedFormProps) {\n  const { onClose } = props;\n  const snack = useSnackbar();\n  const { registryClient } = useWallet();\n  const { network, registrar, accounts } = useSelector((state: StoreState) => {\n    return {\n      network: state.common.network,\n      registrar: {\n        publicKey: state.registry.registrar,\n        account: state.accounts[state.registry.registrar.toString()],\n      },\n      accounts: state.accounts,\n    };\n  });\n\n  const [rewardDisplayAmount, setRewardDisplayAmount] = useState<null | number>(\n    null,\n  );\n  const [expiryTs, setExpiryTs] = useState<null | number>(null);\n  const [depositor, setDepositor] = useState<null | PublicKey>(null);\n  const [mint, setMint] = useState<null | string>(null);\n\n  const isSendEnabled =\n    mint !== null &&\n    depositor !== null &&\n    rewardDisplayAmount !== null &&\n    rewardDisplayAmount >= 100 &&\n    expiryTs !== null;\n\n  const sendUnlockedReward = async () => {\n    await notification.withTx(\n      snack,\n      'Dropping unlocked reward...',\n      'Unlocked reward dropped',\n      async () => {\n        let mintAccount = accounts[network.mints[mint!].toString()];\n        if (!mintAccount) {\n          mintAccount = await serumCmn.getMintInfo(\n            registryClient.provider,\n            network.mints[mint!],\n          );\n        }\n\n        const lockedRewardAmount = fromDisplay(\n          rewardDisplayAmount!,\n          mintAccount.decimals,\n        );\n        const rewardKind = { unlocked: {} };\n        const vendor = new Account();\n        const vendorVault = new Account();\n        const [vendorSigner, nonce] = await PublicKey.findProgramAddress(\n          [registrar.publicKey.toBuffer(), vendor.publicKey.toBuffer()],\n          registryClient.programId,\n        );\n        return await registryClient.rpc.dropReward(\n          rewardKind,\n          lockedRewardAmount,\n          new BN(expiryTs!),\n          registryClient.provider.wallet.publicKey,\n          nonce,\n          {\n            accounts: {\n              registrar: registrar.publicKey,\n              rewardEventQ: registrar.account.rewardEventQ,\n              poolMint: registrar.account.poolMint,\n              vendor: vendor.publicKey,\n              vendorVault: vendorVault.publicKey,\n              depositor,\n              depositorAuthority: registryClient.provider.wallet.publicKey,\n              tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n              clock: SYSVAR_CLOCK_PUBKEY,\n              rent: SYSVAR_RENT_PUBKEY,\n            },\n            signers: [vendorVault, vendor],\n            instructions: [\n              ...(await serumCmn.createTokenAccountInstrs(\n                registryClient.provider,\n                vendorVault.publicKey,\n                network.mints[mint!],\n                vendorSigner,\n              )),\n              await registryClient.account.rewardVendor.createInstruction(\n                vendor,\n              ),\n            ],\n          },\n        );\n      },\n    );\n    onClose();\n  };\n  const onClick = () => {\n    sendUnlockedReward().catch(err => {\n      console.error(err);\n      snack.enqueueSnackbar(\n        `Error dropping unlocked reward: ${err.toString()}`,\n        {\n          variant: 'error',\n        },\n      );\n    });\n  };\n  return (\n    <DropVendorForm\n      network={network}\n      mint={mint}\n      setMint={setMint}\n      setDepositor={setDepositor}\n      setRewardDisplayAmount={setRewardDisplayAmount}\n      expiryTs={expiryTs}\n      setExpiryTs={setExpiryTs}\n      onCancel={onClose}\n      onClick={onClick}\n      isSendEnabled={isSendEnabled}\n    />\n  );\n}\n\ntype DropLockedFormProps = DropUnlockedFormProps;\n\nfunction DropLockedForm(props: DropLockedFormProps) {\n  const { onClose } = props;\n  const snack = useSnackbar();\n  const { registryClient } = useWallet();\n  const { network, registrar, accounts } = useSelector((state: StoreState) => {\n    return {\n      network: state.common.network,\n      registrar: {\n        publicKey: state.registry.registrar,\n        account: state.accounts[state.registry.registrar.toString()],\n      },\n      accounts: state.accounts,\n    };\n  });\n\n  const [rewardDisplayAmount, setRewardDisplayAmount] = useState<null | number>(\n    null,\n  );\n  const [startTs, setStartTs] = useState<null | number>(null);\n  const [endTs, setEndTs] = useState<null | number>(null);\n  const [expiryTs, setExpiryTs] = useState<null | number>(null);\n  const [depositor, setDepositor] = useState<null | PublicKey>(null);\n  const [mint, setMint] = useState<null | string>(null);\n  const [periodCount, setPeriodCount] = useState(7);\n\n  const isSendEnabled =\n    startTs !== null &&\n    endTs !== null &&\n    mint !== null &&\n    depositor !== null &&\n    rewardDisplayAmount !== null &&\n    rewardDisplayAmount >= 100 &&\n    expiryTs !== null;\n\n  const sendLockedRewards = async () => {\n    await notification.withTx(\n      snack,\n      'Dropping locked reward...',\n      'Locked reward dropped',\n      async () => {\n        const rewardKind = {\n          locked: {\n            startTs: new BN(startTs!),\n            endTs: new BN(endTs!),\n            periodCount: new BN(periodCount),\n          },\n        };\n        const vendor = new Account();\n        const vendorVault = new Account();\n        const [vendorSigner, nonce] = await PublicKey.findProgramAddress(\n          [registrar.publicKey.toBuffer(), vendor.publicKey.toBuffer()],\n          registryClient.programId,\n        );\n        let mintAccount = accounts[network.mints[mint!].toString()];\n        const rewardAmount = fromDisplay(\n          rewardDisplayAmount!,\n          mintAccount.decimals,\n        );\n        return await registryClient.rpc.dropReward(\n          rewardKind,\n          rewardAmount,\n          new BN(expiryTs!),\n          registryClient.provider.wallet.publicKey,\n          nonce,\n          {\n            accounts: {\n              registrar: registrar.publicKey,\n              rewardEventQ: registrar.account.rewardEventQ,\n              poolMint: registrar.account.poolMint,\n              vendor: vendor.publicKey,\n              vendorVault: vendorVault.publicKey,\n              depositor,\n              depositorAuthority: registryClient.provider.wallet.publicKey,\n              tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n              clock: SYSVAR_CLOCK_PUBKEY,\n              rent: SYSVAR_RENT_PUBKEY,\n            },\n            signers: [vendorVault, vendor],\n            instructions: [\n              ...(await serumCmn.createTokenAccountInstrs(\n                registryClient.provider,\n                vendorVault.publicKey,\n                network.mints[mint!],\n                vendorSigner,\n              )),\n              await registryClient.account.rewardVendor.createInstruction(\n                vendor,\n              ),\n            ],\n          },\n        );\n      },\n    );\n    onClose();\n  };\n\n  const onClick = () => {\n    sendLockedRewards().catch(err => {\n      snack.enqueueSnackbar(`Error dropping locked reward: ${err.toString()}`, {\n        variant: 'error',\n      });\n    });\n  };\n\n  return (\n    <DropVendorForm\n      network={network}\n      mint={mint}\n      setMint={setMint}\n      setDepositor={setDepositor}\n      setRewardDisplayAmount={setRewardDisplayAmount}\n      setStartTs={setStartTs}\n      setEndTs={setEndTs}\n      periodCount={periodCount}\n      setPeriodCount={setPeriodCount}\n      expiryTs={expiryTs}\n      setExpiryTs={setExpiryTs}\n      onCancel={onClose}\n      onClick={onClick}\n      isSendEnabled={isSendEnabled}\n    />\n  );\n}\n\ntype DropVendorFormProps = {\n  network: Network;\n  mint: string | null;\n  setMint: (mintLabel: string) => void;\n  setDepositor: (pk: PublicKey) => void;\n  setRewardDisplayAmount: (n: number) => void;\n  setStartTs?: (n: number) => void;\n  setEndTs?: (n: number) => void;\n  periodCount?: number;\n  setPeriodCount?: (p: number) => void;\n  expiryTs: number | null;\n  setExpiryTs: (ts: number) => void;\n  onCancel: () => void;\n  onClick: () => void;\n  isSendEnabled: boolean;\n};\n\nfunction DropVendorForm(props: DropVendorFormProps) {\n  const {\n    network,\n    mint,\n    setDepositor,\n    setMint,\n    setRewardDisplayAmount,\n    setStartTs,\n    setEndTs,\n    periodCount,\n    setPeriodCount,\n    expiryTs,\n    setExpiryTs,\n    onCancel,\n    onClick,\n    isSendEnabled,\n  } = props;\n  const mintOptions: { label: string; publicKey: PublicKey }[] = Object.keys(\n    network.mints,\n  ).map(label => {\n    return {\n      label,\n      publicKey: network.mints[label],\n    };\n  });\n\n  return (\n    <>\n      <div>\n        <div style={{ display: 'flex', marginTop: '10px' }}>\n          <div style={{ flex: 1 }}>\n            <OwnedTokenAccountsSelect\n              style={{ height: '100%' }}\n              mint={mint === null ? undefined : network.mints[mint]}\n              onChange={(f: PublicKey) => setDepositor(f)}\n            />\n            <FormHelperText>Account to send from</FormHelperText>\n          </div>\n          <div>\n            <FormControl\n              variant=\"outlined\"\n              style={{ width: '200px', marginLeft: '10px', marginTop: '10px' }}\n            >\n              <InputLabel>Mint</InputLabel>\n              <Select\n                value={mint}\n                onChange={e => setMint(e.target.value as string)}\n                label=\"Mint\"\n              >\n                {mintOptions.map(m => (\n                  <MenuItem value={m.label}>{m.label.toUpperCase()}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n          <div>\n            <TextField\n              style={{ marginLeft: '10px', marginTop: '10px' }}\n              id=\"outlined-number\"\n              label=\"Amount\"\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              variant=\"outlined\"\n              onChange={e =>\n                setRewardDisplayAmount(parseFloat(e.target.value) as number)\n              }\n              InputProps={{ inputProps: { min: 0 } }}\n            />\n          </div>\n        </div>\n        {setEndTs !== undefined && setStartTs !== undefined && (\n          <>\n            <div style={{ display: 'flex', marginTop: '37px' }}>\n              <div style={{ flex: 1 }}>\n                <TextField\n                  fullWidth\n                  label=\"Start date\"\n                  type=\"datetime-local\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  onChange={e => {\n                    const d = new Date(e.target.value);\n                    setStartTs(d.getTime() / 1000);\n                  }}\n                />\n                <FormHelperText>Date vesting begins</FormHelperText>\n              </div>\n            </div>\n            <div style={{ flex: 1, marginTop: '20px' }}>\n              <TextField\n                fullWidth\n                label=\"End date\"\n                type=\"datetime-local\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange={e => {\n                  const d = new Date(e.target.value);\n                  setEndTs(d.getTime() / 1000);\n                }}\n              />\n              <FormHelperText>\n                Date the vesting account is fully vested\n              </FormHelperText>\n            </div>\n            <div>\n              <FormControl fullWidth>\n                <TextField\n                  style={{ marginTop: '37px' }}\n                  id=\"outlined-number\"\n                  label=\"Period Count\"\n                  type=\"number\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  variant=\"outlined\"\n                  value={periodCount}\n                  onChange={e =>\n                    setPeriodCount!(parseInt(e.target.value) as number)\n                  }\n                  InputProps={{ inputProps: { min: 1 } }}\n                />\n              </FormControl>\n            </div>\n          </>\n        )}\n        <div style={{ marginTop: '37px', display: 'flex' }}>\n          <div\n            style={{\n              flex: 1,\n              height: '100%',\n              marginRight: '10px',\n            }}\n          >\n            <TextField\n              fullWidth\n              label=\"Expiry date\"\n              type=\"datetime-local\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={e => {\n                const d = new Date(e.target.value);\n                setExpiryTs(d.getTime() / 1000);\n              }}\n            />\n            <FormHelperText>\n              Date after which the account owner dropping rewards can withdraw\n              all unclaimed rewards.\n            </FormHelperText>\n          </div>\n          <div style={{ marginTop: '26px' }}>\n            <TextField\n              style={{ height: '100%' }}\n              disabled\n              placeholder=\"Expiry Unix timestamp\"\n              fullWidth\n              value={expiryTs}\n            />\n          </div>\n        </div>\n      </div>\n      <DialogActions>\n        <Button onClick={onCancel}>Cancel</Button>\n        <Button\n          onClick={onClick}\n          type=\"submit\"\n          color=\"primary\"\n          disabled={!isSendEnabled}\n        >\n          Send\n        </Button>\n      </DialogActions>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport BN from 'bn.js';\nimport styled from 'styled-components';\nimport LockIcon from '@material-ui/icons/Lock';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { TransitionProps } from '@material-ui/core/transitions';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport Slide from '@material-ui/core/Slide';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport { SYSVAR_RENT_PUBKEY, PublicKey, SystemProgram } from '@solana/web3.js';\nimport { TokenInstructions } from '@project-serum/serum';\nimport { getTokenAccount } from '@project-serum/common';\nimport { useWallet } from '../../components/common/WalletProvider';\nimport OwnedTokenAccountsSelect from '../../components/common/OwnedTokenAccountsSelect';\nimport { ViewTransactionOnExplorerButton } from '../../components/common/Notification';\nimport RegistrarSelect from './RegistrarSelect';\nimport { State as StoreState, ProgramAccount } from '../../store/reducer';\nimport { ActionType } from '../../store/actions';\nimport * as bootstrap from './BootstrapProvider';\nimport Me from '../Me';\nimport {\n  memberSigner,\n  memberSeed,\n  createBalanceSandbox,\n} from '../../utils/registry';\nimport { vestingSigner } from '../../utils/lockup';\nimport Stake from '../Stake';\nimport Rewards from '../rewards/Rewards';\nimport VestingAccountsSelect from './VestingAccountsSelect';\nimport { toDisplayLabel, fromDisplay } from '../../utils/tokens';\n\nenum TabModel {\n  Me,\n  Stake,\n  Rewards,\n  Lockup,\n}\n\nexport default function MyNode() {\n  const [tab, setTab] = useState(TabModel.Me);\n  return (\n    <div>\n      <MyNodeBanner setTab={setTab} />\n      <Container fixed maxWidth=\"md\" style={{ flex: 1, display: 'flex' }}>\n        {tab === TabModel.Me && <Me />}\n        {tab === TabModel.Stake && <Stake />}\n        {tab === TabModel.Rewards && <Rewards />}\n      </Container>\n    </div>\n  );\n}\n\ntype MyNodeBannerProps = {\n  setTab: (t: TabModel) => void;\n};\n\nfunction MyNodeBanner(props: MyNodeBannerProps) {\n  const [tab, setTab] = useState(TabModel.Me);\n  const { member, registrar, registrarAccount } = useSelector(\n    (state: StoreState) => {\n      return {\n        member: state.registry.member,\n        registrar: state.registry.registrar,\n        registrarAccount: state.accounts[state.registry.registrar.toString()],\n      };\n    },\n  );\n  const [showDepositDialog, setShowDepositDialog] = useState(false);\n  const [showWithdrawDialog, setShowWithdrawDialog] = useState(false);\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const { wallet, registryClient } = useWallet();\n  const dispatch = useDispatch();\n\n  const createStakeAccount = async () => {\n    enqueueSnackbar('Creating stake account', {\n      variant: 'info',\n    });\n    const seed = await memberSeed(registrar);\n    const member = await PublicKey.createWithSeed(\n      wallet.publicKey,\n      seed,\n      registryClient.programId,\n    );\n    const { publicKey, nonce } = await memberSigner(\n      registryClient.programId,\n      registrar,\n      member,\n    );\n    const memberSignerPublicKey = publicKey;\n\n    const [mainTx, balances] = await createBalanceSandbox(\n      registryClient.provider,\n      registrarAccount,\n      memberSignerPublicKey,\n    );\n    const [lockedTx, balancesLocked] = await createBalanceSandbox(\n      registryClient.provider,\n      registrarAccount,\n      memberSignerPublicKey,\n    );\n    const tx = registryClient.transaction.createMember(nonce, {\n      accounts: {\n        registrar: registrar,\n        member: member,\n        beneficiary: wallet.publicKey,\n        memberSigner: memberSignerPublicKey,\n        balances,\n        balancesLocked,\n        tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n        rent: SYSVAR_RENT_PUBKEY,\n      },\n      instructions: [\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: wallet.publicKey,\n          newAccountPubkey: member,\n          basePubkey: wallet.publicKey,\n          seed,\n          lamports: await registryClient.provider.connection.getMinimumBalanceForRentExemption(\n            registryClient.account.member.size,\n          ),\n          space: registryClient.account.member.size,\n          programId: registryClient.programId,\n        }),\n      ],\n    });\n    const signers: Account[] = [];\n    const allTxs = [mainTx, lockedTx, { tx, signers }];\n    // @ts-ignore\n    let txSigs = await registryClient.provider.sendAll(allTxs, {\n      commitment: 'recent',\n      preflightCommitment: 'recent',\n      skipPreflight: true,\n    });\n    console.log('Accounts created with transactions:', txSigs);\n\n    const memberAccount = await registryClient.account.member(member);\n    const memberProgramAccount = {\n      publicKey: member,\n      account: memberAccount,\n    };\n    // Add the new member to the store.\n    dispatch({\n      type: ActionType.AccountAdd,\n      item: {\n        account: memberProgramAccount,\n      },\n    });\n\n    // Populate the store with all of the member's accounts.\n    await bootstrap.fetchAndDispatchMemberAccounts(\n      memberProgramAccount,\n      dispatch,\n      registryClient.provider.connection,\n    );\n\n    // Subscribe to any updates to the member.\n    bootstrap.subscribeMember(memberProgramAccount, registryClient, dispatch);\n\n    // Tell the UI that our member is ready.\n    dispatch({\n      type: ActionType.RegistrySetMember,\n      item: {\n        member,\n      },\n    });\n\n    closeSnackbar();\n    enqueueSnackbar(`Stake account created ${member.toString()}`, {\n      variant: 'success',\n    });\n  };\n\n  const HoverSpan = styled.span`\n    :hover {\n      cursor: pointer;\n    }\n  `;\n\n  return (\n    <>\n      <div\n        style={{\n          backgroundColor: '#fff',\n          paddingTop: '24px',\n          borderBottom: 'solid 1pt #ccc',\n        }}\n      >\n        <Container\n          fixed\n          maxWidth=\"md\"\n          style={{\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-between',\n          }}\n        >\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <div>\n              <Typography variant=\"h4\" style={{ marginBottom: '10px' }}>\n                My Stake\n              </Typography>\n            </div>\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                flexDirection: 'column',\n              }}\n            >\n              <RegistrarSelect />\n            </div>\n          </div>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n            }}\n          >\n            <div>\n              <Typography>\n                {member !== undefined ? (\n                  member.toString()\n                ) : (\n                  <>\n                    Account not found. Please{' '}\n                    <HoverSpan\n                      onClick={() => {\n                        createStakeAccount().catch(err => {\n                          console.error(err);\n                          enqueueSnackbar(\n                            `Error creating stake account: ${err.toString()}`,\n                            {\n                              variant: 'error',\n                            },\n                          );\n                        });\n                      }}\n                      style={{\n                        color: 'black',\n                        fontWeight: 'bold',\n                        textDecoration: 'underline',\n                      }}\n                    >\n                      create\n                    </HoverSpan>{' '}\n                    a stake account.\n                  </>\n                )}\n              </Typography>\n            </div>\n            <div>\n              <div>\n                <Button\n                  disabled={member === undefined}\n                  onClick={() => setShowDepositDialog(true)}\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  style={{ marginRight: '10px' }}\n                >\n                  <ArrowDownwardIcon style={{ fontSize: '20px' }} />\n                  <Typography style={{ marginLeft: '5px', marginRight: '5px' }}>\n                    Deposit\n                  </Typography>\n                </Button>\n                <Button\n                  disabled={member === undefined}\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={() => setShowWithdrawDialog(true)}\n                >\n                  <ArrowUpwardIcon style={{ fontSize: '20px' }} />\n                  <Typography style={{ marginLeft: '5px', marginRight: '5px' }}>\n                    Withdraw\n                  </Typography>\n                </Button>\n              </div>\n            </div>\n          </div>\n        </Container>\n        <div\n          style={{\n            maxWidth: '960px',\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            paddingLeft: '24px',\n            paddingRight: '24px',\n            marginTop: '10px',\n          }}\n        >\n          <Tabs\n            value={tab}\n            onChange={(_e, t) => {\n              setTab(t);\n              props.setTab(t);\n            }}\n          >\n            <Tab value={TabModel.Me} label=\"Me\" />\n            <Tab value={TabModel.Stake} label=\"Stake\" />\n            <Tab value={TabModel.Rewards} label=\"Rewards\" />\n          </Tabs>\n        </div>\n      </div>\n      {member !== undefined && (\n        <>\n          <DepositDialog\n            open={showDepositDialog}\n            onClose={() => setShowDepositDialog(false)}\n          />\n          <WithdrawDialog\n            open={showWithdrawDialog}\n            onClose={() => setShowWithdrawDialog(false)}\n          />\n        </>\n      )}\n    </>\n  );\n}\n\ntype DepositDialogProps = {\n  open: boolean;\n  onClose: () => void;\n};\n\nfunction DepositDialog(props: DepositDialogProps) {\n  const { open, onClose } = props;\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const { registryClient, lockupClient } = useWallet();\n  const dispatch = useDispatch();\n  const {\n    registrar,\n    member,\n    memberAccount,\n    mintAccount,\n    accounts,\n  } = useSelector((state: StoreState) => {\n    let memberAccount = undefined;\n    if (state.registry.member) {\n      memberAccount = state.accounts[state.registry.member.toString()];\n    }\n    const registrarAccount =\n      state.accounts[state.registry.registrar.toString()];\n    const registrar: ProgramAccount = {\n      publicKey: state.registry.registrar,\n      account: registrarAccount,\n    };\n    return {\n      registrar,\n      memberAccount,\n      member: state.registry.member,\n      mintAccount: state.accounts[registrar.account.mint.toString()],\n      accounts: state.accounts,\n    };\n  });\n  return (\n    <TransferDialog\n      deposit={true}\n      title={'Deposit'}\n      contextText={'Select the amount to deposit'}\n      open={open}\n      onClose={onClose}\n      onTransfer={async (\n        from: PublicKey,\n        displayAmount: number,\n        isLocked: boolean,\n      ) => {\n        const amount = fromDisplay(displayAmount, mintAccount.decimals);\n        enqueueSnackbar(\n          `Depositing ${displayAmount} ${toDisplayLabel(\n            registrar.account.mint,\n          )} from ${from.toString()}`,\n          {\n            variant: 'info',\n          },\n        );\n        const tx = await (async () => {\n          if (isLocked) {\n            const relayData = registryClient.coder.instruction.encode(\n              'deposit_locked',\n              {\n                amount,\n              },\n            );\n            const vesting = accounts[from.toString()];\n            const _memberSigner = (\n              await memberSigner(\n                registryClient.programId,\n                registrar.publicKey,\n                member!,\n              )\n            ).publicKey;\n            const _vestingSigner = (\n              await vestingSigner(lockupClient.programId, from)\n            ).publicKey;\n            const relayAccounts = [\n              {\n                // @ts-ignore\n                pubkey: await registryClient.state.address(),\n                isWritable: false,\n                isSigner: false,\n              },\n              {\n                pubkey: registrar.publicKey,\n                isWritable: false,\n                isSigner: false,\n              },\n              { pubkey: member!, isWritable: false, isSigner: false },\n              {\n                pubkey: registryClient.provider.wallet.publicKey,\n                isWritable: false,\n                isSigner: true,\n              },\n            ];\n            const tx = await lockupClient.rpc.whitelistWithdraw(\n              relayData,\n              amount,\n              {\n                accounts: {\n                  transfer: {\n                    // @ts-ignore\n                    lockup: await lockupClient.state.address(),\n                    beneficiary: registryClient.provider.wallet.publicKey,\n                    whitelistedProgram: registryClient.programId,\n                    vesting: from,\n                    vault: vesting.vault,\n                    vestingSigner: _vestingSigner,\n                    tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n                    whitelistedProgramVault: memberAccount.balancesLocked.vault,\n                    whitelistedProgramVaultAuthority: _memberSigner,\n                  },\n                },\n                remainingAccounts: relayAccounts,\n              },\n            );\n\n            // Update the store with the updated account.\n            const updatedVestingAccount = await lockupClient.account.vesting(\n              from,\n            );\n            dispatch({\n              type: ActionType.LockupUpdateVesting,\n              item: {\n                vesting: {\n                  publicKey: from,\n                  account: updatedVestingAccount,\n                },\n              },\n            });\n\n            return tx;\n          } else {\n            const tx = await registryClient.rpc.deposit(amount, {\n              accounts: {\n                depositor: from,\n                depositorAuthority: registryClient.provider.wallet.publicKey,\n                tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n                vault: memberAccount.balances.vault,\n                beneficiary: registryClient.provider.wallet.publicKey,\n                member: member,\n              },\n            });\n\n            const tokenAccount = await getTokenAccount(\n              registryClient.provider,\n              from,\n            );\n            dispatch({\n              type: ActionType.CommonOwnedTokenAccountsUpdate,\n              item: {\n                account: {\n                  publicKey: from,\n                  account: tokenAccount,\n                },\n              },\n            });\n\n            return tx;\n          }\n        })();\n        closeSnackbar();\n        enqueueSnackbar(`Deposit complete`, {\n          variant: 'success',\n          action: <ViewTransactionOnExplorerButton signature={tx as string} />,\n        });\n        onClose();\n      }}\n    />\n  );\n}\n\ntype WithdrawDialogProps = DepositDialogProps;\n\nfunction WithdrawDialog(props: WithdrawDialogProps) {\n  const { open, onClose } = props;\n  const { registryClient, lockupClient } = useWallet();\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const dispatch = useDispatch();\n  const {\n    registrar,\n    registrarAccount,\n    member,\n    memberAccount,\n    mintAccount,\n    accounts,\n  } = useSelector((state: StoreState) => {\n    let memberAccount = undefined;\n    if (state.registry.member) {\n      memberAccount = state.accounts[state.registry.member.toString()];\n    }\n    const registrarAccount =\n      state.accounts[state.registry.registrar.toString()];\n    return {\n      registrar: state.registry.registrar,\n      registrarAccount,\n      member: state.registry.member,\n      memberAccount,\n      mintAccount: state.accounts[registrarAccount.mint.toString()],\n      accounts: state.accounts,\n    };\n  });\n  return (\n    <TransferDialog\n      title={'Withdraw'}\n      contextText={'Select the amount to withdraw'}\n      open={open}\n      onClose={onClose}\n      onTransfer={async (\n        from: PublicKey,\n        displayAmount: number,\n        isLocked: boolean,\n      ) => {\n        const amount = fromDisplay(displayAmount, mintAccount.decimals);\n        enqueueSnackbar(\n          `Withdrawing ${displayAmount} ${toDisplayLabel(\n            registrarAccount.mint,\n          )} to ${from.toString()}`,\n          {\n            variant: 'info',\n          },\n        );\n        const tx = await (async () => {\n          const _memberSigner = await memberSigner(\n            registryClient.programId,\n            registrar,\n            member!,\n          );\n          if (isLocked) {\n            const relayData = registryClient.coder.instruction.encode(\n              'withdraw_locked',\n              {\n                amount,\n              },\n            );\n            const vesting = accounts[from.toString()];\n            const _memberSigner = (\n              await memberSigner(registryClient.programId, registrar, member!)\n            ).publicKey;\n            const _vestingSigner = (\n              await vestingSigner(lockupClient.programId, from)\n            ).publicKey;\n            const relayAccounts = [\n              {\n                // @ts-ignore\n                pubkey: await registryClient.state.address(),\n                isWritable: false,\n                isSigner: false,\n              },\n              { pubkey: registrar, isWritable: false, isSigner: false },\n              { pubkey: member!, isWritable: false, isSigner: false },\n              {\n                pubkey: registryClient.provider.wallet.publicKey,\n                isWritable: false,\n                isSigner: true,\n              },\n            ];\n            const tx = await lockupClient.rpc.whitelistDeposit(relayData, {\n              accounts: {\n                transfer: {\n                  // @ts-ignore\n                  lockup: await lockupClient.state.address(),\n                  beneficiary: registryClient.provider.wallet.publicKey,\n                  whitelistedProgram: registryClient.programId,\n                  vesting: from,\n                  vault: vesting.vault,\n                  vestingSigner: _vestingSigner,\n                  tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n                  whitelistedProgramVault: memberAccount.balancesLocked.vault,\n                  whitelistedProgramVaultAuthority: _memberSigner,\n                },\n              },\n              remainingAccounts: relayAccounts,\n            });\n\n            // Update the store with the updated account.\n            const updatedVestingAccount = await lockupClient.account.vesting(\n              from,\n            );\n            dispatch({\n              type: ActionType.LockupUpdateVesting,\n              item: {\n                vesting: {\n                  publicKey: from,\n                  account: updatedVestingAccount,\n                },\n              },\n            });\n\n            return tx;\n          } else {\n            const tx = await registryClient.rpc.withdraw(amount, {\n              accounts: {\n                registrar,\n                member,\n                beneficiary: registryClient.provider.wallet.publicKey,\n                vault: memberAccount.balances.vault,\n                memberSigner: _memberSigner.publicKey,\n                depositor: from,\n                tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n              },\n            });\n\n            const tokenAccount = await getTokenAccount(\n              registryClient.provider,\n              from,\n            );\n            dispatch({\n              type: ActionType.CommonOwnedTokenAccountsUpdate,\n              item: {\n                account: {\n                  publicKey: from,\n                  account: tokenAccount,\n                },\n              },\n            });\n\n            return tx;\n          }\n        })();\n\n        closeSnackbar();\n        enqueueSnackbar(`Withdraw complete`, {\n          variant: 'success',\n          action: <ViewTransactionOnExplorerButton signature={tx as string} />,\n        });\n        onClose();\n      }}\n    />\n  );\n}\n\ntype TransferDialogProps = {\n  title: string;\n  contextText: string;\n  open: boolean;\n  deposit?: boolean;\n  onClose: () => void;\n  onTransfer: (\n    from: PublicKey,\n    amount: number,\n    isLocked: boolean,\n  ) => Promise<void>;\n};\n\nfunction TransferDialog(props: TransferDialogProps) {\n  const { mint, mintAccount } = useSelector((state: StoreState) => {\n    const registrar = state.accounts[state.registry.registrar.toString()];\n    const mint = registrar ? registrar.mint : undefined;\n    return {\n      mint,\n      mintAccount: state.accounts[registrar.mint.toString()],\n    };\n  });\n  const { enqueueSnackbar } = useSnackbar();\n  const { open, onClose, onTransfer, title, contextText, deposit } = props;\n  const [displayAmount, setDisplayAmount] = useState<null | number>(null);\n  const [from, setFrom] = useState<null | PublicKey>(null);\n  const [vesting, setVesting] = useState<null | PublicKey>(null);\n  const [maxDisplayAmount, setMaxDisplayAmount] = useState<null | number>(null);\n  const [isLocked, setIsLocked] = useState(false);\n  const submitBtnDisabled =\n    (isLocked ? !vesting : !from) ||\n    !displayAmount ||\n    !maxDisplayAmount ||\n    displayAmount > maxDisplayAmount;\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={onClose}\n        fullWidth\n      >\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <DialogTitle>{title}</DialogTitle>\n          <div style={{ display: 'flex', paddingRight: '24px' }}>\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                flexDirection: 'column',\n              }}\n            >\n              <LockIcon />\n            </div>\n            <FormControlLabel\n              style={{ marginLeft: '0px', marginRight: '0px' }}\n              control={\n                <Switch\n                  checked={isLocked}\n                  onChange={() => setIsLocked(!isLocked)}\n                />\n              }\n              label=\"\"\n            />\n          </div>\n        </div>\n        <DialogContent>\n          <div style={{ display: 'flex' }}>\n            <div style={{ flex: 1 }}>\n              <TextField\n                style={{ width: '100%' }}\n                id=\"outlined-number\"\n                label=\"Amount\"\n                type=\"number\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n                onChange={e =>\n                  setDisplayAmount(parseFloat(e.target.value) as number)\n                }\n                InputProps={{\n                  inputProps: { min: 0, max: maxDisplayAmount ?? 0 },\n                }}\n              />\n              <FormHelperText>{contextText}</FormHelperText>\n            </div>\n          </div>\n          <FormControl fullWidth>\n            {!isLocked ? (\n              <>\n                <OwnedTokenAccountsSelect\n                  variant=\"outlined\"\n                  decimals={mintAccount.decimals}\n                  mint={mint}\n                  onChange={(f: PublicKey, _maxDisplayAmount: BN) => {\n                    setFrom(f);\n                    // TODO: set an actual limit for the withdrawal UI (i.e.\n                    //       what's currently in the vault). Currently not\n                    //       done since we dont' have websocket connections\n                    //       for each of the users accounts. However we\n                    //       still use the \"max\" amount for display vesting\n                    //       accounts.\n                    setMaxDisplayAmount(2 ** 53);\n                  }}\n                />\n                <FormHelperText>\n                  Token account to transfer to/from\n                </FormHelperText>\n              </>\n            ) : (\n              <>\n                <VestingAccountsSelect\n                  variant=\"outlined\"\n                  mint={mint}\n                  decimals={mintAccount.decimals}\n                  deposit={deposit}\n                  onChange={(v: PublicKey, maxDisplayAmount: BN) => {\n                    setVesting(v);\n                    setMaxDisplayAmount(maxDisplayAmount.toNumber());\n                  }}\n                />\n                <FormHelperText>\n                  Vesting account to transfer to/from your <b>locked</b>{' '}\n                  balances\n                </FormHelperText>\n              </>\n            )}\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            //@ts-ignore\n            onClick={() => {\n              onTransfer(\n                isLocked ? vesting! : from!,\n                displayAmount!,\n                isLocked,\n              ).catch(err => {\n                console.error(err);\n                enqueueSnackbar(`Error transferring funds: ${err.toString()}`, {\n                  variant: 'error',\n                });\n              });\n            }}\n            color=\"primary\"\n            disabled={submitBtnDisabled}\n          >\n            {title}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>,\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport {\n  Account,\n  PublicKey,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_CLOCK_PUBKEY,\n} from '@solana/web3.js';\nimport { TokenInstructions } from '@project-serum/serum';\nimport { createTokenAccountInstrs } from '@project-serum/common';\nimport { useWallet } from '../../components/common/WalletProvider';\nimport * as notification from '../common/Notification';\nimport OwnedTokenAccountsSelect from '../common/OwnedTokenAccountsSelect';\nimport { RewardListItemViewModel } from './RewardsList';\nimport { ActionType } from '../../store/actions';\nimport { State as StoreState } from '../../store/reducer';\nimport { vendorSigner } from '../../utils/registry';\nimport { vestingSigner } from '../../utils/lockup';\n\ntype ClaimRewardButtonProps = {\n  rli: RewardListItemViewModel;\n};\n\nexport default function ClaimRewardButton(props: ClaimRewardButtonProps) {\n  const { registryClient, lockupClient } = useWallet();\n  const { member, registrar } = useSelector((state: StoreState) => {\n    const registrar = {\n      publicKey: state.registry.registrar,\n      account: state.accounts[state.registry.registrar.toString()],\n    };\n    const member = state.registry.member\n      ? {\n          publicKey: state.registry.member,\n          account: state.accounts[state.registry.member.toString()],\n        }\n      : undefined;\n    return {\n      registrar,\n      member,\n    };\n  });\n  const { rli } = props;\n  const dispatch = useDispatch();\n  const snack = useSnackbar();\n  const [token, setToken] = useState<null | PublicKey>(null);\n\n  // On click.\n  const clickHandler = async (): Promise<void> => {\n    notification.withTx(\n      snack,\n      `Processing vendor reward ${rli!.vendor!.publicKey.toString()}`,\n      'Reward processed',\n      async () => {\n        const vendor = await registryClient.account.rewardVendor(\n          rli.vendor!.publicKey,\n        );\n        const _vendorSigner = await vendorSigner(\n          registryClient.programId,\n          registrar.publicKey,\n          rli.vendor!.publicKey,\n        );\n        if (rli!.reward.locked) {\n          const vendoredVesting = new Account();\n          const vendoredVestingVault = new Account();\n          const vendoredVestingSigner = await vestingSigner(\n            lockupClient.programId,\n            vendoredVesting.publicKey,\n          );\n          const remainingAccounts = lockupClient.instruction.createVesting\n            .accounts({\n              vesting: vendoredVesting.publicKey,\n              vault: vendoredVestingVault.publicKey,\n              depositor: vendor.vault,\n              depositorAuthority: _vendorSigner.publicKey,\n              tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n              rent: SYSVAR_RENT_PUBKEY,\n              clock: SYSVAR_CLOCK_PUBKEY,\n            })\n            // Change the signer status on the vendor signer since it's signed by the program, not the\n            // client.\n            .map((meta: any) =>\n              meta.pubkey.equals(_vendorSigner.publicKey)\n                ? { ...meta, isSigner: false }\n                : meta,\n            );\n          const tx = await registryClient.rpc.claimRewardLocked(\n            vendoredVestingSigner.nonce,\n            {\n              accounts: {\n                // @ts-ignore\n                registry: await registryClient.state.address(),\n                lockupProgram: lockupClient.programId,\n                cmn: {\n                  registrar: registrar.publicKey,\n                  member: member!.publicKey,\n                  beneficiary: registryClient.provider.wallet.publicKey,\n                  balances: member!.account.balances,\n                  balancesLocked: member!.account.balancesLocked,\n                  vendor: rli.vendor!.publicKey,\n                  vault: rli.vendor!.account.vault,\n                  vendorSigner: _vendorSigner.publicKey,\n                  tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n                  clock: SYSVAR_CLOCK_PUBKEY,\n                },\n              },\n              remainingAccounts,\n              signers: [vendoredVesting, vendoredVestingVault],\n              instructions: [\n                await lockupClient.account.vesting.createInstruction(\n                  vendoredVesting,\n                ),\n                ...(await createTokenAccountInstrs(\n                  registryClient.provider,\n                  vendoredVestingVault.publicKey,\n                  rli.vendor!.account.mint,\n                  vendoredVestingSigner.publicKey,\n                )),\n              ],\n            },\n          );\n          // Refetch the vesting accounts to update the UI with the new reward.\n          const vestingAccounts = await lockupClient.account.vesting.all(\n            registryClient.provider.wallet.publicKey.toBuffer(),\n          );\n          vestingAccounts.forEach(account => {\n            dispatch({\n              type: ActionType.AccountAdd,\n              item: {\n                account,\n              },\n            });\n          });\n          dispatch({\n            type: ActionType.LockupSetVestings,\n            item: {\n              vestingAccounts: vestingAccounts.map(v => v.publicKey),\n            },\n          });\n          return tx;\n        } else {\n          return await registryClient.rpc.claimReward({\n            accounts: {\n              to: token,\n              cmn: {\n                registrar: registrar.publicKey,\n                member: member!.publicKey,\n                beneficiary: registryClient.provider.wallet.publicKey,\n                balances: member!.account.balances,\n                balancesLocked: member!.account.balancesLocked,\n\n                vendor: rli.vendor!.publicKey,\n                vault: vendor.vault,\n                vendorSigner: _vendorSigner.publicKey,\n\n                tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n                clock: SYSVAR_CLOCK_PUBKEY,\n              },\n            },\n          });\n        }\n      },\n    );\n  };\n\n  return (\n    <>\n      {!rli.reward.locked && (\n        <div>\n          <OwnedTokenAccountsSelect\n            style={{ width: '400px', height: '100%' }}\n            mint={rli.vendor.account.mint}\n            onChange={(f: PublicKey) => setToken(f)}\n          />\n        </div>\n      )}\n      <div style={{ marginLeft: '10px', marginRight: '10px' }}>\n        <Button\n          disabled={rli.reward.unlockedAlloc && token === null}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() =>\n            clickHandler().catch(err => {\n              console.error(err);\n              snack.enqueueSnackbar(\n                `Error ending pending redemption: ${err.toString()}`,\n                {\n                  variant: 'error',\n                },\n              );\n            })\n          }\n        >\n          Process Reward\n        </Button>\n      </div>\n    </>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { useWallet } from '../../components/common/WalletProvider';\nimport { State as StoreState } from '../../store/reducer';\nimport { ActionType } from '../../store/actions';\nimport RewardsList, { RewardListItemViewModel } from './RewardsList';\nimport DropRewardButton from './DropRewardButton';\nimport ClaimRewardButton from './ClaimRewardButton';\nimport { rewardEvents } from '../../utils/registry';\n\nexport default function Rewards() {\n  const { registryClient } = useWallet();\n  const dispatch = useDispatch();\n  const snack = useSnackbar();\n  const ctx = useSelector((state: StoreState) => {\n    const registrar = state.accounts[state.registry.registrar.toString()];\n    const rewardEventQueue = {\n      publicKey: registrar.rewardEventQ,\n      account: state.accounts[registrar.rewardEventQ.toString()],\n    };\n    return {\n      accounts: state.accounts,\n      rewardEventQueue,\n      member: state.registry.member\n        ? {\n            publicKey: state.registry.member,\n            account: state.accounts[state.registry.member.toString()],\n          }\n        : undefined,\n      network: state.common.network,\n    };\n  });\n  const { rewardEventQueue, accounts } = ctx;\n\n  const events = rewardEvents(rewardEventQueue.account);\n\n  // Load any reward vendor accounts that hasn't been loaded already.\n  useEffect(() => {\n    events.forEach(m => {\n      const vendor = accounts[m.vendor.toString()];\n      if (!vendor) {\n        registryClient.account\n          .rewardVendor(m.vendor)\n          .then((account: any) => {\n            dispatch({\n              type: ActionType.AccountAdd,\n              item: {\n                account: { publicKey: m.vendor, account },\n              },\n            });\n          })\n          .catch((err: any) => {\n            console.error(err);\n            snack.enqueueSnackbar(`Error fetching reward vendor`, {\n              variant: 'error',\n            });\n          });\n      }\n    });\n  });\n\n  // All rewards to display.\n  const rewards = events\n    .map((m: any, idx: any) => RewardListItemViewModel.fromMessage(ctx, m, idx))\n    .reverse();\n\n  // Next reward to claim.\n  let nextReward = null;\n  if (rewards.filter(r => r === null).length === 0) {\n    nextReward = rewards\n      .filter(r => r!.needsClaim)\n      .sort((a, b) =>\n        a!.cursor < b!.cursor ? -1 : a!.cursor > b!.cursor ? 1 : 0,\n      )\n      .shift();\n  }\n\n  return (\n    <div style={{ width: '100%', marginTop: '24px' }}>\n      {nextReward && (\n        <Card style={{ marginBottom: '24px' }}>\n          <CardContent>\n            <Typography variant=\"h6\">\n              You were staked during a previous reward. To prove eligibility,\n              click the \"Process\" button until you've processed <b>all</b>{' '}\n              eligible rewards. For unlocked rewards, don't forget to select the\n              address you wish to send your stake reward to.\n            </Typography>\n          </CardContent>\n        </Card>\n      )}\n      <div\n        style={{\n          marginBottom: '10px',\n          display: 'flex',\n          justifyContent: 'space-between',\n        }}\n      >\n        <Typography style={{ fontWeight: 'bold', fontSize: '20px' }}>\n          Reward History\n        </Typography>\n        <div style={{ display: 'flex' }}>\n          {nextReward && <ClaimRewardButton rli={nextReward} />}\n          <DropRewardButton />\n        </div>\n      </div>\n      <div style={{ marginBottom: '16px' }}>\n        <Typography>\n          When rewards are dropped, one must prove one was staked during the\n          time of drop. This means sending a transaction to the staking program\n          to <b>process</b> the reward. For <b>unlocked</b> rewards, select the\n          token address to transfer the reward to. For <b>locked</b> rewards, a\n          locked vesting account will be created and realized to the staker upon\n          unstaking. See the Lockup tab.\n        </Typography>\n      </div>\n      <Paper>\n        <RewardsList rewards={rewards} />\n      </Paper>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport BN from 'bn.js';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { PublicKey } from '@solana/web3.js';\nimport { State as StoreState, ProgramAccount } from '../../store/reducer';\nimport { toDisplay } from '../../utils/tokens';\n\ntype Props = {\n  style?: any;\n  mint?: PublicKey | null;\n  decimals: number;\n  variant?: 'outlined' | 'standard';\n  onChange: (from: PublicKey, maxAmount: BN) => void;\n  deposit?: boolean;\n};\n\nexport default function VestingAccountsSelect(p: Props) {\n  const { mint, decimals, variant, onChange, style, deposit } = p;\n  const vestings: ProgramAccount[] = useSelector((state: StoreState) => {\n    if (!mint) {\n      return [];\n    }\n    return state.lockup.vestings\n      .map(v => {\n        return { publicKey: v, account: state.accounts[v.toString()] };\n      })\n      .filter(v => v.account.mint.equals(mint));\n  });\n  const [fromAccount, setFromAccount] = useState('');\n  return (\n    <Select\n      style={style}\n      variant={variant}\n      fullWidth\n      value={fromAccount}\n      onChange={e => {\n        const pk = e.target.value as string;\n        setFromAccount(pk);\n        const pubkey = new PublicKey(pk);\n        const v = vestings.filter(v => v.publicKey.equals(pubkey)).pop();\n        onChange(pubkey, availableAmount(v!, deposit));\n      }}\n    >\n      {vestings.length === 0 ? (\n        <MenuItem value={''}>No vesting accounts found</MenuItem>\n      ) : (\n        vestings.map(v => {\n          return (\n            <MenuItem value={v.publicKey.toString()}>\n              <div\n                style={{\n                  width: '100%',\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                }}\n              >\n                <div>{`${v.publicKey.toString()}`}</div>\n                <div style={{ float: 'right', color: '#ccc' }}>{`${toDisplay(\n                  availableAmount(v, deposit),\n                  decimals,\n                )}`}</div>\n              </div>\n            </MenuItem>\n          );\n        })\n      )}\n    </Select>\n  );\n}\n\nfunction availableAmount(v: ProgramAccount, deposit?: boolean): BN {\n  return deposit\n    ? v.account.outstanding.sub(v.account.whitelistOwned)\n    : v.account.whitelistOwned;\n}\n","import React from 'react';\nimport MyNode from '../components/common/MyNode';\n\nexport default function MyNodePage() {\n  return <MyNode />;\n}\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport BN from 'bn.js';\nimport {\n  Account,\n  PublicKey,\n  SystemProgram,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_CLOCK_PUBKEY,\n} from '@solana/web3.js';\nimport { TokenInstructions } from '@project-serum/serum';\nimport { createTokenAccountInstrs } from '@project-serum/common';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { State as StoreState } from '../../store/reducer';\nimport { ActionType } from '../../store/actions';\nimport { useWallet } from '../../components/common/WalletProvider';\nimport OwnedTokenAccountsSelect from '../../components/common/OwnedTokenAccountsSelect';\nimport { fromDisplay } from '../../utils/tokens';\nimport { vestingSigner } from '../../utils/lockup';\nimport { ViewTransactionOnExplorerButton } from '../common/Notification';\n\nexport default function NewVestingButton() {\n  const [open, setOpen] = useState(false);\n  return (\n    <>\n      <div onClick={() => setOpen(true)}>\n        <Button variant=\"contained\" color=\"secondary\">\n          New\n        </Button>\n      </div>\n      <NewVestingDialog open={open} onClose={() => setOpen(false)} />\n    </>\n  );\n}\n\ntype NewVestingDialogProps = {\n  open: boolean;\n  onClose: () => void;\n};\n\nfunction NewVestingDialog(props: NewVestingDialogProps) {\n  const { open, onClose } = props;\n  const { network, accounts } = useSelector((state: StoreState) => {\n    return {\n      network: state.common.network,\n      accounts: state.accounts,\n    };\n  });\n\n  const defaultStartDate = new Date().toString();\n  const defaultStartTs = new Date(defaultStartDate).getTime() / 1000;\n  const defaultEndDate = '2027-01-01T12:00';\n  const defaultEndTs = new Date(defaultEndDate).getTime() / 1000;\n\n  const [beneficiary, setBeneficiary] = useState('');\n  const isValidBeneficiary = (() => {\n    try {\n      new PublicKey(beneficiary);\n      return true;\n    } catch (_) {\n      return false;\n    }\n  })();\n  const displayBeneficiaryError = !isValidBeneficiary && beneficiary !== '';\n\n  const [fromAccount, setFromAccount] = useState<null | PublicKey>(null);\n  const [startTimestamp, setStartTimestamp] = useState(defaultStartTs);\n  const [timestamp, setTimestamp] = useState(defaultEndTs);\n  const [periodCount, setPeriodCount] = useState(7);\n  const [displayAmount, setDisplayAmount] = useState<null | number>(null);\n  const { lockupClient } = useWallet();\n  const [isLoading, setIsLoading] = useState(false);\n  const [mint, setMint] = useState<null | PublicKey>(null);\n\n  const { enqueueSnackbar } = useSnackbar();\n  const dispatch = useDispatch();\n\n  const submitBtnEnabled =\n    mint !== null &&\n    fromAccount !== null &&\n    isValidBeneficiary &&\n    displayAmount !== null;\n\n  const createVestingClickHandler = async () => {\n    setIsLoading(true);\n    try {\n      const beneficiaryPublicKey = new PublicKey(beneficiary);\n      const beneficiaryAccount = await lockupClient.provider.connection.getAccountInfo(\n        beneficiaryPublicKey,\n      );\n      if (beneficiaryAccount === null) {\n        enqueueSnackbar('Unable to validate given beneficiary.', {\n          variant: 'error',\n        });\n        setIsLoading(false);\n        return;\n      }\n      if (!beneficiaryAccount.owner.equals(SystemProgram.programId)) {\n        enqueueSnackbar(\n          'The beneficiary must be owned by the System Program.',\n          {\n            variant: 'error',\n          },\n        );\n        setIsLoading(false);\n        return;\n      }\n\n      enqueueSnackbar('Creating vesting acount...', {\n        variant: 'info',\n      });\n\n      const mintAccount = accounts[mint!.toString()];\n      let amount = mintAccount\n        ? fromDisplay(displayAmount!, mintAccount.decimals)\n        : new BN(displayAmount!);\n\n      const vesting = new Account();\n      const vestingVault = new Account();\n      const _vestingSigner = await vestingSigner(\n        lockupClient.programId,\n        vesting.publicKey,\n      );\n\n      let tx = await lockupClient.rpc.createVesting(\n        beneficiaryPublicKey,\n        amount,\n        _vestingSigner.nonce,\n        new BN(startTimestamp),\n        new BN(timestamp),\n        new BN(periodCount),\n        null,\n        {\n          accounts: {\n            vesting: vesting.publicKey,\n            vault: vestingVault.publicKey,\n            depositor: fromAccount,\n            depositorAuthority: lockupClient.provider.wallet.publicKey,\n            tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n            rent: SYSVAR_RENT_PUBKEY,\n            clock: SYSVAR_CLOCK_PUBKEY,\n          },\n          signers: [vesting, vestingVault],\n          instructions: [\n            await lockupClient.account.vesting.createInstruction(vesting),\n            ...(await createTokenAccountInstrs(\n              lockupClient.provider,\n              vestingVault.publicKey,\n              mint!,\n              _vestingSigner.publicKey,\n            )),\n          ],\n        },\n      );\n      // Only add to the local store if the lockup belongs to the current user.\n      if (beneficiaryPublicKey.equals(lockupClient.provider.wallet.publicKey)) {\n        const vestingAccount = await lockupClient.account.vesting(\n          vesting.publicKey,\n        );\n        dispatch({\n          type: ActionType.LockupCreateVesting,\n          item: {\n            vesting: {\n              publicKey: vesting.publicKey,\n              account: vestingAccount,\n            },\n          },\n        });\n      }\n      enqueueSnackbar(`Vesting account created`, {\n        variant: 'success',\n        action: <ViewTransactionOnExplorerButton signature={tx} />,\n      });\n      onClose();\n    } catch (err) {\n      enqueueSnackbar(`Error creating vesting account: ${err.toString()}`, {\n        variant: 'error',\n      });\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} fullWidth maxWidth=\"md\">\n      <DialogTitle>\n        <Typography variant=\"h4\" component=\"h2\">\n          New Vesting Account\n        </Typography>\n      </DialogTitle>\n      <DialogContent>\n        <div>\n          {isLoading && (\n            <div\n              style={{\n                width: '40px',\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                marginBottom: '24px',\n              }}\n            >\n              <CircularProgress\n                style={{ marginLeft: 'auto', marginRight: 'auto' }}\n              />\n            </div>\n          )}\n          <div style={{ display: 'flex', width: '100%' }}>\n            <div>\n              <FormControl variant=\"outlined\" style={{ width: '200px' }}>\n                <InputLabel>Mint</InputLabel>\n                <Select\n                  value={mint ? mint!.toString() : ''}\n                  onChange={e =>\n                    setMint(new PublicKey(e.target.value as string))\n                  }\n                >\n                  {Object.keys(network.mints).map(m => (\n                    <MenuItem value={network.mints[m].toString()}>\n                      {m.toUpperCase()}\n                    </MenuItem>\n                  ))}\n                  {/*<MenuItem value=\"custom\">Custom</MenuItem>*/}\n                </Select>\n              </FormControl>\n            </div>\n            {false && (\n              <div style={{ flex: 1, marginLeft: '10px' }}>\n                <TextField\n                  fullWidth\n                  label=\"Custom mint\"\n                  value={mint ? mint!.toString() : ''}\n                  onChange={e => setMint(new PublicKey(e.target.value))}\n                />\n                <FormHelperText>Mint of the token to lockup</FormHelperText>\n              </div>\n            )}\n          </div>\n          <div>\n            <div style={{ display: 'flex', width: '100%' }}>\n              <div style={{ flex: 1 }}>\n                <FormControl fullWidth>\n                  <InputLabel>From</InputLabel>\n                  <OwnedTokenAccountsSelect\n                    mint={mint}\n                    onChange={(f: PublicKey) => setFromAccount(f)}\n                  />\n                  <FormHelperText>Token account to send from</FormHelperText>\n                </FormControl>\n              </div>\n            </div>\n          </div>\n          <div style={{ marginTop: '24px' }}>\n            <TextField\n              fullWidth\n              error={displayBeneficiaryError}\n              helperText={displayBeneficiaryError && 'Invalid beneficiary'}\n              label=\"Beneficiary\"\n              value={beneficiary}\n              onChange={e => setBeneficiary(e.target.value)}\n            />\n            <FormHelperText>Owner of the new vesting account</FormHelperText>\n          </div>\n          <div\n            style={{\n              marginTop: '24px',\n            }}\n          >\n            {false && (\n              <FormHelperText style={{ color: 'blue' }}>\n                Note: Amounts for custom mints (i.e., not SRM/MSRM) are in their\n                raw, non-decimal form. Make sure to convert before entering into\n                the fields here. For example, if a token has 6 decimals, then\n                multiply your desired amount by 10^6.\n              </FormHelperText>\n            )}\n            <TextField\n              fullWidth\n              label=\"Amount\"\n              type=\"number\"\n              value={displayAmount}\n              InputProps={{ inputProps: { min: 0 } }}\n              onChange={e => setDisplayAmount(parseFloat(e.target.value))}\n            />\n            <FormHelperText>\n              Amount to deposit into the vesting account\n            </FormHelperText>\n          </div>\n          <div\n            style={{\n              marginTop: '24px',\n              display: 'flex',\n            }}\n          >\n            <div style={{ flex: 1, marginRight: '10px' }}>\n              <TextField\n                fullWidth\n                label=\"Start date\"\n                type=\"datetime-local\"\n                defaultValue={defaultStartDate}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange={e => {\n                  const d = new Date(e.target.value);\n                  setStartTimestamp(d.getTime() / 1000);\n                }}\n              />\n              <FormHelperText>Date when vesting begins</FormHelperText>\n            </div>\n            <div>\n              <TextField\n                disabled\n                fullWidth\n                label=\"Unix Timestamp\"\n                value={startTimestamp}\n              />\n            </div>\n          </div>\n          <div\n            style={{\n              marginTop: '24px',\n              display: 'flex',\n            }}\n          >\n            <div style={{ flex: 1, marginRight: '10px' }}>\n              <TextField\n                fullWidth\n                label=\"End date\"\n                type=\"datetime-local\"\n                defaultValue={defaultEndDate}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange={e => {\n                  const d = new Date(e.target.value);\n                  setTimestamp(d.getTime() / 1000);\n                }}\n              />\n              <FormHelperText>Date when all tokens are vested</FormHelperText>\n            </div>\n            <div>\n              <TextField\n                disabled\n                fullWidth\n                label=\"Unix Timestamp\"\n                value={timestamp}\n              />\n            </div>\n          </div>\n          <div\n            style={{\n              marginTop: '24px',\n            }}\n          >\n            <FormControl fullWidth>\n              <TextField\n                id=\"outlined-number\"\n                label=\"Period Count\"\n                type=\"number\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n                value={periodCount}\n                onChange={e =>\n                  setPeriodCount(parseInt(e.target.value) as number)\n                }\n                InputProps={{ inputProps: { min: 1 } }}\n              />\n              <FormHelperText>Number of vesting periods</FormHelperText>\n            </FormControl>\n          </div>\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          color=\"primary\"\n          disabled={!submitBtnEnabled || isLoading}\n          onClick={() => createVestingClickHandler()}\n        >\n          Create\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport ChartistGraph from 'react-chartist';\nimport { useDispatch, useSelector } from 'react-redux';\nimport BN from 'bn.js';\nimport { useSnackbar } from 'notistack';\nimport { FixedScaleAxis, IChartOptions, Interpolation } from 'chartist';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Card from '@material-ui/core/Card';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Link from '@material-ui/core/Link';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Collapse from '@material-ui/core/Collapse';\nimport { PublicKey, SYSVAR_CLOCK_PUBKEY } from '@solana/web3.js';\nimport { TokenInstructions } from '@project-serum/serum';\nimport { ProgramAccount, State as StoreState } from '../../store/reducer';\nimport { Network } from '../../store/config';\nimport { useWallet } from '../common/WalletProvider';\nimport OwnedTokenAccountsSelect from '../../components/common/OwnedTokenAccountsSelect';\nimport { withTx } from '../../components/common/Notification';\nimport { ActionType } from '../../store/actions';\nimport { getImage } from '../../components/common/RegistrarSelect';\nimport { useTokenInfos, toDisplay, toDisplayLabel } from '../../utils/tokens';\nimport {\n  vestingSigner,\n  availableForWithdrawal as _availableForWithdrawal,\n} from '../../utils/lockup';\n\ntype VestingAccountCardProps = {\n  network: Network;\n  vesting: ProgramAccount;\n};\n\nexport default function VestingAccountCard(props: VestingAccountCardProps) {\n  const { vesting, network } = props;\n  const { lockupClient, registryClient } = useWallet();\n  const { enqueueSnackbar } = useSnackbar();\n  const tokenInfos = useTokenInfos();\n  const dispatch = useDispatch();\n  const { accounts, member, mintAccount } = useSelector((state: StoreState) => {\n    return {\n      accounts: state.accounts,\n      member: state.registry.member\n        ? {\n            publicKey: state.registry.member,\n            account: state.accounts[state.registry.member.toString()],\n          }\n        : undefined,\n      mintAccount: state.accounts[vesting.account.mint.toString()],\n    };\n  });\n  const [expanded, setExpanded] = useState(false);\n  const [hover, setHover] = useState(false);\n\n  // Whitelisted mints only for now.\n  const isCustomMint = false;\n\n  let mint = accounts[vesting.account.mint.toString()];\n  const displayFn = mint\n    ? (input: BN) => {\n        return toDisplay(input, mint.decimals);\n      }\n    : (input: BN) => input.toString();\n\n  const outstandingLabel = `${displayFn(\n    vesting.account.outstanding,\n  )} ${toDisplayLabel(vesting.account.mint)}`;\n  const startTs = vesting.account.startTs;\n  const endTs = vesting.account.endTs;\n\n  const tsOverflow = endTs.sub(startTs).mod(vesting.account.periodCount);\n  const shiftedStartTs = startTs.sub(tsOverflow);\n\n  const period = endTs.sub(shiftedStartTs).div(vesting.account.periodCount);\n\n  // Make the horizontal axis evenly spaced.\n  //\n  // Vesting dates assuming we stretch the start date back in time (so that the\n  // periods are of even length).\n  const vestingDates = [\n    ...Array(vesting.account.periodCount.toNumber() + 1),\n  ].map((_, idx) => {\n    return formatDate(\n      new Date((shiftedStartTs.toNumber() + idx * period.toNumber()) * 1000),\n    );\n  });\n  // Now push the start window forward to the real start date, making the first period shorter.\n  vestingDates[0] = formatDate(new Date(startTs.toNumber() * 1000));\n\n  // Now do the same thing on the vertical axis.\n  const rewardOverflow = vesting.account.startBalance.mod(\n    vesting.account.periodCount,\n  );\n  const rewardPerPeriod = vesting.account.startBalance\n    .sub(rewardOverflow)\n    .div(vesting.account.periodCount)\n    .toNumber();\n  const cumulativeVesting = [...Array(vestingDates.length)].map(() => 0);\n  cumulativeVesting[1] = rewardPerPeriod + rewardOverflow.toNumber();\n  for (let k = 2; k < cumulativeVesting.length; k += 1) {\n    cumulativeVesting[k] = cumulativeVesting[k - 1] + rewardPerPeriod;\n  }\n\n  const startLabel = formatDate(\n    new Date(vesting.account.startTs.toNumber() * 1000),\n  );\n  const endLabel = formatDate(\n    new Date(vesting.account.endTs.toNumber() * 1000),\n  );\n  const urlSuffix = `?cluster=${network.explorerClusterSuffix}`;\n\n  const [\n    availableForWithdrawal,\n    setAvailableForWithdrawal,\n  ] = useState<null | BN>(null);\n  const [withdrawalAccount, setWithdrawalAccount] = useState<null | PublicKey>(\n    null,\n  );\n\n  useEffect(() => {\n    _availableForWithdrawal(lockupClient, vesting.publicKey)\n      .then((amount: BN) => {\n        setAvailableForWithdrawal(amount);\n      })\n      .catch((err: any) => {\n        console.error(err);\n        enqueueSnackbar(\n          `Error fetching available for withdrawal: ${err.toString()}`,\n          {\n            variant: 'error',\n          },\n        );\n      });\n  }, [lockupClient, vesting, enqueueSnackbar]);\n  const snack = useSnackbar();\n\n  const withdrawEnabled =\n    withdrawalAccount !== null &&\n    availableForWithdrawal !== null &&\n    availableForWithdrawal.gtn(0);\n  const withdraw = async () => {\n    await withTx(\n      snack,\n      'Withdrawing locked tokens',\n      'Tokens unlocked',\n      async () => {\n        const remainingAccounts = (() => {\n          if (vesting.account.realizor) {\n            if (!member) {\n              // Should never be thrown.\n              throw new Error('Member account not found');\n            }\n            return [\n              {\n                pubkey: registryClient.programId,\n                isSigner: false,\n                isWritable: false,\n              },\n              { pubkey: member.publicKey, isSigner: false, isWritable: false },\n              {\n                pubkey: member.account.balances.spt,\n                isSigner: false,\n                isWritable: false,\n              },\n              {\n                pubkey: member.account.balancesLocked.spt,\n                isSigner: false,\n                isWritable: false,\n              },\n            ];\n          } else {\n            return undefined;\n          }\n        })();\n        const tx = await lockupClient.rpc.withdraw(availableForWithdrawal!, {\n          accounts: {\n            vesting: vesting.publicKey,\n            beneficiary: lockupClient.provider.wallet.publicKey,\n            token: withdrawalAccount!,\n            vault: vesting.account.vault,\n            vestingSigner: (\n              await vestingSigner(lockupClient.programId, vesting.publicKey)\n            ).publicKey,\n            tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n            clock: SYSVAR_CLOCK_PUBKEY,\n          },\n          remainingAccounts,\n        });\n        const newVesting = await lockupClient.account.vesting(\n          vesting.publicKey,\n        );\n        dispatch({\n          type: ActionType.LockupUpdateVesting,\n          item: {\n            vesting: {\n              publicKey: vesting.publicKey,\n              account: newVesting,\n            },\n          },\n        });\n        return tx;\n      },\n    );\n  };\n  const rows = [\n    {\n      field: 'Projected unlock',\n      value:\n        availableForWithdrawal === null\n          ? null\n          : displayFn(availableForWithdrawal!),\n    },\n    {\n      field: 'Locked outstanding',\n      value: displayFn(vesting.account.outstanding),\n    },\n    {\n      field: 'Current balance',\n      value: displayFn(\n        vesting.account.outstanding.sub(vesting.account.whitelistOwned),\n      ),\n    },\n    { field: 'Initial lockup', value: displayFn(vesting.account.startBalance) },\n    {\n      field: 'Amount unlocked',\n      value: displayFn(\n        vesting.account.startBalance.sub(vesting.account.outstanding),\n      ),\n    },\n    {\n      field: 'Whitelist owned',\n      value: displayFn(vesting.account.whitelistOwned),\n    },\n    { field: 'Period count', value: vesting.account.periodCount.toString() },\n    {\n      field: 'Start timestamp',\n      value: `${new Date(\n        vesting.account.startTs.toNumber() * 1000,\n      ).toLocaleString()} (${vesting.account.startTs.toString()})`,\n    },\n    {\n      field: 'End timestamp',\n      value: `${new Date(\n        vesting.account.endTs.toNumber() * 1000,\n      ).toLocaleString()} (${vesting.account.endTs.toString()})`,\n    },\n    { field: 'Vault', value: vesting.account.vault.toString() },\n    {\n      field: 'Realizer program',\n      value: vesting.account.realizor\n        ? vesting.account.realizor.program.toString()\n        : 'None',\n    },\n    {\n      field: 'Realizer metadata',\n      value: vesting.account.realizor\n        ? vesting.account.realizor.metadata.toString()\n        : 'None',\n    },\n    {\n      field: 'Grantor',\n      value: vesting.account.grantor.toString(),\n    },\n  ];\n\n  return (\n    <Card\n      key={vesting.publicKey.toString()}\n      onMouseOver={() => setHover(true)}\n      onMouseOut={() => setHover(false)}\n      style={{\n        marginTop: '24px',\n        cursor: hover ? 'pointer' : 'default',\n      }}\n    >\n      <CardContent style={{ paddingBottom: '16px' }}>\n        <ListItem onClick={() => setExpanded(!expanded)}>\n          <div\n            style={{\n              width: '100%',\n              display: 'flex',\n              justifyContent: 'space-between',\n            }}\n          >\n            <ListItemIcon>\n              {getImage(tokenInfos.get(vesting.account.mint.toString()), {\n                marginRight: '16px',\n                width: '56px',\n              })}\n            </ListItemIcon>\n            <ListItemText\n              primary={\n                <Link\n                  href={\n                    `https://explorer.solana.com/account/${vesting.publicKey.toBase58()}` +\n                    urlSuffix\n                  }\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  {vesting.publicKey.toString()}\n                </Link>\n              }\n              secondary={`${startLabel}, ${endLabel} | ${vesting.account.periodCount.toNumber()} periods`}\n            />\n            <div\n              style={{\n                marginTop: '6px',\n                color: 'rgba(0, 0, 0, 0.54)',\n                display: 'flex',\n                justifyContent: 'space-between',\n                flexDirection: 'column',\n                maxWidth: '200px',\n              }}\n            >\n              <Typography\n                style={{ overflow: 'hidden', whiteSpace: 'nowrap' }}\n                variant=\"body1\"\n              >\n                {outstandingLabel}\n              </Typography>\n            </div>\n          </div>\n        </ListItem>\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <Typography></Typography>\n          {vestingDates.length <= 15 ? (\n            <ChartistGraph\n              data={{\n                labels: vestingDates,\n                series: [cumulativeVesting],\n              }}\n              options={\n                {\n                  axisY: {\n                    type: FixedScaleAxis,\n                    low: 0,\n                    high: cumulativeVesting[cumulativeVesting.length - 1],\n                    ticks: cumulativeVesting,\n                  },\n                  lineSmooth: Interpolation.step(),\n                  height: 400,\n                } as IChartOptions\n              }\n              type={'Line'}\n            />\n          ) : (\n            <div style={{ textAlign: 'center', fontWeight: 'bold' }}>\n              {/* TOOD: graphs for vesting accounts with a lot of periods. */}A\n              graph isn't available for this account.\n            </div>\n          )}\n          <div>\n            {isCustomMint && (\n              <div\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <b>\n                  Note: custom mints (i.e. not SRM/MSRM) display raw token\n                  amounts without decimals.\n                </b>\n              </div>\n            )}\n            <Table>\n              <TableBody>\n                {rows.map(r => {\n                  return (\n                    <TableRow>\n                      <TableCell>{r.field}</TableCell>\n                      <TableCell align=\"right\">\n                        {r.value === null ? (\n                          <CircularProgress\n                            style={{\n                              height: '20px',\n                              width: '20px',\n                              padding: 0,\n                            }}\n                          />\n                        ) : (\n                          r.value\n                        )}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n            <div style={{ display: 'flex', marginTop: '15px' }}>\n              <OwnedTokenAccountsSelect\n                decimals={mintAccount ? mintAccount.decimals : undefined}\n                mint={vesting.account.mint}\n                onChange={(f: PublicKey) => setWithdrawalAccount(f)}\n              />\n              <div style={{ marginLeft: '20px', width: '191px' }}>\n                <Button\n                  style={{ fontSize: '12px' }}\n                  color=\"primary\"\n                  disabled={!withdrawEnabled}\n                  variant=\"contained\"\n                  onClick={() =>\n                    withdraw().catch(err => {\n                      let msg = err.toString();\n                      if (\n                        msg &&\n                        msg.split('custom program error: 0x78').length === 2\n                      ) {\n                        msg = 'Unrealized rewards. Please unstake';\n                      }\n                      enqueueSnackbar(\n                        `Error withdrawing from vesting account: ${err.toString()}`,\n                        {\n                          variant: 'error',\n                        },\n                      );\n                    })\n                  }\n                >\n                  Unlock tokens\n                </Button>\n              </div>\n            </div>\n          </div>\n        </Collapse>\n      </CardContent>\n    </Card>\n  );\n}\n\n// TODO: locale format without minutes, hours, seconds?\nfunction formatDate(d: Date): string {\n  return `${d.getMonth() + 1}/${d.getDate()}/${d.getFullYear()}`;\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport Container from '@material-ui/core/Container';\nimport List from '@material-ui/core/List';\nimport { useWallet } from '../../components/common/WalletProvider';\nimport { State as StoreState } from '../../store/reducer';\nimport NewVestingButton from './NewVesting';\nimport VestingAccountCard from './VestingAccountCard';\n\nexport default function Vestings() {\n  const { wallet } = useWallet();\n  const { vestingAccounts, network } = useSelector((state: StoreState) => {\n    return {\n      vestingAccounts: state.lockup.vestings.map(v => {\n        return {\n          publicKey: v,\n          account: state.accounts[v.toString()],\n        };\n      }),\n      network: state.common.network,\n    };\n  });\n\n  return (\n    <Container fixed maxWidth=\"md\">\n      <div style={{ width: '100%' }}>\n        <div style={{ marginTop: '24px', marginBottom: '24px' }}>\n          <link\n            rel=\"stylesheet\"\n            href=\"//cdn.jsdelivr.net/chartist.js/latest/chartist.min.css\"\n          />\n          <script src=\"//cdn.jsdelivr.net/chartist.js/latest/chartist.min.js\"></script>\n          {wallet.publicKey && (\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                marginBottom: '24px',\n              }}\n            >\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  flexDirection: 'column',\n                }}\n              >\n                <Typography\n                  style={{\n                    fontSize: '20px',\n                    fontWeight: 'bold',\n                  }}\n                >\n                  Projected Unlocks\n                </Typography>\n              </div>\n              <div>\n                <NewVestingButton />\n              </div>\n            </div>\n          )}\n          <Typography color=\"textSecondary\">\n            In addition to a vesting schedule, locked token accounts are subject\n            to an application dependent\n            <b> realization condition</b>, determining if and when locked tokens\n            are given to a user. For example, in the case of locked staking\n            rewards, locked tokens become realized in the event of unstaking. If\n            one never unstakes, one never receives locked token rewards.\n          </Typography>\n          <List\n            disablePadding\n            style={{ marginLeft: 'auto', marginRight: 'auto' }}\n          >\n            {vestingAccounts.map(v => (\n              <VestingAccountCard network={network} vesting={v} />\n            ))}\n            {vestingAccounts.length === 0 && (\n              <Card\n                style={{\n                  marginTop: '24px',\n                }}\n              >\n                <CardContent>\n                  <ListItem>\n                    <div\n                      style={{\n                        width: '100%',\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                      }}\n                    >\n                      <Typography color=\"textSecondary\" variant=\"h6\">\n                        No vesting accounts found\n                      </Typography>\n                    </div>\n                  </ListItem>\n                </CardContent>\n              </Card>\n            )}\n          </List>\n        </div>\n      </div>\n    </Container>\n  );\n}\n","import React from 'react';\nimport Vestings from '../components/lockups/Vestings';\n\nexport default function LockupPage() {\n  return <Vestings />;\n}\n","import React from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport Multisig from '../components/multisig/Multisig';\nimport { PublicKey } from '@solana/web3.js';\n\nexport default function MultisigPage() {\n  return <Multisig />;\n}\n\nexport function MultisigInstancePage() {\n  const history = useHistory();\n  const location = useLocation();\n  const path = location.pathname.split('/');\n  if (path.length !== 3) {\n    history.push(`/multisig`);\n    return <></>;\n  } else {\n    const multisig = new PublicKey(path[2]);\n    return <Multisig multisig={multisig} />;\n  }\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { SnackbarProvider } from 'notistack';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { unstable_createMuiStrictModeTheme as createMuiTheme } from '@material-ui/core/styles';\nimport { store } from './store';\nimport WalletProvider from './components/common/WalletProvider';\nimport BootstrapProvider from './components/common/BootstrapProvider';\nimport { TokenRegistryProvider } from './utils/tokens';\nimport Layout from './components/common/Layout';\nimport MyNodePage from './pages/MyNode';\nimport LockupPage from './pages/Lockup';\nimport MultisigPage, { MultisigInstancePage } from './pages/Multisig';\n\nfunction App() {\n  const theme = createMuiTheme({\n    palette: {\n      background: {\n        default: 'rgb(255,255,255)',\n      },\n    },\n    typography: {\n      fontFamily: ['Source Sans Pro', 'sans-serif'].join(','),\n    },\n    overrides: {},\n  });\n  return (\n    <Provider store={store}>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <SnackbarProvider maxSnack={5} autoHideDuration={8000}>\n\t\t\t\t\t<TokenRegistryProvider>\n\t\t\t\t\t\t<WalletProvider>\n\t\t\t\t\t\t\t<BootstrapProvider>\n\t\t\t\t\t\t\t\t<HashRouter basename={'/'}>\n\t\t\t\t\t\t\t\t\t<Layout>\n\t\t\t\t\t\t\t\t\t\t<Route exact path=\"/\" component={MyNodePage} />\n\t\t\t\t\t\t\t\t\t\t<Route exact path=\"/stake\" component={MyNodePage} />\n\t\t\t\t\t\t\t\t\t\t<Route exact path=\"/lockup\" component={LockupPage} />\n\t\t\t\t\t\t\t\t\t\t<Route exact path=\"/multisig\" component={MultisigPage} />\n\t\t\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\t\t\t\tpath=\"/multisig/:address\"\n\t\t\t\t\t\t\t\t\t\t\tcomponent={MultisigInstancePage}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Layout>\n\t\t\t\t\t\t\t\t</HashRouter>\n\t\t\t\t\t\t\t</BootstrapProvider>\n\t\t\t\t\t\t</WalletProvider>\n\t\t\t\t\t</TokenRegistryProvider>\n        </SnackbarProvider>\n      </MuiThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport { TransactionSignature } from '@solana/web3.js';\nimport { State as StoreState } from '../../store/reducer';\n\ntype Props = {\n  signature: string;\n};\n\nexport async function withTx(\n  snack: any,\n  beforeLabel: string,\n  afterLabel: string,\n  execTx: () => Promise<TransactionSignature>,\n) {\n  snack.enqueueSnackbar(beforeLabel, {\n    variant: 'info',\n  });\n  try {\n    let tx = await execTx();\n    snack.closeSnackbar();\n    snack.enqueueSnackbar(afterLabel, {\n      variant: 'success',\n      action: <ViewTransactionOnExplorerButton signature={tx} />,\n    });\n  } catch (err) {\n    snack.enqueueSnackbar(`Error: ${err.toString()}`, {\n      variant: 'error',\n    });\n  }\n}\n\nexport function ViewTransactionOnExplorerButton(props: Props) {\n  const { signature } = props;\n  const { explorerClusterSuffix } = useSelector((state: StoreState) => {\n    return {\n      explorerClusterSuffix: state.common.network.explorerClusterSuffix,\n    };\n  });\n  const urlSuffix = `?cluster=${explorerClusterSuffix}`;\n  return (\n    <Button\n      color=\"inherit\"\n      component=\"a\"\n      target=\"_blank\"\n      rel=\"noopener\"\n      href={`https://explorer.solana.com/tx/${signature}` + urlSuffix}\n    >\n      View on Solana Explorer\n    </Button>\n  );\n}\n","import { Transaction, PublicKey, Account } from '@solana/web3.js';\nimport * as serumCmn from '@project-serum/common';\nimport * as anchor from '@project-serum/anchor';\n\nexport async function registrarSigner(\n  programId: PublicKey,\n  registrar: PublicKey,\n): Promise<{ publicKey: PublicKey; nonce: number }> {\n  const [publicKey, nonce] = await anchor.web3.PublicKey.findProgramAddress(\n    [registrar.toBuffer()],\n    programId,\n  );\n  return {\n    publicKey,\n    nonce,\n  };\n}\n\nexport async function memberSigner(\n  programId: PublicKey,\n  registrar: PublicKey,\n  member: PublicKey,\n): Promise<{ publicKey: PublicKey; nonce: number }> {\n  const [publicKey, nonce] = await anchor.web3.PublicKey.findProgramAddress(\n    [registrar.toBuffer(), member.toBuffer()],\n    programId,\n  );\n  return {\n    publicKey,\n    nonce,\n  };\n}\n\nexport async function vendorSigner(\n  programId: PublicKey,\n  registrar: PublicKey,\n  vendor: PublicKey,\n): Promise<{ publicKey: PublicKey; nonce: number }> {\n  const [publicKey, nonce] = await anchor.web3.PublicKey.findProgramAddress(\n    [registrar.toBuffer(), vendor.toBuffer()],\n    programId,\n  );\n  return {\n    publicKey,\n    nonce,\n  };\n}\n\n// Returns the seed used to derive a member address. This is not necessary, but\n// a UX convenience. Each member address is a deterministic function of the\n// program, beneficiary, and this (constant) seed.\nexport async function memberSeed(registrar: PublicKey): Promise<string> {\n  const seed = await anchor.utils.sha256(`${registrar.toString()}:Member`);\n  // The max length of seeds allowed by Solana is 32.\n  return seed.slice(0, 32);\n}\n\n// Creates all the SPL otken vaults needed for constructing a `Member` account.\nexport async function createBalanceSandbox(\n  provider: serumCmn.Provider,\n  r: any,\n  registrySigner: PublicKey,\n) {\n  const spt = new Account();\n  const vault = new Account();\n  const vaultStake = new Account();\n  const vaultPw = new Account();\n\n  const lamports = await provider.connection.getMinimumBalanceForRentExemption(\n    165,\n  );\n\n  const createSptIx = await serumCmn.createTokenAccountInstrs(\n    provider,\n    spt.publicKey,\n    r.poolMint,\n    registrySigner,\n    lamports,\n  );\n  const createVaultIx = await serumCmn.createTokenAccountInstrs(\n    provider,\n    vault.publicKey,\n    r.mint,\n    registrySigner,\n    lamports,\n  );\n  const createVaultStakeIx = await serumCmn.createTokenAccountInstrs(\n    provider,\n    vaultStake.publicKey,\n    r.mint,\n    registrySigner,\n    lamports,\n  );\n  const createVaultPwIx = await serumCmn.createTokenAccountInstrs(\n    provider,\n    vaultPw.publicKey,\n    r.mint,\n    registrySigner,\n    lamports,\n  );\n  let tx0 = new Transaction();\n  tx0.add(\n    ...createSptIx,\n    ...createVaultIx,\n    ...createVaultStakeIx,\n    ...createVaultPwIx,\n  );\n  let signers0 = [spt, vault, vaultStake, vaultPw];\n\n  const tx = { tx: tx0, signers: signers0 };\n\n  return [\n    tx,\n    {\n      spt: spt.publicKey,\n      vault: vault.publicKey,\n      vaultStake: vaultStake.publicKey,\n      vaultPw: vaultPw.publicKey,\n    },\n  ];\n}\n\n// Returns all events in the reward queue.\nexport function rewardEvents(rewardQ: any): any[] {\n  let events = [];\n  let tail = rewardQ.tail;\n  while (tail < rewardQ.head) {\n    let idx = tail % rewardQ.events.length;\n    events.push(rewardQ.events[idx]);\n    tail += 1;\n  }\n  return events;\n}\n","import { PublicKey } from '@solana/web3.js';\n\ntype Networks = { [label: string]: Network };\n\nexport type Network = {\n  // Cluster.\n  label: string;\n  url: string;\n  explorerClusterSuffix: string;\n\n  // Faucets.\n  srmFaucet: PublicKey | null;\n  msrmFaucet: PublicKey | null;\n\n  // Programs.\n  registryProgramId: PublicKey;\n  lockupProgramId: PublicKey;\n  multisigProgramId: PublicKey;\n\n  // Staking instances.\n  registrars: { [token: string]: PublicKey };\n\n  // Whitelisted token mints.\n  mints: { [token: string]: PublicKey };\n};\n\nexport const networks: Networks = {\n  mainnet: {\n    // Cluster.\n    label: 'Mainnet Beta',\n    url: 'https://solana-api.projectserum.com',\n    //url: 'https://api.mainnet-beta.solana.com',\n    explorerClusterSuffix: '',\n\n    srmFaucet: null,\n    msrmFaucet: null,\n\n    registryProgramId: new PublicKey(\n      'GrAkKfEpTKQuVHG2Y97Y2FF4i7y7Q5AHLK94JBy7Y5yv',\n    ),\n    lockupProgramId: new PublicKey(\n      '6ebQNeTPZ1j7k3TtkCCtEPRvG7GQsucQrZ7sSEDQi9Ks',\n    ),\n    multisigProgramId: new PublicKey(\n      '3S6ALMCGVib4X3vVR3CLpm2K6Ng5qbWFYMTo5jfxWcEq',\n    ),\n    registrars: {\n      srm: new PublicKey('5vJRzKtcp4fJxqmR7qzajkaKSiAb6aT9grRsaZKXU222'),\n      msrm: new PublicKey('7uURiX2DwCpRuMFebKSkFtX9v5GK1Cd8nWLL8tyoyxZY'),\n      maps: new PublicKey('9tzkorTXKbw73hokMsq34R6ADd13eJF9X4udXQLiGAKc'),\n      oxy: new PublicKey('DsWhta1RWA9NYEamaeYsGHpfLRX91bA4bWGnaivtFju2'),\n      fida: new PublicKey('5C2ayX1E2SJ5kKEmDCA9ue9eeo3EPR34QFrhyzbbs3qh'),\n    },\n    mints: {\n      srm: new PublicKey('SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt'),\n      msrm: new PublicKey('MSRMcoVyrFxnSgo5uXwone5SKcGhT1KEJMFEkMEWf9L'),\n      maps: new PublicKey('MAPS41MDahZ9QdKXhVa4dWB9RuyfV4XqhyAZ8XcYepb'),\n      oxy: new PublicKey('z3dn17yLaGMKffVogeFHQ9zWVcXgqgf3PQnDsNs2g6M'),\n      fida: new PublicKey('EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp'),\n    },\n  },\n  devnet: {\n    // Cluster.\n    label: 'Devnet',\n    url: 'https://devnet.solana.com',\n    explorerClusterSuffix: 'devnet',\n\n    srmFaucet: null,\n    msrmFaucet: null,\n\n    registryProgramId: new PublicKey(\n      'HutezizsH6GE42X1Gk9i5dBrpeCexsjRtxtGBGL9TnXP',\n    ),\n    multisigProgramId: new PublicKey(\n      '2xLp25wHRsHZCWD2oNDhptzTnDCh97YNGjY7wGyxQMCC',\n    ),\n    lockupProgramId: new PublicKey(\n      '6RPATY1CcWgiMZiJzA61fbKSDJTVsQqSr8gdS4vwC68i',\n    ),\n    registrars: {\n      token1: new PublicKey('GCnZCNut5SYiLCBMgaSSqU6tDPBdNbQnCmpS5YNHTpbo'),\n      token2: new PublicKey('7HnUrnCPwuGxiVALRWpbUvg1qhhX6KUbS1sg92YPTatr'),\n    },\n    mints: {\n      token1: new PublicKey('EVWmQkGL1AtYbyEG9NvyRN6MhvBaCrvs3Yw4vfsAYTKM'),\n      token2: new PublicKey('Hw7xpY3gatekvs9P3uvicauE3RRQcB7xLtuH8RkQdB3i'),\n    },\n  },\n\n  // Fill in with your local cluster addresses.\n  localhost: {\n    // Cluster.\n    label: 'Localhost',\n    url: 'http://localhost:8899',\n    explorerClusterSuffix: 'localhost',\n\n    srmFaucet: null,\n    msrmFaucet: null,\n\n    multisigProgramId: new PublicKey(\n      '9z7Pq56To96qbVLzuBcf47Lc7u8uUWZh6k5rhcaTsDjz',\n    ),\n    registryProgramId: new PublicKey(\n      'A3ukM9swAsTqVC6g5Zy9FsWXofe5f2JhXMEfzenNf9Q7',\n    ),\n    lockupProgramId: new PublicKey(\n      '2z65xTKJDM4iJBVz5aXtNrWfQvKGgNJvnqY1GL2mkimu',\n    ),\n    registrars: {\n      token1: new PublicKey('Fwi5pie2VgWTDUSRNkca1HdFCke5r3v3mY83JbxtC3CJ'),\n      token2: new PublicKey('9kCGBWgHzGGChvmAsmu5jrXwEShZfLxKRTmKdxEpFUBr'),\n    },\n    mints: {\n      token1: new PublicKey('2aE1pietadYMeDtdqKayS4SVo9W4xtC3U7SN4iGWCVcX'),\n      token2: new PublicKey('Cgan7PWyBH6Z7JNA6f9kDYgwBMZBxRexpdd29PJgnqah'),\n    },\n  },\n};\n"],"sourceRoot":""}